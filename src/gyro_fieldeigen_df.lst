%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /global/u2/b/bassem/gyro-EP/src/gyro_fieldeigen_df.f90
Compiled : 01/19/21  15:35:38
Compiler : Version 9.1.0
Ftnlx    : Version 9.1.0 
Target   : x86-64
Command  : ftn_driver.exe -hcpu=haswell -hdynamic -D__CRAYXC -D__CRAY_HASWELL
           -D__CRAYXT_COMPUTE_LINUX_TARGET -hnetwork=aries -hnoomp -em
           -J/global/homes/b/bassem/gyro-EP/modules -sreal64 -eD -Ktrap=fp -m1
           -Rbcdps -G0 -I/opt/cray/pe/fftw/3.3.8.4/haswell/include
           -c gyro_fieldeigen_df.f90
           -I/opt/cray/pe/cce/9.1.0/cce-clang/x86_64/lib/clang/9.0.0/include
           -I/opt/cray/pe/cce/9.1.0/cce/x86_64/include/craylibs -I/usr/include
           -I/usr/include -I/opt/cray/pe/fftw/3.3.8.4/haswell/include
           -I/opt/cray/pe/libsci/19.06.1/CRAY/9.0/x86_64/include
           -I/opt/cray/pe/mpt/7.7.10/gni/mpich-cray/9.0/include
           -I/opt/cray/pe/hdf5/1.10.5.2/cray/9.0/include
           -I/opt/cray/pe/netcdf/4.6.3.2/cray/9.0/include
           -I/opt/cray/rca/2.2.20-7.0.1.1_4.53__g8e3fb5b.ari/include
           -I/opt/cray/alps/6.6.58-7.0.1.1_6.10__g437d88db.ari/include
           -I/opt/cray/xpmem/2.2.20-7.0.1.1_4.14__g0475745.ari/include
           -I/opt/cray/gni-headers/5.0.12.0-7.0.1.1_6.32__g3b1768f.ari/include
           -I/opt/cray/dmapp/7.1.1-7.0.1.1_4.54__g38cf134.ari/include
           -I/opt/cray/pe/pmi/5.0.14/include
           -I/opt/cray/ugni/6.0.14.0-7.0.1.1_7.40__ge78e5b0.ari/include
           -I/opt/cray/udreg/2.3.2-7.0.1.1_3.38__g8175d3d.ari/include
           -I/opt/cray/wlm_detect/1.3.3-7.0.1.1_4.16__g7109084.ari/include
           -I/opt/cray/krca/2.2.6-7.0.1.1_5.39__gb641b12.ari/include
           -I/opt/cray-hss-devel/9.0.0/include
Program
  Units  : GYRO_FIELDEIGEN_DF

ftnlx report
------------
Source   : /global/u2/b/bassem/gyro-EP/src/gyro_fieldeigen_df.f90
Date     : 01/19/2021  15:35:38


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    1.    !-----------------------------------------------------------------
    2.    ! gyro_fieldeigen_df.f90
    3.    !
    4.    ! PURPOSE:
    5.    !  Compute distribution function given field eigenmode.
    6.    !------------------------------------------------------------------
    7.    
    8.    subroutine gyro_fieldeigen_df
    9.    
   10.      use mpi
   11.      use gyro_globals
   12.      use gyro_pointers
   13.      use math_constants
   14.      use gyro_fieldeigen_private
   15.    
   16.      !---------------------------------------------------------------
   17.      implicit none
   18.      !---------------------------------------------------
   19.    
   20.      complex, dimension(:), allocatable :: right_vec
   21.      complex, dimension(:), allocatable :: h_vec
   22.    
   23.      integer, dimension(n_energy/n_proc,n_lambda) :: p_nek_vec
   24.    
   25.      a_eigen_loc(:,:) = (0.0,0.0)
ftn-6263 ftn: VECTOR GYRO_FIELDEIGEN_DF, File = gyro_fieldeigen_df.f90, Line = 25 
  A loop starting at line 25 was not vectorized because it contains a reference to a non-vector intrinsic on line 25.

   26.    
   27.      do is=1,n_kinetic
   28.         p_nek_loc = 0
   29.         do ie2=1,n_energy/n_proc
   30.    
   31.            ie = ie2+i_proc_1*n_energy/n_proc
   32.    
   33.            do k=1,n_lambda
   34.    
   35.               p_nek_loc = p_nek_loc+1
   36.               p_nek_vec(ie2,k) = p_nek_loc
   37.    
   38.               ck = class(k)
   39.    
   40.               !-------------------------------------------------------------
   41.               ! v_omegastar = -omega_star
   42.               !
   43.               do i=1,n_x
   44.    
   45.                  do m=1,n_stack
   46.    
   47.                     mk = m + (k-1)*n_stack 
   48.    
   49.                     v_omegastar(i,mk) = -i_c*omega_star(m,i,p_nek_loc,is)
   50.    
   51.                  enddo ! m
   52.    
   53.               enddo ! i
   54.               !-------------------------------------------------------------
   55.    
   56.               !-------------------------------------------------------------
   57.               ! fg = conjg(F_blend) * Gyroavgop
   58.               !
   59.               do m=1,n_stack
   60.    
   61.                  m0 = m_phys(ck,m)
   62.                  mk = m+(k-1)*n_stack 
   63.    
   64.                  do i=1,n_x
   65.                     do i_diff=-m_gyro,m_gyro-i_gyro
   66.    
   67.                        fg(:,i_diff,i,mk,1) = w_gyro0(m0,i_diff,i,p_nek_loc,is) &
ftn-6262 ftn: VECTOR GYRO_FIELDEIGEN_DF, File = gyro_fieldeigen_df.f90, Line = 67 
  A loop starting at line 67 was not vectorized because it contains a call to a subroutine or function on line 67.

   68.                             *conjg(c_blend(:,m0,i,p_nek_loc))
   69.    
   70.                        if (n_field > 1) then
   71.                           fg(:,i_diff,i,mk,2) = w_gyro0(m0,i_diff,i,p_nek_loc,is) &
ftn-6262 ftn: VECTOR GYRO_FIELDEIGEN_DF, File = gyro_fieldeigen_df.f90, Line = 71 
  A loop starting at line 71 was not vectorized because it contains a call to a subroutine or function on line 71.

   72.                                *(-v_para(m,i,p_nek_loc,is))  &
   73.                                *conjg(c_blend(:,m0,i,p_nek_loc))
   74.                        endif
   75.    
   76.                        if (n_field > 2) then
   77.                           fg(:,i_diff,i,mk,3) = 2.0*energy(ie)*lambda(i,k) &
ftn-6262 ftn: VECTOR GYRO_FIELDEIGEN_DF, File = gyro_fieldeigen_df.f90, Line = 77 
  A loop starting at line 77 was not vectorized because it contains a call to a subroutine or function on line 77.

   78.                                *tem_s(is,i)/z(is) &
   79.                                *w_gyro1(m0,i_diff,i,p_nek_loc,is) &
   80.                                *conjg(c_blend(:,m0,i,p_nek_loc))
   81.    
   82.                        endif
   83.                     enddo
   84.                  enddo
   85.               enddo ! m
   86.               !-------------------------------------------------------------
   87.    
   88.            enddo ! k
   89.    
   90.            if (collision_flag == 1 .and. is == indx_e) then
   91.    
   92.               propinvk(:,:) = (0.0,0.0)
ftn-6263 ftn: VECTOR GYRO_FIELDEIGEN_DF, File = gyro_fieldeigen_df.f90, Line = 92 
  A loop starting at line 92 was not vectorized because it contains a reference to a non-vector intrinsic on line 92.

   93.    
   94.               ! Dense-in-k (collisions)
   95.    
   96.               !------------------------------------------------------------
   97.               ! Set propagator elements
   98.               !
   99.               ! Diagonal in k
  100.               !
  101.               do i=1,n_x
  102.                  do m=1,n_stack
  103.                     do k=1,n_lambda
  104.                        im = i+(m-1)*n_x
  105.                        imk = i+(m-1)*n_x+(k-1)*n_x*n_stack
  106.                        do ip=1,n_x
  107.                           do mp=1,n_stack
  108.                              impr = ip+(mp-1)*n_x
  109.                              imkp = ip+(mp-1)*n_x+(k-1)*n_x*n_stack
  110.    
  111.                              propinvk(imk,imkp) = vdotgrad(im,impr,k,ie2,is)
  112.    
  113.                           enddo
  114.                        enddo
  115.                     enddo
  116.                  enddo
  117.               enddo
  118.               !------------------------------------------------------------
  119.    
  120.               !------------------------------------------------------------
  121.               ! Diagonal in i
  122.               !
  123.               do i=1,n_x
  124.                  do m=1,n_stack
  125.                     do k=1,n_lambda
  126.                        mk = m+(k-1)*n_stack
  127.                        imk = i+(m-1)*n_x+(k-1)*n_x*n_stack
  128.                        do mp=1,n_stack
  129.                           do kp=1,n_lambda
  130.                              mkp = mp+(kp-1)*n_stack
  131.                              imkp = i+(mp-1)*n_x+(kp-1)*n_x*n_stack
  132.    
  133.                              propinvk(imk,imkp) =  propinvk(imk,imkp) &
  134.                                   -nu_op(mkp,mk,i,ie2)
  135.    
  136.                           enddo
  137.                        enddo
  138.                     enddo
  139.                  enddo
  140.               enddo
  141.               !------------------------------------------------------------
  142.    
  143.               !------------------------------------------------------------
  144.               ! Diagonal in imk
  145.               !
  146.               do imk=1,n_imk
  147.                  propinvk(imk,imk) = propinvk(imk,imk)-i_c*omega_eigen
  148.               enddo
  149.               !-----------------------------------------------------------
  150.    
  151.               !-----------------------------------------------------------
  152.               ! Invert the propagator: final result is "propinv"
  153.               ! (these are by far the most expensive operations)
  154.               !
  155.               call ZGETRF(n_imk,n_imk,propinvk,n_imk,i_piv_imk,info_imk)
  156.               call ZGETRI(n_imk,propinvk,n_imk,i_piv_imk,work_imk,n_imk,info_imk)
  157.               !-----------------------------------------------------------
  158.    
  159.               gk_rightk(:,:) = 0.0
ftn-6263 ftn: VECTOR GYRO_FIELDEIGEN_DF, File = gyro_fieldeigen_df.f90, Line = 159 
  A loop starting at line 159 was not vectorized because it contains a reference to a non-vector intrinsic on line 159.

  160.               do ixp = 1,n_field
  161.                  do ip=1,n_x
  162.                     do jp=1,n_blend
  163.                        ijp = ip + (jp-1)*n_x + (ixp-1)*n_x*n_blend
  164.                        do mp=1,n_stack
  165.                           do kp=1,n_lambda
  166.                              mkp = mp + (kp-1)*n_stack
  167.                              do idiff_ipp=-m_gyro,m_gyro-i_gyro
  168.    
  169.                                 ipp  = i_cyc(ip+idiff_ipp)
  170.                                 imkp = ipp+n_x*(mp-1)+n_x*n_stack*(kp-1)
  171.    
  172.                                 gk_rightk(imkp,ijp) = gk_rightk(imkp,ijp) &
  173.                                      +(-i_c*omega_eigen*z(is)*alpha_s(is,ipp) &
  174.                                      + v_omegastar(ipp,mkp)) &
  175.                                      * conjg(fg(jp,idiff_ipp,ip,mkp,ixp))
  176.    
  177.                              enddo
  178.                           enddo
  179.                        enddo
  180.                     enddo
  181.                  enddo
  182.               enddo ! ixp
  183.    
  184.               allocate(right_vec(n_imk))
  185.               allocate(h_vec(n_imk))
  186.    
  187.               call ZGEMV('N',n_imk,n_eigen,cmplx_1,gk_rightk,n_imk,&
  188.                    b_eigen,1,cmplx_0,right_vec,1)
  189.               call ZGEMV('N',n_imk,n_imk,cmplx_1,propinvk,n_imk,&
  190.                    right_vec,1,cmplx_0,h_vec,1)
  191.    
  192.               do i=1,n_x
  193.                  do m=1,n_stack
  194.                     do k=1,n_lambda
  195.                        imk = i+(m-1)*n_x+(k-1)*n_x*n_stack
  196.                        h(m,i,p_nek_vec(ie2,k),is) = h_vec(imk)
  197.                     enddo
  198.                  enddo
  199.               enddo
  200.    
  201.               deallocate(right_vec)
  202.               deallocate(h_vec)
  203.    
  204.            else
  205.    
  206.               ! Diagonal-in-k (no collisions)
  207.    
  208.               do k=1,n_lambda
  209.    
  210.                  !-----------------------------------------------------------
  211.                  ! Finalize definition of propagator
  212.                  !
  213.                  propinv(:,:) = vdotgrad(:,:,k,ie2,is)
ftn-6262 ftn: VECTOR GYRO_FIELDEIGEN_DF, File = gyro_fieldeigen_df.f90, Line = 213 
  A loop starting at line 213 was not vectorized because it contains a call to a subroutine or function on line 213.

  214.    
  215.                  do im=1,n_im
  216.                     propinv(im,im) = propinv(im,im)-i_c*omega_eigen
  217.                  enddo
  218.                  !-----------------------------------------------------------
  219.    
  220.                  !-----------------------------------------------------------
  221.                  ! Invert the propagator: final result is "propinv"
  222.                  !
  223.                  call ZGETRF(n_im,n_im,propinv,n_im,i_piv_im,info_im)
  224.                  call ZGETRI(n_im,propinv,n_im,i_piv_im,work_im,n_im,info_im)
  225.                  !-----------------------------------------------------------
  226.    
  227.                  gk_right(:,:) = 0.0
ftn-6263 ftn: VECTOR GYRO_FIELDEIGEN_DF, File = gyro_fieldeigen_df.f90, Line = 227 
  A loop starting at line 227 was not vectorized because it contains a reference to a non-vector intrinsic on line 227.

  228.                  do ixp = 1,n_field
  229.                     do ip=1,n_x
  230.                        do jp=1,n_blend
  231.                           ijp = ip + (jp-1)*n_x + (ixp-1)*n_x*n_blend
  232.                           do mp=1,n_stack
  233.                              mkp = mp + (k-1)*n_stack
  234.                              do idiff_ipp=-m_gyro,m_gyro-i_gyro
  235.    
  236.                                 ipp  = i_cyc(ip+idiff_ipp)
  237.                                 impr = ipp + n_x*(mp-1)
  238.    
  239.                                 gk_right(impr,ijp) = gk_right(impr,ijp) &
  240.                                      +(-i_c*omega_eigen*z(is)*alpha_s(is,ipp) &
  241.                                      + v_omegastar(ipp,mkp)) &
  242.                                      * conjg(fg(jp,idiff_ipp,ip,mkp,ixp))
  243.    
  244.                              enddo
  245.                           enddo
  246.                        enddo
  247.                     enddo
  248.                  enddo ! ixp
  249.    
  250.                  allocate(right_vec(n_im))
  251.                  allocate(h_vec(n_im))
  252.    
  253.                  call ZGEMV('N',n_im,n_eigen,cmplx_1,gk_right,n_im,&
  254.                       b_eigen,1,cmplx_0,right_vec,1)
  255.                  call ZGEMV('N',n_im,n_im,cmplx_1,propinv,n_im,&
  256.                       right_vec,1,cmplx_0,h_vec,1)
  257.    
  258.                  do i=1,n_x
  259.                     do m=1,n_stack
  260.                        im = i+(m-1)*n_x
  261.                        ! This is really H = cap_h
  262.                        h(m,i,p_nek_vec(ie2,k),is) = h_vec(im)
  263.                     enddo
  264.                  enddo
  265.    
  266.                  deallocate(right_vec)
  267.                  deallocate(h_vec)
  268.    
  269.               enddo ! k
  270.    
  271.            endif ! collision_flag test
  272.    
  273.         enddo  ! ie2
  274.    
  275.      enddo ! is
  276.    
  277.      call gyro_field_interpolation
  278.    
  279.      p_nek_loc = 0
  280.      do p_nek=1+i_proc_1,n_nek_1,n_proc_1
  281.    
  282.         p_nek_loc = p_nek_loc+1
  283.    
  284.         do m=1,n_stack
  285.            do is=1,n_kinetic
  286.               do i=1,n_x
  287.                  ! h = H-z*alpha*<psi>
  288.                  h(m,i,p_nek_loc,is) = h(m,i,p_nek_loc,is)-&
  289.                       z(is)*alpha_s(is,i)*gyro_u(m,i,p_nek_loc,is)
  290.               enddo
  291.            enddo
  292.         enddo
  293.    
  294.      enddo
  295.    
  296.      h_old = h
ftn-6332 ftn: VECTOR GYRO_FIELDEIGEN_DF, File = gyro_fieldeigen_df.f90, Line = 296 
  A loop starting at line 296 was not vectorized because it does not map well onto the target architecture.

  297.    
  298.    end subroutine gyro_fieldeigen_df


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                     C o m m o n   B l o c k   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIFCMB5/                            Length: 4 bytes

     GYRO_FIELDEIGEN_DF               Block is used from MPI_CONSTANTS

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIFCMB9/                            Length: 4 bytes

     GYRO_FIELDEIGEN_DF               Block is used from MPI_CONSTANTS

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIPRIV1/                            Length: 28 bytes

     GYRO_FIELDEIGEN_DF               Block is used from MPI_CONSTANTS

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIPRIV2/                            Length: 24 bytes

     GYRO_FIELDEIGEN_DF               Block is used from MPI_CONSTANTS

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIPRIVC/                            Length: 2 bytes

     GYRO_FIELDEIGEN_DF               Block is used from MPI_CONSTANTS


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                         E x t e r n a l   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name  Messages
----  --------
CHAR(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
COMMEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
COMMNEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
CONJG(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_FIELDEIGEN_DF (Line 68, file gyro_fieldeigen_df.f90)
                   GYRO_FIELDEIGEN_DF (Line 73, file gyro_fieldeigen_df.f90)
                   GYRO_FIELDEIGEN_DF (Line 80, file gyro_fieldeigen_df.f90)
                   GYRO_FIELDEIGEN_DF (Line 175, file gyro_fieldeigen_df.f90)
                   GYRO_FIELDEIGEN_DF (Line 242, file gyro_fieldeigen_df.f90)

Name  Messages
----  --------
DATATYPEEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
DATATYPENEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
ERRHANDLEREQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
ERRHANDLERNEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
FILEEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
FILENEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
GROUPEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
GROUPNEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
GYRO_FIELDEIGEN_DF
      Defined as:  Subroutine (line 8, file gyro_fieldeigen_df.f90)

      Interface:   None

      Calls:       CONJG(Intrinsic) (Line 68, file gyro_fieldeigen_df.f90)
                   CONJG(Intrinsic) (Line 73, file gyro_fieldeigen_df.f90)
                   CONJG(Intrinsic) (Line 80, file gyro_fieldeigen_df.f90)
                   CONJG(Intrinsic) (Line 175, file gyro_fieldeigen_df.f90)
                   CONJG(Intrinsic) (Line 242, file gyro_fieldeigen_df.f90)

        Uses:      MPI
                   MPI_BASE  (indirectly)
                   MPI_SIZEOFS  (indirectly)
                   MPI_CONSTANTS  (indirectly)
                   GYRO_GLOBALS
                   GYRO_POINTERS
                   MATH_CONSTANTS
                   GYRO_FIELDEIGEN_PRIVATE

Name  Messages
----  --------
GYRO_FIELDEIGEN_PRIVATE
      Defined as:  No definitions.

      Used By:     GYRO_FIELDEIGEN_DF

Name  Messages
----  --------
GYRO_FIELD_INTERPOLATION
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
GYRO_GLOBALS
      Defined as:  No definitions.

      Used By:     GYRO_FIELDEIGEN_DF

Name  Messages
----  --------
GYRO_POINTERS
      Defined as:  No definitions.

      Used By:     GYRO_FIELDEIGEN_DF

Name  Messages
----  --------
INFOEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
INFONEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MATH_CONSTANTS
      Defined as:  No definitions.

      Used By:     GYRO_FIELDEIGEN_DF

Name  Messages
----  --------
MESSAGEEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MESSAGENEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI
      Defined as:  No definitions.

      Used By:     GYRO_FIELDEIGEN_DF

Name  Messages
----  --------
MPI_BASE
      Defined as:  No definitions.

      Used By:     GYRO_FIELDEIGEN_DF  (indirectly)

Name  Messages
----  --------
MPI_CONSTANTS
      Defined as:  No definitions.

      Used By:     GYRO_FIELDEIGEN_DF  (indirectly)

Name  Messages
----  --------
MPI_SIZEOFS
      Defined as:  No definitions.

      Used By:     GYRO_FIELDEIGEN_DF  (indirectly)

Name  Messages
----  --------
MPI_SIZEOF_CH in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_CHV in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_CX in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_CXV in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_D in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_DV in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_I in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_I1 in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_I1V in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_I2 in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_I2V in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_I8 in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_I8V in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_IV in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_L in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_LV in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_R in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_RV in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
OPEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
OPNEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
REQUESTEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
REQUESTNEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
WINEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
WINNEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
ZGEMV
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
ZGETRF
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
ZGETRI
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
