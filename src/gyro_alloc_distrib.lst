%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /global/u2/b/bassem/gyro-EP/src/gyro_alloc_distrib.f90
Compiled : 01/19/21  15:35:28
Compiler : Version 9.1.0
Ftnlx    : Version 9.1.0 
Target   : x86-64
Command  : ftn_driver.exe -hcpu=haswell -hdynamic -D__CRAYXC -D__CRAY_HASWELL
           -D__CRAYXT_COMPUTE_LINUX_TARGET -hnetwork=aries -hnoomp -em
           -J/global/homes/b/bassem/gyro-EP/modules -sreal64 -eD -Ktrap=fp -m1
           -Rbcdps -G0 -I/opt/cray/pe/fftw/3.3.8.4/haswell/include
           -c gyro_alloc_distrib.f90
           -I/opt/cray/pe/cce/9.1.0/cce-clang/x86_64/lib/clang/9.0.0/include
           -I/opt/cray/pe/cce/9.1.0/cce/x86_64/include/craylibs -I/usr/include
           -I/usr/include -I/opt/cray/pe/fftw/3.3.8.4/haswell/include
           -I/opt/cray/pe/libsci/19.06.1/CRAY/9.0/x86_64/include
           -I/opt/cray/pe/mpt/7.7.10/gni/mpich-cray/9.0/include
           -I/opt/cray/pe/hdf5/1.10.5.2/cray/9.0/include
           -I/opt/cray/pe/netcdf/4.6.3.2/cray/9.0/include
           -I/opt/cray/rca/2.2.20-7.0.1.1_4.53__g8e3fb5b.ari/include
           -I/opt/cray/alps/6.6.58-7.0.1.1_6.10__g437d88db.ari/include
           -I/opt/cray/xpmem/2.2.20-7.0.1.1_4.14__g0475745.ari/include
           -I/opt/cray/gni-headers/5.0.12.0-7.0.1.1_6.32__g3b1768f.ari/include
           -I/opt/cray/dmapp/7.1.1-7.0.1.1_4.54__g38cf134.ari/include
           -I/opt/cray/pe/pmi/5.0.14/include
           -I/opt/cray/ugni/6.0.14.0-7.0.1.1_7.40__ge78e5b0.ari/include
           -I/opt/cray/udreg/2.3.2-7.0.1.1_3.38__g8175d3d.ari/include
           -I/opt/cray/wlm_detect/1.3.3-7.0.1.1_4.16__g7109084.ari/include
           -I/opt/cray/krca/2.2.6-7.0.1.1_5.39__gb641b12.ari/include
           -I/opt/cray-hss-devel/9.0.0/include
Program
  Units  : GYRO_ALLOC_DISTRIB

ftnlx report
------------
Source   : /global/u2/b/bassem/gyro-EP/src/gyro_alloc_distrib.f90
Date     : 01/19/2021  15:35:28


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    1.    !----------------------------------------------------------
    2.    ! gyro_alloc_distrib
    3.    !
    4.    ! PURPOSE:
    5.    !  Create and destroy orbit arrays.
    6.    !
    7.    ! NOTES:
    8.    !  flag=0: deallocate
    9.    !  flag=1: allocate
   10.    !
   11.    !  Need to know n_lambda,n_stack before this is called.
   12.    !
   13.    !  See: gyro_banana_operators, gyro_geometry_arrays.
   14.    !----------------------------------------------------------
   15.    
   16.    subroutine gyro_alloc_distrib(flag)
   17.    
   18.      use gyro_globals 
   19.      use gyro_pointers
   20.    
   21.      !-----------------------------------------
   22.      implicit none
   23.      !
   24.      integer, intent(in) :: flag
   25.      !-----------------------------------------
   26.    
   27.      if (flag == 1 .and. allocated(omega_d1)) then
   28.         if (i_proc == 0) then
   29.            print *,'WARNING: already allocated arrays in gyro_alloc_distrib'
   30.         endif
   31.         return
   32.      endif
   33.      if (flag == 0 .and. .not.allocated(omega_d1)) then
   34.         if (i_proc == 0) then
   35.            print *,'WARNING: cannot deallocate arrays in gyro_alloc_distrib'
   36.         endif
   37.         return
   38.      endif
   39.    
   40.      if (flag == 1) then
   41.    
   42.         ! Drifts
   43.         allocate(omega_d1(n_stack,n_x,n_nek_loc_1,n_kinetic))
   44.         allocate(omega_dr(n_stack,n_x,n_nek_loc_1,n_kinetic))
   45.         allocate(omega_star(n_stack,n_x,n_nek_loc_1,n_kinetic))
   46.         allocate(v_theta(n_x,n_energy,n_lambda,n_kinetic))
   47.         allocate(v_para(n_stack,n_x,n_nek_loc_1,n_kinetic))
   48.         allocate(v_perp(n_stack,n_x,n_nek_loc_1,n_kinetic))
   49.    
   50.         ! Pointers
   51.         allocate(nek_n(n_nek_1))
   52.         allocate(nek_e(n_nek_1))
   53.         allocate(nek_k(n_nek_1))
   54.         allocate(ine_i(n_ine_1))
   55.         allocate(ine_n(n_ine_1))
   56.         allocate(ine_e(n_ine_1))
   57.         allocate(ki_k(n_ki_1))
   58.         allocate(ki_i(n_ki_1))
   59.    
   60.         ! Blending arrays
   61.         allocate(cs_blend(n_blend,n_theta(2),n_x,n_nek_loc_1))
   62.         allocate(c_blend(n_blend,n_stack,n_x,n_nek_loc_1))
   63.         allocate(cs_blend_prime(n_blend,n_theta(2),n_x,n_nek_loc_1))
   64.    
   65.         if (electron_method == 2) then
   66.            ! Implicit advection
   67.            allocate(o_f(n_blend,n_stack,n_x,n_nek_loc_1))
   68.            allocate(o_fv(n_blend,n_stack,n_x,n_nek_loc_1))
   69.            allocate(o_advect(n_stack,n_stack,n_x,n_nek_loc_1))
   70.            allocate(imp(n_x,n_blend,n_blend,8))
   71.         endif
   72.    
   73.         if (collision_flag == 1) then
   74.    
   75.            ! Collision arrays
   76.            if (linsolve_method == 3) then
   77.               allocate(d1_rbf(n_rbf,n_rbf))
   78.            else
   79.               allocate(d_rbf(n_rbf,n_rbf,n_ine_loc_1,n_coll))
   80.            endif
   81.    
   82.         endif
   83.    
   84.         ! Gyroaverage arrays
   85.         allocate(z_gyro(-n_x/2:n_x/2,-n_x/2:n_x/2-1))
   86.    
   87.         ! G0a,G2a in Technical manual
   88.         allocate(w_gyro0(n_stack,-m_gyro:m_gyro-i_gyro,n_x,n_nek_loc_1,n_gk))
   89.         allocate(w_gyro2(n_stack,-m_gyro:m_gyro-i_gyro,n_x,n_nek_loc_1,n_gk))
   90.    
   91.         if (n_field == 3) then
   92.            ! G1a,G3a in Technical manual
   93.            allocate(w_gyro1(n_stack,-m_gyro:m_gyro-i_gyro,n_x,n_nek_loc_1,n_gk))
   94.            allocate(w_gyro3(n_stack,-m_gyro:m_gyro-i_gyro,n_x,n_nek_loc_1,n_gk))
   95.         endif
   96.    
   97.      else 
   98.    
   99.         deallocate(omega_d1)
  100.         deallocate(omega_dr)
  101.         deallocate(omega_star)
  102.         deallocate(v_theta)
  103.         deallocate(v_para)
  104.         deallocate(v_perp)
  105.    
  106.         deallocate(nek_n)
  107.         deallocate(nek_e)
  108.         deallocate(nek_k)
  109.         deallocate(ine_i)
  110.         deallocate(ine_n)
  111.         deallocate(ine_e)
  112.         deallocate(ki_k)
  113.         deallocate(ki_i)
  114.    
  115.         deallocate(cs_blend_prime)
  116.         deallocate(cs_blend)
  117.         deallocate(c_blend)
  118.    
  119.         if (allocated(o_f)) deallocate(o_f)
  120.         if (allocated(o_fv)) deallocate(o_fv)
  121.         if (allocated(o_advect)) deallocate(o_advect)
  122.         if (allocated(imp)) deallocate(imp)
  123.    
  124.         if (allocated(d_rbf)) deallocate(d_rbf) 
  125.         if (allocated(d1_rbf)) deallocate(d1_rbf) 
  126.    
  127.         deallocate(z_gyro)
  128.         deallocate(w_gyro0)
  129.         deallocate(w_gyro2)
  130.         if (allocated(w_gyro1)) deallocate(w_gyro1)
  131.         if (allocated(w_gyro3)) deallocate(w_gyro3)
  132.    
  133.      endif
  134.    
  135.    end subroutine gyro_alloc_distrib


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                         E x t e r n a l   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name  Messages
----  --------
ALLOCATED(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_ALLOC_DISTRIB (Line 27, file gyro_alloc_distrib.f90)
                   GYRO_ALLOC_DISTRIB (Line 33, file gyro_alloc_distrib.f90)
                   GYRO_ALLOC_DISTRIB (Line 119, file gyro_alloc_distrib.f90)
                   GYRO_ALLOC_DISTRIB (Line 120, file gyro_alloc_distrib.f90)
                   GYRO_ALLOC_DISTRIB (Line 121, file gyro_alloc_distrib.f90)
                   GYRO_ALLOC_DISTRIB (Line 122, file gyro_alloc_distrib.f90)
                   GYRO_ALLOC_DISTRIB (Line 124, file gyro_alloc_distrib.f90)
                   GYRO_ALLOC_DISTRIB (Line 125, file gyro_alloc_distrib.f90)
                   GYRO_ALLOC_DISTRIB (Line 130, file gyro_alloc_distrib.f90)
                   GYRO_ALLOC_DISTRIB (Line 131, file gyro_alloc_distrib.f90)

Name  Messages
----  --------
CHAR(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
GYRO_ALLOC_DISTRIB
      Defined as:  Subroutine (line 16, file gyro_alloc_distrib.f90)

      Interface:   None

      Calls:       ALLOCATED(Intrinsic) (Line 27, file gyro_alloc_distrib.f90)
                   ALLOCATED(Intrinsic) (Line 33, file gyro_alloc_distrib.f90)
                   ALLOCATED(Intrinsic) (Line 119, file gyro_alloc_distrib.f90)
                   ALLOCATED(Intrinsic) (Line 120, file gyro_alloc_distrib.f90)
                   ALLOCATED(Intrinsic) (Line 121, file gyro_alloc_distrib.f90)
                   ALLOCATED(Intrinsic) (Line 122, file gyro_alloc_distrib.f90)
                   ALLOCATED(Intrinsic) (Line 124, file gyro_alloc_distrib.f90)
                   ALLOCATED(Intrinsic) (Line 125, file gyro_alloc_distrib.f90)
                   ALLOCATED(Intrinsic) (Line 130, file gyro_alloc_distrib.f90)
                   ALLOCATED(Intrinsic) (Line 131, file gyro_alloc_distrib.f90)

        Uses:      GYRO_GLOBALS
                   GYRO_POINTERS

Name  Messages
----  --------
GYRO_GLOBALS
      Defined as:  No definitions.

      Used By:     GYRO_ALLOC_DISTRIB

Name  Messages
----  --------
GYRO_POINTERS
      Defined as:  No definitions.

      Used By:     GYRO_ALLOC_DISTRIB

Name  Messages
----  --------
_ALLOCATED(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
