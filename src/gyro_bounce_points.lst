%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /global/u2/b/bassem/gyro-EP/src/gyro_bounce_points.f90
Compiled : 01/19/21  15:35:31
Compiler : Version 9.1.0
Ftnlx    : Version 9.1.0 
Target   : x86-64
Command  : ftn_driver.exe -hcpu=haswell -hdynamic -D__CRAYXC -D__CRAY_HASWELL
           -D__CRAYXT_COMPUTE_LINUX_TARGET -hnetwork=aries -hnoomp -em
           -J/global/homes/b/bassem/gyro-EP/modules -sreal64 -eD -Ktrap=fp -m1
           -Rbcdps -G0 -I/opt/cray/pe/fftw/3.3.8.4/haswell/include
           -c gyro_bounce_points.f90
           -I/opt/cray/pe/cce/9.1.0/cce-clang/x86_64/lib/clang/9.0.0/include
           -I/opt/cray/pe/cce/9.1.0/cce/x86_64/include/craylibs -I/usr/include
           -I/usr/include -I/opt/cray/pe/fftw/3.3.8.4/haswell/include
           -I/opt/cray/pe/libsci/19.06.1/CRAY/9.0/x86_64/include
           -I/opt/cray/pe/mpt/7.7.10/gni/mpich-cray/9.0/include
           -I/opt/cray/pe/hdf5/1.10.5.2/cray/9.0/include
           -I/opt/cray/pe/netcdf/4.6.3.2/cray/9.0/include
           -I/opt/cray/rca/2.2.20-7.0.1.1_4.53__g8e3fb5b.ari/include
           -I/opt/cray/alps/6.6.58-7.0.1.1_6.10__g437d88db.ari/include
           -I/opt/cray/xpmem/2.2.20-7.0.1.1_4.14__g0475745.ari/include
           -I/opt/cray/gni-headers/5.0.12.0-7.0.1.1_6.32__g3b1768f.ari/include
           -I/opt/cray/dmapp/7.1.1-7.0.1.1_4.54__g38cf134.ari/include
           -I/opt/cray/pe/pmi/5.0.14/include
           -I/opt/cray/ugni/6.0.14.0-7.0.1.1_7.40__ge78e5b0.ari/include
           -I/opt/cray/udreg/2.3.2-7.0.1.1_3.38__g8175d3d.ari/include
           -I/opt/cray/wlm_detect/1.3.3-7.0.1.1_4.16__g7109084.ari/include
           -I/opt/cray/krca/2.2.6-7.0.1.1_5.39__gb641b12.ari/include
           -I/opt/cray-hss-devel/9.0.0/include
Program
  Units  : GYRO_BOUNCE_POINTS

ftnlx report
------------
Source   : /global/u2/b/bassem/gyro-EP/src/gyro_bounce_points.f90
Date     : 01/19/2021  15:35:31


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    1.    !-----------------------------------------------------
    2.    ! gyro_bounce_points.f90
    3.    !
    4.    ! PURPOSE:
    5.    !  For a given lambda, return the upper and lower
    6.    !  bounce points theta_bp,theta_bm.  These solve 
    7.    !  
    8.    !         B(theta_b) = 1/lambda 
    9.    ! 
   10.    !  If there are no bounce points, return 
   11.    !  theta_b=pi or theta_b=0.0.
   12.    !
   13.    ! NOTES:
   14.    !  This routine is valid for arbitrary flux
   15.    !  surface shape.  Also, speed is not essential, 
   16.    !  so determine roots via bisection for stability.
   17.    !----------------------------------------------------
   18.    
   19.    subroutine gyro_bounce_points(lambda,theta_bp,theta_bm)
   20.    
   21.      use math_constants
   22.      use GEO_interface
   23.    
   24.      !---------------------------------
   25.      implicit none
   26.      !
   27.      real, parameter :: eps_theta = 1e-15
   28.      !
   29.      real, intent(in)    :: lambda
   30.      real, intent(inout) :: theta_bp
   31.      real, intent(inout) :: theta_bm
   32.      !
   33.      real :: lambda_tp
   34.      real :: lambda_max
   35.      real :: theta_b
   36.      !
   37.      real :: b0_1
   38.      real :: b0_2
   39.      real :: residual
   40.      real :: x
   41.      real :: dtheta
   42.      !  
   43.      real :: b0
   44.      !---------------------------------
   45.      
   46.      theta_b = 0.0
   47.      call GEO_interp(theta_b) ; b0 = GEO_b
   48.      lambda_max = 1.0/b0
   49.    
   50.      ! Test for lambda too large:
   51.      if (lambda >= lambda_max) then
   52.         print *,'lambda >= lambda_max'
   53.         return
   54.      endif
   55.    
   56.      theta_b = pi
   57.      call GEO_interp(theta_b) ; b0 = GEO_b
   58.      lambda_tp = 1.0/b0
   59.    
   60.      ! Test for lambda too small:
   61.      if (lambda <= lambda_tp) then
   62.         print *,'lambda <= lambda_tp'
   63.         return
   64.      endif
   65.    
   66.      ! Upper bounce point
   67.    
   68.      residual = 1.0
   69.    
   70.      dtheta  = pi/2.0-eps_theta
   71.      theta_b = pi/2.0
   72.    
   73.      x = 1.0/lambda
   74.    
   75.      do while (residual > eps_theta)
   76.    
   77.         call GEO_interp(theta_b) ; b0_1 = GEO_b
   78.         call GEO_interp(theta_b+dtheta) ; b0_2 = GEO_b
   79.    
   80.         dtheta = 0.5*dtheta
   81.    
   82.         if (b0_1 <= x .and. b0_2 >= x) then
   83.            theta_b = theta_b+dtheta
   84.         else
   85.            theta_b = theta_b-dtheta
   86.         endif
   87.    
   88.         residual = abs(b0_1-b0_2)
   89.    
   90.      enddo
   91.    
   92.      theta_bp = theta_b
   93.    
   94.      ! Lower bounce point
   95.    
   96.      residual = 1.0
   97.    
   98.      dtheta  = -pi/2.0+eps_theta
   99.      theta_b = -pi/2.0
  100.    
  101.      x = 1.0/lambda
  102.    
  103.      do while (residual > eps_theta)
  104.    
  105.         call GEO_interp(theta_b) ; b0_1 = GEO_b
  106.         call GEO_interp(theta_b+dtheta) ; b0_2 = GEO_b
  107.    
  108.         dtheta = 0.5*dtheta
  109.    
  110.         if (b0_1 <= x .and. b0_2 >= x) then
  111.            theta_b = theta_b+dtheta
  112.         else
  113.            theta_b = theta_b-dtheta
  114.         endif
  115.    
  116.         residual = abs(b0_1-b0_2)
  117.    
  118.      enddo
  119.    
  120.      theta_bm = theta_b
  121.    
  122.    end subroutine gyro_bounce_points


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                         E x t e r n a l   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name  Messages
----  --------
ABS(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_BOUNCE_POINTS (Line 88, file gyro_bounce_points.f90)
                   GYRO_BOUNCE_POINTS (Line 116, file gyro_bounce_points.f90)

Name  Messages
----  --------
GEO_INTERFACE
      Defined as:  No definitions.

      Used By:     GYRO_BOUNCE_POINTS

Name  Messages
----  --------
GEO_INTERP
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_BOUNCE_POINTS (Line 47, file gyro_bounce_points.f90)
                   GYRO_BOUNCE_POINTS (Line 57, file gyro_bounce_points.f90)
                   GYRO_BOUNCE_POINTS (Line 77, file gyro_bounce_points.f90)
                   GYRO_BOUNCE_POINTS (Line 78, file gyro_bounce_points.f90)
                   GYRO_BOUNCE_POINTS (Line 105, file gyro_bounce_points.f90)
                   GYRO_BOUNCE_POINTS (Line 106, file gyro_bounce_points.f90)

Name  Messages
----  --------
GYRO_BOUNCE_POINTS
      Defined as:  Subroutine (line 19, file gyro_bounce_points.f90)

      Interface:   None

      Calls:       GEO_INTERP (Line 47, file gyro_bounce_points.f90)
                   GEO_INTERP (Line 57, file gyro_bounce_points.f90)
                   GEO_INTERP (Line 77, file gyro_bounce_points.f90)
                   GEO_INTERP (Line 78, file gyro_bounce_points.f90)
                   GEO_INTERP (Line 105, file gyro_bounce_points.f90)
                   GEO_INTERP (Line 106, file gyro_bounce_points.f90)
                   ABS(Intrinsic) (Line 88, file gyro_bounce_points.f90)
                   ABS(Intrinsic) (Line 116, file gyro_bounce_points.f90)

        Uses:      MATH_CONSTANTS
                   GEO_INTERFACE

Name  Messages
----  --------
MATH_CONSTANTS
      Defined as:  No definitions.

      Used By:     GYRO_BOUNCE_POINTS


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
