%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /global/u2/b/bassem/gyro-EP/src/gyro_miscellaneous_math.f90
Compiled : 01/19/21  15:35:44
Compiler : Version 9.1.0
Ftnlx    : Version 9.1.0 
Target   : x86-64
Command  : ftn_driver.exe -hcpu=haswell -hdynamic -D__CRAYXC -D__CRAY_HASWELL
           -D__CRAYXT_COMPUTE_LINUX_TARGET -hnetwork=aries -hnoomp -em
           -J/global/homes/b/bassem/gyro-EP/modules -sreal64 -eD -Ktrap=fp -m1
           -Rbcdps -G0 -I/opt/cray/pe/fftw/3.3.8.4/haswell/include
           -c gyro_miscellaneous_math.f90
           -I/opt/cray/pe/cce/9.1.0/cce-clang/x86_64/lib/clang/9.0.0/include
           -I/opt/cray/pe/cce/9.1.0/cce/x86_64/include/craylibs -I/usr/include
           -I/usr/include -I/opt/cray/pe/fftw/3.3.8.4/haswell/include
           -I/opt/cray/pe/libsci/19.06.1/CRAY/9.0/x86_64/include
           -I/opt/cray/pe/mpt/7.7.10/gni/mpich-cray/9.0/include
           -I/opt/cray/pe/hdf5/1.10.5.2/cray/9.0/include
           -I/opt/cray/pe/netcdf/4.6.3.2/cray/9.0/include
           -I/opt/cray/rca/2.2.20-7.0.1.1_4.53__g8e3fb5b.ari/include
           -I/opt/cray/alps/6.6.58-7.0.1.1_6.10__g437d88db.ari/include
           -I/opt/cray/xpmem/2.2.20-7.0.1.1_4.14__g0475745.ari/include
           -I/opt/cray/gni-headers/5.0.12.0-7.0.1.1_6.32__g3b1768f.ari/include
           -I/opt/cray/dmapp/7.1.1-7.0.1.1_4.54__g38cf134.ari/include
           -I/opt/cray/pe/pmi/5.0.14/include
           -I/opt/cray/ugni/6.0.14.0-7.0.1.1_7.40__ge78e5b0.ari/include
           -I/opt/cray/udreg/2.3.2-7.0.1.1_3.38__g8175d3d.ari/include
           -I/opt/cray/wlm_detect/1.3.3-7.0.1.1_4.16__g7109084.ari/include
           -I/opt/cray/krca/2.2.6-7.0.1.1_5.39__gb641b12.ari/include
           -I/opt/cray-hss-devel/9.0.0/include
Program
  Units  : INVERT_P32
          P32
          PASCAL

ftnlx report
------------
Source   : /global/u2/b/bassem/gyro-EP/src/gyro_miscellaneous_math.f90
Date     : 01/19/2021  15:35:44


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    1.    !------------------------------------------------
    2.    ! invert_p32.f90
    3.    !
    4.    ! PURPOSE:
    5.    !  Calculate x given s, where:
    6.    !
    7.    !                         x
    8.    !                  2      /          -t
    9.    ! s = p32(x) = --------   | sqrt(t) e   dt
   10.    !              sqrt(pi)   /
   11.    !                         0
   12.    !
   13.    ! Speed is not esential, so we use bisection 
   14.    ! for robsutness.
   15.    !
   16.    ! REVISIONS:
   17.    ! 26 Sept 01: jc 
   18.    !  Documented
   19.    ! 25 May 05: jc
   20.    !  Moved into gyro/math subdir and renamed.
   21.    !------------------------------------------------
   22.    
   23.    subroutine invert_p32(s,x,x_max)
   24.    
   25.      implicit none
   26.    
   27.      real, parameter :: eps_x = 1e-10
   28.    
   29.      real, intent(in) :: s
   30.      real, intent(in) :: x_max
   31.      real, intent(inout) :: x
   32.    
   33.      real :: dx
   34.      real :: s1
   35.      real :: s2
   36.      real :: residual
   37.    
   38.      real, external :: p32
   39.    
   40.    
   41.      residual = 1.0
   42.    
   43.      dx = x_max/2.0-eps_x
   44.      x  = x_max/2.0
   45.    
   46.      do while (residual > eps_x)
   47.    
   48.         s1 = p32(x)
   49.         s2 = p32(x+dx)
   50.    
   51.         dx = 0.5*dx
   52.    
   53.         if (s1 <= s .and. s2 >= s) then
   54.            x = x+dx
   55.         else
   56.            x = x-dx
   57.         endif
   58.    
   59.         residual = abs(s2-s1)
   60.    
   61.      enddo
   62.    
   63.    end subroutine invert_p32


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

   64.    
   65.    !-----------------------------------------------------
   66.    ! p32.f90
   67.    !
   68.    ! PURPOSE:
   69.    !  Compute the incomplete Gamma (P) function.
   70.    !
   71.    ! NOTES:
   72.    !                     x
   73.    !              2      /          -t
   74.    ! p32(x) = --------   | sqrt(t) e   dt == P(3/2,x)
   75.    !          sqrt(pi)   /
   76.    !                     0
   77.    ! 
   78.    ! REVISIONS
   79.    ! 10 Jan 01: jeff.candy@gat.com
   80.    !  Created.
   81.    !---------------------------------------------
   82.    
   83.    real function p32(x)
   84.    
   85.      use math_constants
   86.    
   87.      implicit none
   88.    
   89.      real, intent(in) :: x
   90.     
   91.      p32 = erf(sqrt(x))-sqrt(x)*exp(-x)/(0.5*sqrt(pi))
   92.    
   93.    end function p32


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

   94.    
   95.    !--------------------------------------------------------------
   96.    ! pascal.f90 
   97.    !
   98.    ! PURPOSE:
   99.    !  Compute coefficients in Pascal's triangle, with added 
  100.    !  alternating sign.
  101.    !
  102.    ! NOTES:
  103.    !  Equivalently, these are the coefficients of the 
  104.    !  centered n-th derivative operator.  Below, we have 
  105.    !  supressed the alternating sign.
  106.    !
  107.    !  n    s(1)  s(2)  s(3) ...
  108.    ! ---   ---------------------------------------------------------
  109.    !  3    1.0   2.0   1.0
  110.    !  4    1.0   3.0   3.0   1.0
  111.    !  5    1.0   4.0   6.0   4.0   1.0
  112.    !  6    1.0   5.0  10.0  10.0   5.0   1.0
  113.    !  7    1.0   6.0  15.0  20.0  15.0   6.0   1.0
  114.    !  8    1.0   7.0  21.0  35.0  35.0  21.0   7.0   1.0
  115.    !  9    1.0   8.0  28.0  56.0  70.0  56.0  28.0   8.0   1.0
  116.    ! 
  117.    ! REVISIONS
  118.    ! 06 Feb 01: jeff.candy@gat.com
  119.    !  Created. 
  120.    !--------------------------------------------------------------
  121.    
  122.    subroutine pascal(n,s)
  123.    
  124.      implicit none
  125.    
  126.      integer, intent(in) :: n
  127.      integer :: i
  128.      integer :: m
  129.      real, dimension(n) :: s
  130.      real, dimension(n) :: s0
  131.    
  132.      s = 0 
ftn-6204 ftn: VECTOR PASCAL, File = gyro_miscellaneous_math.f90, Line = 132 
  A loop starting at line 132 was vectorized.

  133.    
  134.      if (n < 3) then
  135.         print *,'PASCAL: error in n'
  136.         stop
  137.      endif
  138.    
  139.      if (n == 3) then
  140.    
  141.         s(1) = 1.0  
  142.         s(2) = -2.0
  143.         s(3) = 1.0
  144.    
  145.      else
  146.    
  147.         s0(1) = 1.0  
  148.         s0(2) = 2.0
  149.         s0(3) = 1.0
  150.    
  151.         do m=4,n
  152.    
  153.            s(1) = 1.0
  154.            do i=2,m-1
  155.               s(i) = s0(i)+s0(i-1)
  156.            enddo
  157.            s(m) = 1.0
  158.    
  159.            s0 = s
ftn-6204 ftn: VECTOR PASCAL, File = gyro_miscellaneous_math.f90, Line = 159 
  A loop starting at line 159 was vectorized.

  160.    
  161.         enddo
  162.    
  163.         ! Ensure middle element is negative for n odd.
  164.     
  165.         do m=1,n
  166.            s(m) = (-1)**((n+1)/2-m-1)*s(m)
  167.         enddo
  168.    
  169.      endif
  170.    
  171.    end subroutine pascal


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                         E x t e r n a l   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name  Messages
----  --------
ABS(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   ERF(Intrinsic) (Line 59, file gyro_miscellaneous_math.f90)

Name  Messages
----  --------
ERF(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   EXP(Intrinsic) (Line 91, file gyro_miscellaneous_math.f90)

Name  Messages
----  --------
EXP(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   EXP(Intrinsic) (Line 91, file gyro_miscellaneous_math.f90)

Name  Messages
----  --------
INVERT_P32
      Defined as:  Subroutine (line 23, file gyro_miscellaneous_math.f90)

      Interface:   None

      Calls:       P32 (Line 48, file gyro_miscellaneous_math.f90)
                   P32 (Line 49, file gyro_miscellaneous_math.f90)
                   ABS(Intrinsic) (Line 59, file gyro_miscellaneous_math.f90)

Name  Messages
----  --------
MATH_CONSTANTS
      Defined as:  No definitions.

      Used By:     P32

Name  Messages
----  --------
P32
      Defined as:  Function (line 83, file gyro_miscellaneous_math.f90)

      Interface:   None

      Called By:   ERF(Intrinsic) (Line 48, file gyro_miscellaneous_math.f90)
                   ERF(Intrinsic) (Line 49, file gyro_miscellaneous_math.f90)

      Calls:       SQRT(Intrinsic) (Line 91, file gyro_miscellaneous_math.f90)
                   SQRT(Intrinsic) (Line 91, file gyro_miscellaneous_math.f90)
                   SQRT(Intrinsic) (Line 91, file gyro_miscellaneous_math.f90)
                   ERF(Intrinsic) (Line 91, file gyro_miscellaneous_math.f90)
                   EXP(Intrinsic) (Line 91, file gyro_miscellaneous_math.f90)

        Uses:      MATH_CONSTANTS

Name  Messages
----  --------
PASCAL
      Defined as:  Subroutine (line 122, file gyro_miscellaneous_math.f90)

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
SQRT(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   EXP(Intrinsic) (Line 91, file gyro_miscellaneous_math.f90)
                   EXP(Intrinsic) (Line 91, file gyro_miscellaneous_math.f90)
                   EXP(Intrinsic) (Line 91, file gyro_miscellaneous_math.f90)


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
