%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /global/u2/b/bassem/gyro-EP/src/gyro_get_he_implicit.f90
Compiled : 01/19/21  15:35:39
Compiler : Version 9.1.0
Ftnlx    : Version 9.1.0 
Target   : x86-64
Command  : ftn_driver.exe -hcpu=haswell -hdynamic -D__CRAYXC -D__CRAY_HASWELL
           -D__CRAYXT_COMPUTE_LINUX_TARGET -hnetwork=aries -hnoomp -em
           -J/global/homes/b/bassem/gyro-EP/modules -sreal64 -eD -Ktrap=fp -m1
           -Rbcdps -G0 -I/opt/cray/pe/fftw/3.3.8.4/haswell/include
           -c gyro_get_he_implicit.f90
           -I/opt/cray/pe/cce/9.1.0/cce-clang/x86_64/lib/clang/9.0.0/include
           -I/opt/cray/pe/cce/9.1.0/cce/x86_64/include/craylibs -I/usr/include
           -I/usr/include -I/opt/cray/pe/fftw/3.3.8.4/haswell/include
           -I/opt/cray/pe/libsci/19.06.1/CRAY/9.0/x86_64/include
           -I/opt/cray/pe/mpt/7.7.10/gni/mpich-cray/9.0/include
           -I/opt/cray/pe/hdf5/1.10.5.2/cray/9.0/include
           -I/opt/cray/pe/netcdf/4.6.3.2/cray/9.0/include
           -I/opt/cray/rca/2.2.20-7.0.1.1_4.53__g8e3fb5b.ari/include
           -I/opt/cray/alps/6.6.58-7.0.1.1_6.10__g437d88db.ari/include
           -I/opt/cray/xpmem/2.2.20-7.0.1.1_4.14__g0475745.ari/include
           -I/opt/cray/gni-headers/5.0.12.0-7.0.1.1_6.32__g3b1768f.ari/include
           -I/opt/cray/dmapp/7.1.1-7.0.1.1_4.54__g38cf134.ari/include
           -I/opt/cray/pe/pmi/5.0.14/include
           -I/opt/cray/ugni/6.0.14.0-7.0.1.1_7.40__ge78e5b0.ari/include
           -I/opt/cray/udreg/2.3.2-7.0.1.1_3.38__g8175d3d.ari/include
           -I/opt/cray/wlm_detect/1.3.3-7.0.1.1_4.16__g7109084.ari/include
           -I/opt/cray/krca/2.2.6-7.0.1.1_5.39__gb641b12.ari/include
           -I/opt/cray-hss-devel/9.0.0/include
Program
  Units  : GYRO_GET_HE_IMPLICIT

ftnlx report
------------
Source   : /global/u2/b/bassem/gyro-EP/src/gyro_get_he_implicit.f90
Date     : 01/19/2021  15:35:39


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    1.    !-------------------------------------------------------
    2.    ! gyro_get_he_implicit.f90
    3.    !
    4.    ! PURPOSE:
    5.    !  After the ion distribution and fields are advanced,
    6.    !  we can compute the electron distribution.  
    7.    !--------------------------------------------------------
    8.    
    9.    subroutine gyro_get_he_implicit
   10.    
   11.      use gyro_globals
   12.      use gyro_pointers
   13.      use math_constants
   14.      use ompdata
   15.    
   16.      !---------------------------
   17.      implicit none
   18.      complex :: temp
   19.      !---------------------------
   20.    
   21.    !$omp parallel private(p_nek_loc,temp,p_nek,i,m,j)
   22.      if (n_field == 1) then
   23.    
   24.         ! ELECTROSTATIC
   25.         p_nek_loc = 0
   26.         do p_nek=1+i_proc_1,n_nek_1,n_proc_1
   27.            p_nek_loc = p_nek_loc+1
   28.    
   29.            do i = ibeg, iend
   30.               do m=1,n_stack
   31.                  temp = 0.0
   32.                  do j=1,n_blend
   33.                     temp = temp +(c_blend(j,m,i,p_nek_loc)-o_f(j,m,i,p_nek_loc))*&
   34.                          field_blend(j,i,1)
   35.                  enddo ! j
   36.                  h(m,i,p_nek_loc,n_spec) = h(m,i,p_nek_loc,n_spec)+&
   37.                       alpha_s(n_spec,i)*temp
   38.               enddo ! m
   39.            enddo ! i
   40.    
   41.         enddo ! p_nek_loc
   42.    
   43.      else if (n_field == 2) then
   44.    
   45.         ! ELECTROMAGNETIC -- A_parallel only
   46.         p_nek_loc = 0
   47.         do p_nek=1+i_proc_1,n_nek_1,n_proc_1
   48.            p_nek_loc = p_nek_loc+1
   49.    
   50.            do i = ibeg, iend    
   51.               do m=1,n_stack
   52.                  temp = 0.0
   53.                  do j=1,n_blend
   54.                     temp = temp+(c_blend(j,m,i,p_nek_loc)-o_f(j,m,i,p_nek_loc))*&
   55.                          field_blend(j,i,1)-(c_blend(j,m,i,p_nek_loc)*&
   56.                          v_para(m,i,p_nek_loc,n_spec)-o_fv(j,m,i,p_nek_loc))*&
   57.                          field_blend(j,i,2)
   58.                  enddo ! j
   59.                  h(m,i,p_nek_loc,n_spec) = h(m,i,p_nek_loc,n_spec)+alpha_s(n_spec,i)*temp 
   60.               enddo ! m
   61.            enddo ! i
   62.    
   63.         enddo ! p_nek_loc
   64.    
   65.      else
   66.    
   67.         ! ELECTROMAGNETIC -- A_parallel and B_parallel
   68.    
   69.         p_nek_loc = 0
   70.         do p_nek=1+i_proc_1,n_nek_1,n_proc_1
   71.            p_nek_loc = p_nek_loc+1
   72.    
   73.            do i = ibeg, iend
   74.               do m=1,n_stack 
   75.                  temp = 0.0
   76.                  do j=1,n_blend
   77.                     temp = temp+ &
   78.                          (c_blend(j,m,i,p_nek_loc)-o_f(j,m,i,p_nek_loc))*&
   79.                          field_blend(j,i,1)-&
   80.                          (c_blend(j,m,i,p_nek_loc)*v_para(m,i,p_nek_loc,n_spec)- &
   81.                          o_fv(j,m,i,p_nek_loc))*field_blend(j,i,2)+&
   82.                          energy(nek_e(p_nek))*lambda(i,nek_k(p_nek))*&
   83.                          tem_s(n_spec,i)/z(n_spec)*&
   84.                          (c_blend(j,m,i,p_nek_loc)-o_f(j,m,i,p_nek_loc))*field_blend(j,i,3)
   85.                  enddo ! j  
   86.                  h(m,i,p_nek_loc,n_spec) = h(m,i,p_nek_loc,n_spec)+alpha_s(n_spec,i)*temp 
   87.               enddo ! m
   88.            enddo ! i
   89.    
   90.         enddo ! p_nek_loc
   91.    
   92.      endif
   93.    !$omp end parallel
   94.    
   95.      if (debug_flag == 1 .and. i_proc == 0) then
   96.         print *,'[gyro_get_he_implicit done]'
   97.      endif
   98.    
   99.    end subroutine gyro_get_he_implicit


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                         E x t e r n a l   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name  Messages
----  --------
CHAR(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
GYRO_GET_HE_IMPLICIT
      Defined as:  Subroutine (line 9, file gyro_get_he_implicit.f90)

      Interface:   None

        Uses:      GYRO_GLOBALS
                   GYRO_POINTERS
                   MATH_CONSTANTS
                   OMPDATA

Name  Messages
----  --------
GYRO_GLOBALS
      Defined as:  No definitions.

      Used By:     GYRO_GET_HE_IMPLICIT

Name  Messages
----  --------
GYRO_POINTERS
      Defined as:  No definitions.

      Used By:     GYRO_GET_HE_IMPLICIT

Name  Messages
----  --------
MATH_CONSTANTS
      Defined as:  No definitions.

      Used By:     GYRO_GET_HE_IMPLICIT

Name  Messages
----  --------
OMPDATA
      Defined as:  No definitions.

      Used By:     GYRO_GET_HE_IMPLICIT


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
