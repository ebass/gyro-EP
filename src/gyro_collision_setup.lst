%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /global/u2/b/bassem/gyro-EP/src/gyro_collision_setup.f90
Compiled : 01/19/21  15:35:33
Compiler : Version 9.1.0
Ftnlx    : Version 9.1.0 
Target   : x86-64
Command  : ftn_driver.exe -hcpu=haswell -hdynamic -D__CRAYXC -D__CRAY_HASWELL
           -D__CRAYXT_COMPUTE_LINUX_TARGET -hnetwork=aries -hnoomp -em
           -J/global/homes/b/bassem/gyro-EP/modules -sreal64 -eD -Ktrap=fp -m1
           -Rbcdps -G0 -I/opt/cray/pe/fftw/3.3.8.4/haswell/include
           -c gyro_collision_setup.f90
           -I/opt/cray/pe/cce/9.1.0/cce-clang/x86_64/lib/clang/9.0.0/include
           -I/opt/cray/pe/cce/9.1.0/cce/x86_64/include/craylibs -I/usr/include
           -I/usr/include -I/opt/cray/pe/fftw/3.3.8.4/haswell/include
           -I/opt/cray/pe/libsci/19.06.1/CRAY/9.0/x86_64/include
           -I/opt/cray/pe/mpt/7.7.10/gni/mpich-cray/9.0/include
           -I/opt/cray/pe/hdf5/1.10.5.2/cray/9.0/include
           -I/opt/cray/pe/netcdf/4.6.3.2/cray/9.0/include
           -I/opt/cray/rca/2.2.20-7.0.1.1_4.53__g8e3fb5b.ari/include
           -I/opt/cray/alps/6.6.58-7.0.1.1_6.10__g437d88db.ari/include
           -I/opt/cray/xpmem/2.2.20-7.0.1.1_4.14__g0475745.ari/include
           -I/opt/cray/gni-headers/5.0.12.0-7.0.1.1_6.32__g3b1768f.ari/include
           -I/opt/cray/dmapp/7.1.1-7.0.1.1_4.54__g38cf134.ari/include
           -I/opt/cray/pe/pmi/5.0.14/include
           -I/opt/cray/ugni/6.0.14.0-7.0.1.1_7.40__ge78e5b0.ari/include
           -I/opt/cray/udreg/2.3.2-7.0.1.1_3.38__g8175d3d.ari/include
           -I/opt/cray/wlm_detect/1.3.3-7.0.1.1_4.16__g7109084.ari/include
           -I/opt/cray/krca/2.2.6-7.0.1.1_5.39__gb641b12.ari/include
           -I/opt/cray-hss-devel/9.0.0/include
Program
  Units  : GYRO_COLLISION_SETUP
          RBF
          DRBF

ftnlx report
------------
Source   : /global/u2/b/bassem/gyro-EP/src/gyro_collision_setup.f90
Date     : 01/19/2021  15:35:33


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    1.    !------------------------------------------------------------
    2.    ! gyro_collision_setup.f90 
    3.    !
    4.    ! PURPOSE:
    5.    !  Make time-advance matrix, combining RBF expansion in 
    6.    !  space with Crank-Nicholson scheme in time.  
    7.    ! 
    8.    ! NOTES:
    9.    !  The parameter ord_rbf=1,3,5 controls the order of the 
   10.    !  RBF expansion.  
   11.    !
   12.    !  The irregular gridset in the (xi,theta) plane is expanded 
   13.    !  in an RBF spline series.
   14.    !
   15.    !  Near the boundaries at xi=-1 and xi=1, the SNaK method is 
   16.    !  used to improve accuracy.
   17.    !
   18.    !  The pitch-angle scattering operator is
   19.    !
   20.    !                d       2   d
   21.    !  C = nu_total --- (1-xi ) ---
   22.    !               dxi         dxi
   23.    !
   24.    !
   25.    !  C[v_par] = -2 nu_total v_par
   26.    !
   27.    !-------------------------------------------------------------
   28.    
   29.    subroutine gyro_collision_setup
   30.    
   31.      use gyro_globals
   32.      use gyro_collision_private
   33.      use gyro_pointers
   34.      use math_constants
   35.    
   36.      !-----------------------------------------------------------
   37.      implicit none
   38.      !
   39.      integer :: isp
   40.      integer :: p
   41.      integer :: pp
   42.      integer :: ic
   43.      !
   44.      real :: h_coll
   45.      real :: x 
   46.      real :: r1
   47.      real :: r2
   48.      real, dimension(n_rbf) :: xp
   49.      real, dimension(n_rbf) :: yp
   50.      real, dimension(n_rbf) :: xc
   51.      real, dimension(4*n_rbf) :: work
   52.      integer, dimension(n_rbf) :: iwork
   53.      real, dimension(n_rbf,n_rbf) :: a1
   54.      real, dimension(n_rbf,n_rbf) :: a2
   55.      real, dimension(n_rbf,n_rbf) :: d1
   56.      real, dimension(n_rbf,n_rbf) :: d2
   57.      real, dimension(n_rbf,n_rbf) :: d3
   58.      real :: rcond
   59.      real :: anorm
   60.      !
   61.      real, external :: rbf,irbf
   62.      real, external :: DLANGE
   63.      !-----------------------------------------------------------
   64.    
   65.      nu_total(:,:,:) = 0.0
ftn-6263 ftn: VECTOR GYRO_COLLISION_SETUP, File = gyro_collision_setup.f90, Line = 65 
  A loop starting at line 65 was not vectorized because it contains a reference to a non-vector intrinsic on line 65.

   66.    
   67.      condition_number = 0.0
   68.    
   69.      !-----------------------------------------------------------
   70.      ! Electrons
   71.      !
   72.      do ie=1,n_energy
   73.    
   74.         x = sqrt(energy(ie))
   75.    
   76.         h_coll = exp(-x*x)/(x*sqrt(pi))+(1.0-1.0/(2.0*x*x))*erf(x)
   77.    
   78.         nu_total(:,ie,indx_e) = &
ftn-6262 ftn: VECTOR GYRO_COLLISION_SETUP, File = gyro_collision_setup.f90, Line = 78 
  A loop starting at line 78 was not vectorized because it contains a call to a subroutine or function on line 78.

   79.              0.5*(nu_s(indx_e,:)/x**3)*(z_eff_s(:)+h_coll)
   80.    
   81.      enddo
   82.      !
   83.      ! Ions
   84.      !
   85.      do is=1,indx_e-1
   86.         do isp=1,indx_e-1
   87.    
   88.            do ie=1,n_energy
   89.    
   90.               x = sqrt(energy(ie))*mu(is)/mu(isp)
   91.    
   92.               h_coll = exp(-x*x)/(x*sqrt(pi))+(1.0-1.0/(2.0*x*x))*erf(x)
   93.    
   94.               x = sqrt(energy(ie))
   95.    
   96.               nu_total(:,ie,is) = nu_total(:,ie,is)+&
ftn-6262 ftn: VECTOR GYRO_COLLISION_SETUP, File = gyro_collision_setup.f90, Line = 96 
  A loop starting at line 96 was not vectorized because it contains a call to a subroutine or function on line 96.

   97.                    0.5*(nu_s(is,:)/x**3)*h_coll*&
   98.                    den_s(isp,:)/den_s(is,:)*z(isp)**2
   99.    
  100.            enddo
  101.         enddo
  102.      enddo
  103.    
  104.      !-----------------------------------------------------------
  105.    
  106.      !-----------------------------------------------------------------
  107.      ! Remove n=0 collisions?
  108.      !
  109.      if (kill_coll_flag == 1 .and. n_1(in_1) == 0) then
  110.         nu_total(:,:,:) = 0.0
ftn-6263 ftn: VECTOR GYRO_COLLISION_SETUP, File = gyro_collision_setup.f90, Line = 110 
  A loop starting at line 110 was not vectorized because it contains a reference to a non-vector intrinsic on line 110.

  111.      endif
  112.      !-----------------------------------------------------------------
  113.    
  114.      !------------------------------------------------
  115.      ! Define xi = v_parallel/v, including sign of 
  116.      ! velocity.
  117.      !
  118.      do k=1,n_lambda
  119.         ck = class(k)
  120.         do m=1,n_stack
  121.            if (m <= n_theta(ck)) then
  122.               xi(:,k,m) = -sqrt(abs(1.0-lambda(:,k)*b0_t(:,k,m))) 
ftn-6262 ftn: VECTOR GYRO_COLLISION_SETUP, File = gyro_collision_setup.f90, Line = 122 
  A loop starting at line 122 was not vectorized because it contains a call to a subroutine or function on line 122.

  123.            else
  124.               xi(:,k,m) = sqrt(abs(1.0-lambda(:,k)*b0_t(:,k,m))) 
ftn-6262 ftn: VECTOR GYRO_COLLISION_SETUP, File = gyro_collision_setup.f90, Line = 124 
  A loop starting at line 124 was not vectorized because it contains a call to a subroutine or function on line 124.

  125.            endif
  126.         enddo
  127.      enddo
  128.      !
  129.      !--------------------------------------------------
  130.    
  131.      allocate(i_piv(n_rbf))
  132.    
  133.      p_ine_loc = 0
  134.    
  135.      do p_ine = 1+i_proc_1,n_ine_1,n_proc_1
  136.    
  137.         p_ine_loc = p_ine_loc+1
  138.    
  139.         i  = ine_i(p_ine)
  140.         ie = ine_e(p_ine)
  141.    
  142.         ! Pack single-index RBF array
  143.         ! -1 < xp < 1
  144.         ! -1 <= yp < 1
  145.         p = 0
  146.         do k=1,n_lambda
  147.            do m=1,n_stack
  148.    
  149.               p = p+1
  150.               xp(p) = xi(i,k,m)
  151.               xc(p) = xi(i,k,m)
  152.               yp(p) = theta_t(i,k,m)/pi
  153.    
  154.               ! Shift centers near boundary according to SNaK 
  155.               ! method for improved boundary accuracy and 
  156.               ! significantly better time-advance stability. 
  157.               if (k <= 2) then
  158.                  if (xp(p) < 0.0) then
  159.                     xc(p) = -1.0-0.25*k
  160.                  else
  161.                     xc(p) = 1.0+0.25*k
  162.                  endif
  163.               endif
  164.    
  165.            enddo
  166.         enddo
  167.    
  168.         ! Build RBF expansion matrix
  169.         do p=1,n_rbf
  170.            do pp=1,n_rbf
  171.               a1(p,pp) = rbf(pi*(yp(p)-yp(pp)),xp(p)-xc(pp),ord_rbf)
  172.            enddo
  173.         enddo
  174.    
  175.         ! Dense (LAPACK) factorization
  176.         anorm = DLANGE('I',n_rbf,n_rbf,a1,n_rbf,work)
  177.         call DGETRF(n_rbf,n_rbf,a1,n_rbf,i_piv,info)
  178.         if (info /= 0) then
  179.            call catch_error('ERROR: Factorization in gyro_collision_setup')
  180.         endif
  181.         call DGECON('I',n_rbf,a1,n_rbf,anorm,rcond,work,iwork,info)
  182.    
  183.         if (1.0/rcond > condition_number) condition_number = 1.0/rcond
  184.    
  185.         ! Inverse (LAPACK)
  186.         call DGETRI(n_rbf,a1,n_rbf,i_piv,work,n_rbf,info)
  187.         if (info /= 0) then
  188.            call catch_error('ERROR: Inversion in gyro_collision_setup')
  189.         endif
  190.    
  191.         ! Original method
  192.         do p=1,n_rbf
  193.            do pp=1,n_rbf
  194.               call drbf(pi*(yp(p)-yp(pp)),xp(p)-xc(pp),ord_rbf,r1,r2)
  195.               ! Lorentz derivative  
  196.               a2(p,pp) = (1-xp(p)**2)*r2-2*xp(p)*r1
  197.            enddo
  198.         enddo
  199.    
  200.         ! Perform matrix-matrix multiply with BLAS 
  201.         ! to obtain derivative (Legendre) matrix: 
  202.         call DGEMM('N',&
  203.              'N',&
  204.              n_rbf,&
  205.              n_rbf,&
  206.              n_rbf,&
  207.              1.0,&
  208.              a2,& 
  209.              n_rbf,&
  210.              a1,&
  211.              n_rbf,&
  212.              0.0,&
  213.              d1,&
  214.              n_rbf)
  215.    
  216.         if (linsolve_method == 3) then
  217.    
  218.            d1_rbf(:,:) = transpose(d1(:,:))
ftn-6262 ftn: VECTOR GYRO_COLLISION_SETUP, File = gyro_collision_setup.f90, Line = 218 
  A loop starting at line 218 was not vectorized because it contains a call to a subroutine or function on line 218.

  219.            goto 100
  220.    
  221.         else
  222.    
  223.            do ic=1,n_coll
  224.    
  225.               is = c_map(ic)
  226.    
  227.               d2(:,:) = 0.0
ftn-6263 ftn: VECTOR GYRO_COLLISION_SETUP, File = gyro_collision_setup.f90, Line = 227 
  A loop starting at line 227 was not vectorized because it contains a reference to a non-vector intrinsic on line 227.

  228.               d3(:,:) = 0.0
ftn-6263 ftn: VECTOR GYRO_COLLISION_SETUP, File = gyro_collision_setup.f90, Line = 228 
  A loop starting at line 228 was not vectorized because it contains a reference to a non-vector intrinsic on line 228.

  229.               ! Identity matrix
  230.               do p=1,n_rbf
  231.                  d2(p,p) = 1.0
  232.                  d3(p,p) = 1.0
  233.               enddo
  234.    
  235.               ! "Implicit" part (Crank-Nicholson)
  236.               d2(:,:) = d2(:,:)-0.5*dt*nu_total(i,ie,is)*d1(:,:)
ftn-6263 ftn: VECTOR GYRO_COLLISION_SETUP, File = gyro_collision_setup.f90, Line = 236 
  A loop starting at line 236 was not vectorized because it contains a reference to a non-vector intrinsic on line 236.

  237.               ! "Explicit" part (Crank-Nicholson)
  238.               d3(:,:) = d3(:,:)+0.5*dt*nu_total(i,ie,is)*d1(:,:)
ftn-6263 ftn: VECTOR GYRO_COLLISION_SETUP, File = gyro_collision_setup.f90, Line = 238 
  A loop starting at line 238 was not vectorized because it contains a reference to a non-vector intrinsic on line 238.

  239.    
  240.               call DGETRF(n_rbf,n_rbf,d2,n_rbf,i_piv,info)
  241.               call DGETRI(n_rbf,d2,n_rbf,i_piv,work,4*n_rbf,info)
  242.    
  243.               ! Perform matrix-matrix multiply with BLAS 
  244.               ! to obtain collisional time-advance matrix:
  245.               call DGEMM('N',&
  246.                    'N',&
  247.                    n_rbf,&
  248.                    n_rbf,&
  249.                    n_rbf,&
  250.                    1.0,&
  251.                    d2,&
  252.                    n_rbf,&
  253.                    d3,&
  254.                    n_rbf,&
  255.                    0.0,&
  256.                    a1,&
  257.                    n_rbf)
  258.    
  259.               ! Take a transpose so collision advance has
  260.               ! optimal index order.
  261.               d_rbf(:,:,p_ine_loc,ic) = transpose(a1(:,:))
ftn-6262 ftn: VECTOR GYRO_COLLISION_SETUP, File = gyro_collision_setup.f90, Line = 261 
  A loop starting at line 261 was not vectorized because it contains a call to a subroutine or function on line 261.

  262.    
  263.            enddo
  264.    
  265.         endif
  266.    
  267.      enddo
  268.    
  269.    100 continue
  270.    
  271.      deallocate(i_piv)
  272.    
  273.      if (i_proc == 0) call gyro_collision_grid_write(trim(path)//'out.gyro.collision_grid',1)
  274.    
  275.      if (i_proc == 0 .and. debug_flag == 1) &
  276.           print *,'[gyro_collision_setup]'
  277.    
  278.    end subroutine gyro_collision_setup


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  279.    
  280.    real function rbf(dt,dy,s)
  281.    
  282.      implicit none
  283.    
  284.      real, intent(in) :: dt,dy
  285.      integer, intent(in) :: s
  286.      real :: rl
  287.    
  288.      rl  = sqrt(2.0-2.0*cos(dt)+dy**2)
  289.      rbf = rl**s
  290.    
  291.    end function rbf


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  292.    
  293.    subroutine drbf(dt,dy,s,r1,r2)
  294.    
  295.      implicit none
  296.    
  297.      real, intent(in) :: dt,dy
  298.      integer, intent(in) :: s
  299.      real, intent(inout) :: r1,r2
  300.      real :: rl
  301.    
  302.      rl = sqrt(2.0-2.0*cos(dt)+dy**2)
  303.    
  304.      r1 = s*rl**(s-2)*dy
  305.    
  306.      if (rl > 0.0) then
  307.         r2 = (s*(s-2)*dy**2+s*rl**2)*rl**(s-4)
  308.      else
  309.         r2 = 0.0
  310.      endif
  311.    
  312.    end subroutine drbf


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                         E x t e r n a l   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name  Messages
----  --------
ABS(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_COLLISION_PRIVATE (Line 122, file gyro_collision_setup.f90)
                   GYRO_COLLISION_PRIVATE (Line 124, file gyro_collision_setup.f90)

Name  Messages
----  --------
CATCH_ERROR
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_COLLISION_PRIVATE (Line 179, file gyro_collision_setup.f90)
                   GYRO_COLLISION_PRIVATE (Line 188, file gyro_collision_setup.f90)

Name  Messages
----  --------
CHAR(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
COS(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   MATH_CONSTANTS (Line 288, file gyro_collision_setup.f90)
                   DLANGE (Line 302, file gyro_collision_setup.f90)

Name  Messages
----  --------
DGECON
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_COLLISION_PRIVATE (Line 181, file gyro_collision_setup.f90)

Name  Messages
----  --------
DGEMM
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_COLLISION_PRIVATE (Line 245, file gyro_collision_setup.f90)

Name  Messages
----  --------
DGETRF
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_COLLISION_PRIVATE (Line 177, file gyro_collision_setup.f90)
                   GYRO_COLLISION_PRIVATE (Line 240, file gyro_collision_setup.f90)

Name  Messages
----  --------
DGETRI
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_COLLISION_PRIVATE (Line 186, file gyro_collision_setup.f90)
                   GYRO_COLLISION_PRIVATE (Line 241, file gyro_collision_setup.f90)

Name  Messages
----  --------
DLANGE
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_COLLISION_PRIVATE (Line 176, file gyro_collision_setup.f90)

Name  Messages
----  --------
DRBF
      Defined as:  Subroutine (line 293, file gyro_collision_setup.f90)

      Interface:   None

      Calls:       COS(Intrinsic) (Line 302, file gyro_collision_setup.f90)
                   SQRT(Intrinsic) (Line 302, file gyro_collision_setup.f90)

Name  Messages
----  --------
ERF(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_COLLISION_PRIVATE (Line 76, file gyro_collision_setup.f90)
                   GYRO_COLLISION_PRIVATE (Line 92, file gyro_collision_setup.f90)

Name  Messages
----  --------
EXP(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_COLLISION_PRIVATE (Line 76, file gyro_collision_setup.f90)
                   GYRO_COLLISION_PRIVATE (Line 92, file gyro_collision_setup.f90)

Name  Messages
----  --------
GYRO_COLLISION_GRID_WRITE
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_COLLISION_PRIVATE (Line 273, file gyro_collision_setup.f90)

Name  Messages
----  --------
GYRO_COLLISION_PRIVATE
      Defined as:  No definitions.

      Used By:     GYRO_COLLISION_SETUP

Name  Messages
----  --------
GYRO_COLLISION_SETUP
      Defined as:  Subroutine (line 29, file gyro_collision_setup.f90)

      Interface:   None

      Calls:       RBF (Line 171, file gyro_collision_setup.f90)
                   DLANGE (Line 176, file gyro_collision_setup.f90)
                   SQRT(Intrinsic) (Line 74, file gyro_collision_setup.f90)
                   SQRT(Intrinsic) (Line 76, file gyro_collision_setup.f90)
                   SQRT(Intrinsic) (Line 90, file gyro_collision_setup.f90)
                   SQRT(Intrinsic) (Line 92, file gyro_collision_setup.f90)
                   SQRT(Intrinsic) (Line 94, file gyro_collision_setup.f90)
                   SQRT(Intrinsic) (Line 122, file gyro_collision_setup.f90)
                   SQRT(Intrinsic) (Line 124, file gyro_collision_setup.f90)
                   EXP(Intrinsic) (Line 76, file gyro_collision_setup.f90)
                   EXP(Intrinsic) (Line 92, file gyro_collision_setup.f90)
                   ERF(Intrinsic) (Line 76, file gyro_collision_setup.f90)
                   ERF(Intrinsic) (Line 92, file gyro_collision_setup.f90)
                   ABS(Intrinsic) (Line 122, file gyro_collision_setup.f90)
                   ABS(Intrinsic) (Line 124, file gyro_collision_setup.f90)
                   DGETRF (Line 177, file gyro_collision_setup.f90)
                   DGETRF (Line 240, file gyro_collision_setup.f90)
                   CATCH_ERROR (Line 179, file gyro_collision_setup.f90)
                   CATCH_ERROR (Line 188, file gyro_collision_setup.f90)
                   DGECON (Line 181, file gyro_collision_setup.f90)
                   DGETRI (Line 186, file gyro_collision_setup.f90)
                   DGETRI (Line 241, file gyro_collision_setup.f90)
                   TRANSPOSE(Intrinsic) (Line 218, file gyro_collision_setup.f90)
                   TRANSPOSE(Intrinsic) (Line 261, file gyro_collision_setup.f90)
                   DGEMM (Line 245, file gyro_collision_setup.f90)
                   TRIM(Intrinsic) (Line 273, file gyro_collision_setup.f90)
                   GYRO_COLLISION_GRID_WRITE (Line 273, file gyro_collision_setup.f90)

        Uses:      GYRO_GLOBALS
                   GYRO_COLLISION_PRIVATE
                   GYRO_POINTERS
                   MATH_CONSTANTS

Name  Messages
----  --------
GYRO_GLOBALS
      Defined as:  No definitions.

      Used By:     GYRO_COLLISION_SETUP

Name  Messages
----  --------
GYRO_POINTERS
      Defined as:  No definitions.

      Used By:     GYRO_COLLISION_SETUP

Name  Messages
----  --------
IRBF
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MATH_CONSTANTS
      Defined as:  No definitions.

      Used By:     GYRO_COLLISION_SETUP

Name  Messages
----  --------
RBF
      Defined as:  Function (line 280, file gyro_collision_setup.f90)

      Interface:   None

      Called By:   GYRO_COLLISION_PRIVATE (Line 171, file gyro_collision_setup.f90)

      Calls:       COS(Intrinsic) (Line 288, file gyro_collision_setup.f90)
                   SQRT(Intrinsic) (Line 288, file gyro_collision_setup.f90)

Name  Messages
----  --------
SQRT(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_COLLISION_PRIVATE (Line 74, file gyro_collision_setup.f90)
                   GYRO_COLLISION_PRIVATE (Line 76, file gyro_collision_setup.f90)
                   GYRO_COLLISION_PRIVATE (Line 90, file gyro_collision_setup.f90)
                   GYRO_COLLISION_PRIVATE (Line 92, file gyro_collision_setup.f90)
                   GYRO_COLLISION_PRIVATE (Line 94, file gyro_collision_setup.f90)
                   GYRO_COLLISION_PRIVATE (Line 122, file gyro_collision_setup.f90)
                   GYRO_COLLISION_PRIVATE (Line 124, file gyro_collision_setup.f90)
                   MATH_CONSTANTS (Line 288, file gyro_collision_setup.f90)
                   DLANGE (Line 302, file gyro_collision_setup.f90)

Name  Messages
----  --------
TRANSPOSE(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_COLLISION_PRIVATE (Line 218, file gyro_collision_setup.f90)
                   GYRO_COLLISION_PRIVATE (Line 261, file gyro_collision_setup.f90)

Name  Messages
----  --------
TRIM(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_COLLISION_PRIVATE (Line 273, file gyro_collision_setup.f90)

Name  Messages
----  --------
_F90_TRIM(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
_TRANS(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
