%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /global/u2/b/bassem/gyro-EP/src/gyro_write_input.f90
Compiled : 01/19/21  15:35:56
Compiler : Version 9.1.0
Ftnlx    : Version 9.1.0 
Target   : x86-64
Command  : ftn_driver.exe -hcpu=haswell -hdynamic -D__CRAYXC -D__CRAY_HASWELL
           -D__CRAYXT_COMPUTE_LINUX_TARGET -hnetwork=aries -hnoomp -em
           -J/global/homes/b/bassem/gyro-EP/modules -sreal64 -eD -Ktrap=fp -m1
           -Rbcdps -G0 -I/opt/cray/pe/fftw/3.3.8.4/haswell/include
           -c gyro_write_input.f90
           -I/opt/cray/pe/cce/9.1.0/cce-clang/x86_64/lib/clang/9.0.0/include
           -I/opt/cray/pe/cce/9.1.0/cce/x86_64/include/craylibs -I/usr/include
           -I/usr/include -I/opt/cray/pe/fftw/3.3.8.4/haswell/include
           -I/opt/cray/pe/libsci/19.06.1/CRAY/9.0/x86_64/include
           -I/opt/cray/pe/mpt/7.7.10/gni/mpich-cray/9.0/include
           -I/opt/cray/pe/hdf5/1.10.5.2/cray/9.0/include
           -I/opt/cray/pe/netcdf/4.6.3.2/cray/9.0/include
           -I/opt/cray/rca/2.2.20-7.0.1.1_4.53__g8e3fb5b.ari/include
           -I/opt/cray/alps/6.6.58-7.0.1.1_6.10__g437d88db.ari/include
           -I/opt/cray/xpmem/2.2.20-7.0.1.1_4.14__g0475745.ari/include
           -I/opt/cray/gni-headers/5.0.12.0-7.0.1.1_6.32__g3b1768f.ari/include
           -I/opt/cray/dmapp/7.1.1-7.0.1.1_4.54__g38cf134.ari/include
           -I/opt/cray/pe/pmi/5.0.14/include
           -I/opt/cray/ugni/6.0.14.0-7.0.1.1_7.40__ge78e5b0.ari/include
           -I/opt/cray/udreg/2.3.2-7.0.1.1_3.38__g8175d3d.ari/include
           -I/opt/cray/wlm_detect/1.3.3-7.0.1.1_4.16__g7109084.ari/include
           -I/opt/cray/krca/2.2.6-7.0.1.1_5.39__gb641b12.ari/include
           -I/opt/cray-hss-devel/9.0.0/include
Program
  Units  : GYRO_WRITE_INPUT

ftnlx report
------------
Source   : /global/u2/b/bassem/gyro-EP/src/gyro_write_input.f90
Date     : 01/19/2021  15:35:56


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    1.    !------------------------------------------------------
    2.    ! gyro_write_stdout.f90 [caller BigScience]
    3.    !
    4.    ! PURPOSE:
    5.    !  This subroutine summarizes most input parameters
    6.    !  and derived quantities of interest.
    7.    !------------------------------------------------------
    8.    
    9.    subroutine gyro_write_input
   10.    
   11.      use mpi
   12.      use gyro_globals
   13.      use gyro_profile_exp
   14.      use gyro_pointers
   15.      use math_constants
   16.      use GEO_interface
   17.      use ompdata
   18.    
   19.      !--------------------------------------------------
   20.      implicit none
   21.      !
   22.      integer :: i_ion
   23.      !
   24.      real :: co_r_loc,co_r
   25.      real :: co_tau
   26.      real :: neutral
   27.      real :: c_min
   28.      real :: c_max
   29.      real :: num_rho
   30.      real :: num_rho_l
   31.      real :: num_rho_r
   32.      real :: num_rho_min
   33.      real :: x_s
   34.      real :: den_total
   35.      real :: v_alfven
   36.      real :: rhos_abs
   37.      !
   38.      real, dimension(n_ion) :: band
   39.      character (len=16), dimension(n_spec) :: n_tag
   40.      character (len=16), dimension(n_spec) :: dn_tag
   41.      character (len=16), dimension(n_spec) :: t_tag
   42.      character (len=16), dimension(n_spec) :: dt_tag
   43.      character (len=16), dimension(n_spec) :: mu_tag
   44.      character (len=20), dimension(n_spec) :: emax_tag
   45.      character (len=16), dimension(n_spec) :: z_tag
   46.      character (len=16), dimension(n_spec) :: nu_tag
   47.      character (len=2), dimension(n_ion) :: e_tag
   48.      !--------------------------------------------------
   49.    
   50.      rhos_abs = abs(rhos_norm)
   51.    
   52.      !--------------------------------------------------
   53.      ! Define some character tags for printing of local 
   54.      ! parameters:
   55.      !
   56.      e_tag(1) = ''
   57.      do i_ion=2,n_ion
   58.         e_tag(i_ion) = '_'//achar(i_ion-1+iachar("1"))  
   59.      enddo
   60.    
   61.      n_tag(1) = '.NI_OVER_NE'
   62.      do i_ion=2,n_ion
   63.         n_tag(i_ion) = '.NI_OVER_NE'//e_tag(i_ion)
   64.      enddo
   65.      n_tag(n_spec) = '(null)'
   66.    
   67.      dn_tag(1) = '.DLNNDR'
   68.      do i_ion=2,n_ion
   69.         dn_tag(i_ion) = '.DLNNDR'//e_tag(i_ion)
   70.      enddo
   71.      dn_tag(n_spec) = '.DLNNDR_ELECTRON'
   72.    
   73.      t_tag(1) = '.TI_OVER_TE'
   74.      do i_ion=2,n_ion
   75.         t_tag(i_ion) = '.TI_OVER_TE'//e_tag(i_ion)
   76.      enddo
   77.      t_tag(n_spec) = '(null)'
   78.    
   79.      dt_tag(1) = '.DLNTDR'
   80.      do i_ion=2,n_ion
   81.         dt_tag(i_ion) = '.DLNTDR'//e_tag(i_ion)
   82.      enddo
   83.      dt_tag(n_spec) = '.DLNTDR_ELECTRON'
   84.    
   85.      mu_tag(1) = '.MU'
   86.      do i_ion=2,n_ion
   87.         mu_tag(i_ion) = '.MU'//e_tag(i_ion)
   88.      enddo
   89.      mu_tag(n_spec) = '.MU_ELECTRON'
   90.    
   91.      emax_tag(1) = '.ENERGY_MAX'
   92.      do i_ion=2,n_ion
   93.         emax_tag(i_ion) = '.ENERGY_MAX'//e_tag(i_ion)
   94.      enddo
   95.      emax_tag(indx_e) = '.ENERGY_MAX_ELECTRON'
   96.    
   97.      z_tag(1) = '.Z'
   98.      do i_ion=2,n_ion
   99.         z_tag(i_ion) = '.Z'//e_tag(i_ion)
  100.      enddo
  101.      z_tag(n_spec) = '(Z_ELECTRON)'
  102.    
  103.      nu_tag(1) = '(NU_II)'
  104.      do i_ion=2,n_ion
  105.         nu_tag(i_ion) = '(NU_II'//e_tag(i_ion)//')'
  106.      enddo
  107.      nu_tag(n_spec) = '(NU_EI)'
  108.      !--------------------------------------------------
  109.    
  110.      call send_line('----------------- UTILITY PARAMETERS ----------------------')
  111.      if (kill_i_parallel_flag == 0) then
  112.         call send_line('Ion parallel motion     : ON')
  113.      else
  114.         call send_line('Ion parallel motion     : OFF')
  115.      endif
  116.      if (kill_i_drift_flag == 0) then
  117.         call send_line('Ion curvature drift     : ON')
  118.      else
  119.         call send_line('Ion curvature drift     : OFF')
  120.      endif
  121.      if (kill_e_drift_flag == 0) then
  122.         call send_line('Electron curvature drift: ON')
  123.      else
  124.         call send_line('Electron curvature drift: OFF')
  125.      endif
  126.    
  127.      if (i_proc == 0 .and. output_flag == 1 .and. gkeigen_j_set == 0) then
  128.         open(unit=1,file=trim(runfile),status='old',position='append')
  129.    
  130.         write(1,*) '---------------- PARLLELISM DIMENSIONS --------------------'
  131.         write(1,10) 'MPI tasks',n_proc
  132.         write(1,10) 'OpenMP threads',n_omp
  133.         write(1,*) '----------------- GRID DIMENSIONS -------------------------'
  134.         write(1,10) 'n_n',n_n
  135.         write(1,10) 'n_x',n_x
  136.         write(1,10) 'n_stack',n_stack
  137.         write(1,10) 'n_blend',n_blend
  138.         write(1,10) 'n_pass',n_pass
  139.         write(1,10) 'n_trap',n_trap
  140.         write(1,10) 'n_energy',n_energy
  141.         write(1,10) 'n_field',n_field
  142.         write(1,*) '--'
  143.         write(1,10) 'n_spec',n_spec
  144.         write(1,10) 'n_ion',n_ion
  145.         write(1,10) 'n_kinetic',n_kinetic
  146.         write(1,10) 'n_gk',n_gk
  147.         write(1,10) 'indx_e',indx_e
  148.         write(1,*) '--'
  149.         write(1,30) 'FIELD POINTS:',n_n*n_x*n_blend*n_field
  150.         write(1,30) 'DIST. POINTS:',n_n*n_x*n_stack*(n_pass+n_trap)*n_energy*n_kinetic
  151.         write(1,*) '--'
  152.         write(1,20) 'energy_max',energy_max
  153.         write(1,20) 'dt',dt
  154.    
  155.         write(1,*) '--------------------- LOCAL PARAMETERS --------------------'
  156.         write(1,*) ' NOTE: use abs(SAFETY_FACTOR) as input'
  157.         write(1,20) '# RADIUS [INPUT]',r0
  158.         write(1,20) '.RADIUS',r_norm
  159.         write(1,20) '.ASPECT_RATIO',rmaj_s(ir_norm)
  160.         write(1,20) '.SHIFT',drmaj_s(ir_norm)
  161.         write(1,20) '.ZMAG',zmag_s(ir_norm)
  162.         write(1,20) '.DZMAG',dzmag_s(ir_norm)
  163.         write(1,20) '.KAPPA',kappa_s(ir_norm)
  164.         write(1,20) '.S_KAPPA',s_kappa_s(ir_norm)
  165.         write(1,20) '.DELTA',delta_s(ir_norm)
  166.         write(1,20) '.S_DELTA',s_delta_s(ir_norm)
  167.         write(1,20) '.ZETA',zeta_s(ir_norm)
  168.         write(1,20) '.S_ZETA',s_zeta_s(ir_norm)
  169.         write(1,20) '.SAFETY_FACTOR',abs(q_norm)
  170.         write(1,20) '.SHEAR',shat_norm 
  171.         write(1,20) '.RHO_STAR',rhos_norm
  172.         write(1,20) '.Z_EFF',z_eff_s(ir_norm)
  173.         write(1,20) '.MACH',mach_s(ir_norm)
  174.         write(1,20) '.PGAMMA',gamma_p_s(ir_norm)
  175.         write(1,20) '.GAMMA_E',gamma_e_s(ir_norm)
  176.    !     write(1,20) '.LAMBDA_DEBYE',lambda_debye
  177.         write(1,20) '.NU_EI',nu_s(indx_e,ir_norm)
  178.         write(1,20) '.NU_I_KROOK',nu_i_krook
  179.         write(1,20) '.IPCCW',ipccw
  180.         write(1,20) '.BTCCW',btccw
  181.         i = ir_norm
  182.         do is=1,n_spec-1
  183.            if (electron_method == 3) then
  184.               i_ion = n_spec-is+1
  185.               write(1,'(a)') ' # Adiabatic Ion '
  186.            else
  187.               i_ion = is
  188.               write(1,'(a,i2)') ' # Ion ',i_ion
  189.            endif
  190.            write(1,20) n_tag(is),den_s(i_ion,i)
  191.            write(1,20) t_tag(is),tem_s(i_ion,i)
  192.            write(1,20) dn_tag(is),dlnndr_s(i_ion,i)
  193.            write(1,20) dt_tag(is),dlntdr_s(i_ion,i)
  194.            write(1,20) z_tag(is),z(i_ion)
  195.            write(1,20) nu_tag(is),nu_s(i_ion,ir_norm)
  196.            write(1,20) mu_tag(is),mu(i_ion) 
  197.         enddo
  198.    
  199.         if (electron_method > 1) then
  200.            write(1,*) '# Electrons'
  201.            write(1,20) dn_tag(n_spec),dlnndr_s(indx_e,ir_norm)
  202.            write(1,20) dt_tag(n_spec),dlntdr_s(indx_e,ir_norm)
  203.            write(1,20) z_tag(n_spec),z(indx_e)
  204.            write(1,20) '.BETAE_UNIT',betae_unit_norm
  205.            write(1,20) mu_tag(n_spec),mu(indx_e)
  206.         endif
  207.    
  208.         !--------------------------------------------
  209.         ! Check for charge balance:
  210.         !
  211.         neutral = 0.0
  212.         do i=1,n_x
  213.            neutral = neutral+sum(z(:)*den_s(:,i))/n_x
ftn-6262 ftn: VECTOR GYRO_WRITE_INPUT, File = gyro_write_input.f90, Line = 213 
  A loop starting at line 213 was not vectorized because it contains a call to a subroutine or function on line 213.

  214.         enddo
  215.         !--------------------------------------------
  216.    
  217.         write(1,*) '--------------------- TGLF PARAMETERS ---------------------'
  218.         write(1,20) 'Q_PRIME',(q_norm/r_norm)**2*shat_norm
  219.         write(1,20) 'P_PRIME',-1.0*(q_norm/r_norm)*beta_unit_s(ir_norm)/(8*pi)*dlnpdr_s(ir_norm)
  220.         write(1,*) '---------------------- GS2 PARAMETERS ---------------------'
  221.         write(1,*) '        [User must set R_geo=Rmaj in GS2 namelist]'
  222.         write(1,20) 'B_unit/B_T0',rmaj_s(ir_norm)/GEO_f
  223.         write(1,20) 'tri',asin(delta_s(ir_norm))
  224.         write(1,20) 'akappri',s_kappa_s(ir_norm)*kappa_s(ir_norm)/r_norm
  225.         write(1,20) 'tripri',s_delta_s(ir_norm)/sqrt(1-delta_s(ir_norm)**2)/r_norm
  226.         write(1,20) 'beta',betae_unit_norm*(rmaj_s(ir_norm)/GEO_f)**2
  227.         write(1,20) 'beta_prime_input',-beta_star_s(ir_norm)*(rmaj_s(ir_norm)/GEO_f)**2
  228.         write(1,*) '------------- LOCAL PARAMETERS (diagnostic) ---------------'
  229.         write(1,20) 'n_i*z_i - n_e: ',neutral
  230.         write(1,20) 'r/R0',r(ir_norm)/rmaj_s(ir_norm)
  231.         if (radial_profile_method == 3) write(1,20) 'rho_norm',rhogrid_s(ir_norm)
  232.         write(1,20) 'b_unit',b_unit_norm
  233.         write(1,20) 'beta_unit_norm',beta_unit_s(ir_norm)
  234.         i = ir_norm
  235.         if (electron_method /= 3) then
  236.            do is=1,n_spec-1
  237.               write(1,20) 'betai_unit'//e_tag(is),beta_unit_s(i)* &
  238.                    pr_s(is,i)/sum(pr_s(1:n_spec,i))
  239.            enddo
  240.         else
  241.            do is=1,n_spec-1
  242.               write(1,20) 'betai_unit'//e_tag(is),beta_unit_s(i)* &
  243.                    pr_s(n_spec-is+1,i)/sum(pr_s(1:n_spec,i))
  244.            enddo
  245.         endif
  246.         write(1,20) 'betae_unit_norm',betae_unit_norm
  247.         write(1,20) 'beta_*',beta_star_s(ir_norm)
  248.         write(1,20) 'alpha_MHD',q_norm**2*rmaj_s(ir_norm)*beta_star_s(ir_norm)
  249.         write(1,20) 'lambda_*',lambda_debye/rhos_norm
  250.         write(1,20) 'volume (1/a^3)',GEO_volume
  251.         write(1,20) 'omega_00 (c_s/a)',w0_s(ir_norm)
  252.         write(1,*) '* Note that f = f_sim exp(i n omega0[r0] t)'
  253.         if (betae_unit_norm > 0.0) then
  254.            den_total = sum(den_s(1:n_ion,ir_norm)/den_s(indx_e,ir_norm)/mu(1:n_ion)**2)
ftn-6263 ftn: VECTOR GYRO_WRITE_INPUT, File = gyro_write_input.f90, Line = 254 
  A loop starting at line 254 was not vectorized because it contains a reference to a non-vector intrinsic on line 254.

  255.            v_alfven  = sqrt(2.0/(betae_unit_norm*den_total))
  256.    
  257.            write(1,*) '----------- ALFVEN WAVE PARAMETERS (diagnostic) -----------'
  258.            write(1,20) '(v_A/c_s)',v_alfven
  259.            write(1,20) 'Omega_TAE',v_alfven/(2*q_norm*rmaj_s(ir_norm))
  260.            write(1,20) 'Omega_A',v_alfven/(q_norm*rmaj_s(ir_norm))
  261.         endif
  262.         write(1,*) '------------------- UPWIND PARAMETERS ---------------------'
  263.         write(1,20) 'radial_upwind',radial_upwind
  264.         do i_ion=1,n_spec-1
  265.            write(1,20) 'orbit_upwind'//e_tag(i_ion),orbit_upwind_vec(i_ion)
  266.         enddo
  267.         if (electron_method == 2 .or. electron_method == 4) then
  268.            write(1,20) 'orbit_upwind (elec)',orbit_upwind_vec(0)
  269.         endif
  270.         if (source_flag == 1) then
  271.            write(1,*) '----------- SOURCE PARAMETERS -----------------'
  272.            write(1,20) 'nu_source',nu_source
  273.            write(1,10) 'n_source',n_source
  274.         endif
  275.         write(1,*) '--------------- RADIAL DOMAIN PARAMETERS ------------------'
  276.         write(1,20) 's_grid',s_grid
  277.         write(1,20) 'box_multiplier',box_multiplier
  278.         write(1,20) 'L/a',x_length
  279.         write(1,*) '--'
  280.         write(1,40) 'explicit_damp(i)',n_explicit_damp,explicit_damp
  281.         write(1,40) 'explicit_damp(e)',n_explicit_damp,explicit_damp_elec
  282.         write(1,*) '--'
  283.         write(1,40) 'offset',n_x_offset,real(n_x_offset)/real(n_x)
  284.         write(1,20) 'LEFT : r_a',r(1)
  285.         write(1,20) 'LEFT : r_a_physical',r(1+n_explicit_damp) 
  286.         write(1,20) 'NORM : r(ir_norm)',r(ir_norm)
  287.         write(1,20) 'RIGHT: r_b_physical',r(n_x-n_explicit_damp)
  288.         write(1,20) 'RIGHT: r_b',r(n_x)
  289.    
  290.      endif
  291.    
  292.      if (gyrotest_flag == 0 .and. output_flag == 1) then
  293.    
  294.         co_tau = maxval(abs(v_theta(:,:,:,:)))*dt/d_tau(1)*&
ftn-6263 ftn: VECTOR GYRO_WRITE_INPUT, File = gyro_write_input.f90, Line = 294 
  A loop starting at line 294 was not vectorized because it contains a reference to a non-vector intrinsic on line 294.

  295.              maxval(mu(1:n_kinetic))
  296.         co_r_loc = maxval(abs(omega_dr(:,:,:,:)))*dt/d_x
ftn-6263 ftn: VECTOR GYRO_WRITE_INPUT, File = gyro_write_input.f90, Line = 296 
  A loop starting at line 296 was not vectorized because it contains a reference to a non-vector intrinsic on line 296.

  297.    
  298.         call MPI_ALLREDUCE(co_r_loc,&
  299.              co_r,&
  300.              1,&
  301.              MPI_DOUBLE_PRECISION,&
  302.              MPI_MAX,&
  303.              GYRO_COMM_WORLD,&
  304.              i_err)
  305.    
  306.         if (collision_flag == 1) then
  307.            call MPI_ALLREDUCE(condition_number,&
  308.                 c_max,&
  309.                 1,&
  310.                 MPI_DOUBLE_PRECISION,&
  311.                 MPI_MAX,&
  312.                 GYRO_COMM_WORLD,&
  313.                 i_err)
  314.         endif
  315.    
  316.         if (i_proc == 0) then
  317.            write(1,*) '----------- PARALLELIZATION PARAMETERS --------'
  318.            write(1,30) '(nek) per subgroup:',n_nek_loc_1
  319.            write(1,30) '(ine) per subgroup:',n_ine_loc_1
  320.            write(1,*) '----------- TIME STEPPING PARAMETERS ----------'
  321.            write(1,20) 'plot_filter',plot_filter
  322.            write(1,50) 'time_skip',time_skip
  323.            write(1,50) 'restart_data_skip',restart_data_skip
  324.            write(1,*) '----------- STABILITY PARAMETERS ----------------'
  325.            write(1,20) 'd/dtau Courant',co_tau
  326.            write(1,20) '  d/dr Courant',co_r 
  327.            if (collision_flag == 1) then
  328.               write(1,20) 'Log(RBF Cond. num.)',log10(c_max)
  329.            endif
  330.         endif
  331.    
  332.      endif
  333.    
  334.      if (i_proc == 0 .and. output_flag == 1) then
  335.         write(1,*) '------------- CENTRAL WAVENUMBERS SIMULATED ---------------'
  336.         write(1,*) '    (k_y = nq/r, rho = rho_sD_unit)'
  337.      endif
  338.    
  339.      c_min = q_s(1)/r_s(1)*r_s(ir_norm)/q_s(ir_norm)*&
  340.           sqrt(tem_s(n_spec,1)/tem_s(n_spec,ir_norm))*b_unit_s(ir_norm)/b_unit_s(1)
  341.    
  342.      c_max = q_s(n_x)/r_s(n_x)*r_s(ir_norm)/q_s(ir_norm)*&
  343.           sqrt(tem_s(n_spec,n_x)/tem_s(n_spec,ir_norm))*b_unit_s(ir_norm)/b_unit_s(n_x)
  344.    
  345.      if (gyrotest_flag == 0) then
  346.    
  347.         call collect_real(krho_i(in_1,ir_norm),krho_collect)
  348.    
  349.         if (output_flag == 1) then
  350.    
  351.            do in=1,n_n
  352.    
  353.               if (i_proc == 0) then
  354.    
  355.                  if (krho_collect(in)*c_min >= 10.0 .or. &
  356.                       krho_collect(in)*c_max >= 10.0) then
  357.                     write(1,'(t2,a,i5,3x,a,f6.2,1x,2(a,f6.2,a))') &
  358.                          'n = ',n(in), 'k_y rho = ', &
  359.                          krho_collect(in),&
  360.                          '[',krho_collect(in)*c_min,']',&
  361.                          '[',krho_collect(in)*c_max,']'
  362.                  else
  363.                     write(1,'(t2,a,i5,3x,a,f6.3,1x,2(a,f6.3,a))') &
  364.                          'n = ',n(in), 'k_y rho = ', &
  365.                          krho_collect(in),&
  366.                          '[',krho_collect(in)*c_min,']',&
  367.                          '[',krho_collect(in)*c_max,']'
  368.                  endif
  369.    
  370.               endif
  371.    
  372.            enddo ! in
  373.    
  374.         endif
  375.    
  376.      else
  377.    
  378.         i = ir_norm
  379.         krho_collect(:) = n(:)*q_s(i)/r_s(i)*rhos_norm/b_unit_s(i)
ftn-6262 ftn: VECTOR GYRO_WRITE_INPUT, File = gyro_write_input.f90, Line = 379 
  A loop starting at line 379 was not vectorized because it contains a call to a subroutine or function on line 379.

  380.    
  381.         if (output_flag == 1) then
  382.    
  383.            do in=1,n_n
  384.               if (krho_collect(in)*c_min >= 10.0 .or. &
  385.                    krho_collect(in)*c_max >= 10.0) then
  386.                  write(1,'(t2,a,i5,3x,a,f6.2,1x,2(a,f6.2,a))') &
  387.                       'n = ',n(in), 'k_y rho = ', &
  388.                       krho_collect(in),&
  389.                       '[',krho_collect(in)*c_min,']',&
  390.                       '[',krho_collect(in)*c_max,']'
  391.               else
  392.                  write(1,'(t2,a,i5,3x,a,f6.3,1x,2(a,f6.3,a))') &
  393.                       'n = ',n(in), 'k_y rho = ', &
  394.                       krho_collect(in),&
  395.                       '[',krho_collect(in)*c_min,']',&
  396.                       '[',krho_collect(in)*c_max,']'
  397.               endif
  398.            enddo ! in
  399.    
  400.         endif
  401.    
  402.      endif
  403.    
  404.    
  405.      if (i_proc == 0 .and. output_flag == 1) then
  406.         write(1,*) ' '
  407.         write(1,'(t2,a,t27,f10.6)') 'min resolved k_x*rho_sD : ', &
  408.              2*pi/(x_length/rhos_abs)
  409.         write(1,'(t2,a,t27,f10.6)') 'max resolved k_x*rho_sD : ', &
  410.              2*pi/(x_length/rhos_abs)*n_x/4.0
  411.    
  412.         !-----------------------------------------------------------
  413.         ! Compute central box size
  414.         !
  415.         write(1,*) '--------------- CENTRAL BOX SIZE -----------------'
  416.         write(1,25) 'abs(Lx/rho_sD)',x_length/abs(rhos_abs)
  417.         if (krho_collect(1) == 0.0) then
  418.            if (n_n > 1) then
  419.               write(1,25) 'abs(Ly/rho_sD)',abs(2*pi/krho_collect(2))
  420.            endif
  421.         else
  422.            write(1,25) 'abs(Ly/rho_sD)',abs(2*pi/krho_collect(1))
  423.         endif
  424.         write(1,25) '=> abs(dx/rho_sD)',x_length/rhos_abs/n_x
  425.         write(1,*) '--------------------------------------------------'
  426.         !
  427.         ! Check for sufficient gyro bandwidth
  428.         !
  429.         write(1,*) '------------ GYRO-OPERATOR BANDWIDTH -------------'
  430.         if (m_gyro == n_x/2) then
  431.            write(1,*) '=> EXACT BESSEL.'
  432.         else
  433.            i = ir_norm
  434.            do i_ion=1,n_ion
  435.               x_s = sqrt(tem_s(i_ion,i))/mu(i_ion)/abs(z(i_ion))
  436.               num_rho = x_length/(rhos_abs*x_s)
  437.               band(i_ion) = (2*m_gyro+1.0)*num_rho/n_x
  438.               write(1,25) 'Ion '//achar(i_ion-1+iachar("1")),band(i_ion)
  439.            enddo
  440.            if (minval(band) < 10.0 .and. nonlinear_flag == 1) then
  441.               write(1,*) 'WARNING: RADIAL_GYRO_BAND should be > 10.0'
  442.            endif
  443.         endif
  444.    
  445.         write(1,*) '--------------------------------------------------'
  446.         !
  447.         ! Check for sufficient boundary layer width
  448.         !
  449.         if (boundary_method == 2) then
  450.            write(1,*) '---------------- BUFFER WIDTH --------------------'
  451.            num_rho_min = 8.0
  452.            do i_ion=1,n_ion
  453.               i = n_explicit_damp/2+1
  454.               x_s = sqrt(tem_s(i_ion,i))/mu(i_ion)/abs(z(i_ion))
  455.               num_rho_l = (r(1+n_explicit_damp)-r(1))/(rhos_abs*x_s)
  456.               i = n_x-n_explicit_damp/2
  457.               x_s = sqrt(tem_s(i_ion,i))/mu(i_ion)/abs(z(i_ion))
  458.               num_rho_r = (r(n_x)-r(n_x-n_explicit_damp))/(rhos_abs*x_s)
  459.               write(1,25) 'Ion '//achar(i_ion-1+iachar("1")),num_rho_l,num_rho_r
  460.               if (num_rho_l < num_rho_min) num_rho_min = num_rho_l
  461.               if (num_rho_r < num_rho_min) num_rho_min = num_rho_r
  462.            enddo
  463.            if (num_rho_min < 8.0) then
  464.               write(1,*) 'WARNING: All buffer widths should be > 8.0'
  465.            endif
  466.            write(1,*) '--------------------------------------------------'
  467.         endif
  468.    
  469.         write(1,20) 'Startup time',startup_time
  470.         write(1,*) '--------------------------------------------------'
  471.         ! File list
  472.         write(1,*) 'PLEASE SEE: '
  473.         write(1,*) ' - out.gyro.units for normalizing parameters'
  474.         write(1,*) ' - out.gyro.memory for memory usage'
  475.         write(1,*) ' - out.gyro.efficiency for parallelization efficiency'
  476.         write(1,*) ' - out.gyro.phase_space for velocity-space nodes and weights'
  477.         close(1)
  478.    
  479.      endif
  480.    
  481.      if (debug_flag == 1 .and. i_proc == 0) then
  482.         print *,'[gyro_write_input done]'
  483.      endif
  484.    
  485.    10 format(t2,a,t23,': ',i4) 
  486.    20 format(t2,a,t23,': ',20(f10.6,1x)) 
  487.    25 format(t2,a,t23,': ',20(f12.6,1x)) 
  488.    30 format(t2,a,t23,': ',i9) 
  489.    40 format(t2,a,t23,': ',i3,' (',f8.4,')') 
  490.    50 format(t2,a,t23,': ',i5) 
  491.    
  492.    end subroutine gyro_write_input
ftn-5001 ftn: NOTE GYRO_WRITE_INPUT, File = gyro_write_input.f90, Line = 492 
  Local variable "EMAX_TAG" is assigned a value but never used.

  493.    


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                     C o m m o n   B l o c k   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIFCMB5/                            Length: 4 bytes

     GYRO_WRITE_INPUT                 Block is used from MPI_CONSTANTS

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIFCMB9/                            Length: 4 bytes

     GYRO_WRITE_INPUT                 Block is used from MPI_CONSTANTS

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIPRIV1/                            Length: 28 bytes

     GYRO_WRITE_INPUT                 Block is used from MPI_CONSTANTS

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIPRIV2/                            Length: 24 bytes

     GYRO_WRITE_INPUT                 Block is used from MPI_CONSTANTS

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIPRIVC/                            Length: 2 bytes

     GYRO_WRITE_INPUT                 Block is used from MPI_CONSTANTS


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                         E x t e r n a l   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name  Messages
----  --------
ABS(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_WRITE_INPUT (Line 50, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 169, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 294, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 296, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 416, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 419, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 422, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 435, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 454, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 457, file gyro_write_input.f90)

Name  Messages
----  --------
ACHAR(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_WRITE_INPUT (Line 58, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 438, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 459, file gyro_write_input.f90)

Name  Messages
----  --------
ASIN(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_WRITE_INPUT (Line 223, file gyro_write_input.f90)

Name  Messages
----  --------
CHAR(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
COLLECT_REAL
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_WRITE_INPUT (Line 347, file gyro_write_input.f90)

Name  Messages
----  --------
COMMEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
COMMNEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
DATATYPEEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
DATATYPENEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
ERRHANDLEREQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
ERRHANDLERNEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
FILEEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
FILENEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
GEO_INTERFACE
      Defined as:  No definitions.

      Used By:     GYRO_WRITE_INPUT

Name  Messages
----  --------
GROUPEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
GROUPNEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
GYRO_GLOBALS
      Defined as:  No definitions.

      Used By:     GYRO_WRITE_INPUT

Name  Messages
----  --------
GYRO_POINTERS
      Defined as:  No definitions.

      Used By:     GYRO_WRITE_INPUT

Name  Messages
----  --------
GYRO_PROFILE_EXP
      Defined as:  No definitions.

      Used By:     GYRO_WRITE_INPUT

Name  Messages
----  --------
GYRO_WRITE_INPUT
      Defined as:  Subroutine (line 9, file gyro_write_input.f90)

      Interface:   None

      Calls:       ABS(Intrinsic) (Line 50, file gyro_write_input.f90)
                   ABS(Intrinsic) (Line 169, file gyro_write_input.f90)
                   ABS(Intrinsic) (Line 294, file gyro_write_input.f90)
                   ABS(Intrinsic) (Line 296, file gyro_write_input.f90)
                   ABS(Intrinsic) (Line 416, file gyro_write_input.f90)
                   ABS(Intrinsic) (Line 419, file gyro_write_input.f90)
                   ABS(Intrinsic) (Line 422, file gyro_write_input.f90)
                   ABS(Intrinsic) (Line 435, file gyro_write_input.f90)
                   ABS(Intrinsic) (Line 454, file gyro_write_input.f90)
                   ABS(Intrinsic) (Line 457, file gyro_write_input.f90)
                   IACHAR(Intrinsic) (Line 58, file gyro_write_input.f90)
                   IACHAR(Intrinsic) (Line 438, file gyro_write_input.f90)
                   IACHAR(Intrinsic) (Line 459, file gyro_write_input.f90)
                   ACHAR(Intrinsic) (Line 58, file gyro_write_input.f90)
                   ACHAR(Intrinsic) (Line 438, file gyro_write_input.f90)
                   ACHAR(Intrinsic) (Line 459, file gyro_write_input.f90)
                   SEND_LINE (Line 110, file gyro_write_input.f90)
                   SEND_LINE (Line 112, file gyro_write_input.f90)
                   SEND_LINE (Line 114, file gyro_write_input.f90)
                   SEND_LINE (Line 117, file gyro_write_input.f90)
                   SEND_LINE (Line 119, file gyro_write_input.f90)
                   SEND_LINE (Line 122, file gyro_write_input.f90)
                   SEND_LINE (Line 124, file gyro_write_input.f90)
                   TRIM(Intrinsic) (Line 128, file gyro_write_input.f90)
                   SUM(Intrinsic) (Line 213, file gyro_write_input.f90)
                   SUM(Intrinsic) (Line 238, file gyro_write_input.f90)
                   SUM(Intrinsic) (Line 243, file gyro_write_input.f90)
                   SUM(Intrinsic) (Line 254, file gyro_write_input.f90)
                   ASIN(Intrinsic) (Line 223, file gyro_write_input.f90)
                   SQRT(Intrinsic) (Line 225, file gyro_write_input.f90)
                   SQRT(Intrinsic) (Line 255, file gyro_write_input.f90)
                   SQRT(Intrinsic) (Line 340, file gyro_write_input.f90)
                   SQRT(Intrinsic) (Line 343, file gyro_write_input.f90)
                   SQRT(Intrinsic) (Line 435, file gyro_write_input.f90)
                   SQRT(Intrinsic) (Line 454, file gyro_write_input.f90)
                   SQRT(Intrinsic) (Line 457, file gyro_write_input.f90)
                   REAL(Intrinsic) (Line 283, file gyro_write_input.f90)
                   REAL(Intrinsic) (Line 283, file gyro_write_input.f90)
                   MAXVAL(Intrinsic) (Line 294, file gyro_write_input.f90)
                   MAXVAL(Intrinsic) (Line 295, file gyro_write_input.f90)
                   MAXVAL(Intrinsic) (Line 296, file gyro_write_input.f90)
                   MPI_ALLREDUCE (Line 298, file gyro_write_input.f90)
                   MPI_ALLREDUCE (Line 307, file gyro_write_input.f90)
                   LOG10(Intrinsic) (Line 328, file gyro_write_input.f90)
                   COLLECT_REAL (Line 347, file gyro_write_input.f90)
                   MINVAL(Intrinsic) (Line 440, file gyro_write_input.f90)

        Uses:      MPI
                   MPI_BASE  (indirectly)
                   MPI_SIZEOFS  (indirectly)
                   MPI_CONSTANTS  (indirectly)
                   GYRO_GLOBALS
                   GYRO_PROFILE_EXP
                   GYRO_POINTERS
                   MATH_CONSTANTS
                   GEO_INTERFACE
                   OMPDATA

Name  Messages
----  --------
IACHAR(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_WRITE_INPUT (Line 58, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 438, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 459, file gyro_write_input.f90)

Name  Messages
----  --------
INFOEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
INFONEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
LOG10(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_WRITE_INPUT (Line 328, file gyro_write_input.f90)

Name  Messages
----  --------
MATH_CONSTANTS
      Defined as:  No definitions.

      Used By:     GYRO_WRITE_INPUT

Name  Messages
----  --------
MAXVAL(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_WRITE_INPUT (Line 294, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 295, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 296, file gyro_write_input.f90)

Name  Messages
----  --------
MESSAGEEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MESSAGENEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MINVAL(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_WRITE_INPUT (Line 440, file gyro_write_input.f90)

Name  Messages
----  --------
MPI
      Defined as:  No definitions.

      Used By:     GYRO_WRITE_INPUT

Name  Messages
----  --------
MPI_ALLREDUCE
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_WRITE_INPUT (Line 298, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 307, file gyro_write_input.f90)

Name  Messages
----  --------
MPI_BASE
      Defined as:  No definitions.

      Used By:     GYRO_WRITE_INPUT  (indirectly)

Name  Messages
----  --------
MPI_CONSTANTS
      Defined as:  No definitions.

      Used By:     GYRO_WRITE_INPUT  (indirectly)

Name  Messages
----  --------
MPI_SIZEOFS
      Defined as:  No definitions.

      Used By:     GYRO_WRITE_INPUT  (indirectly)

Name  Messages
----  --------
MPI_SIZEOF_CH in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_CHV in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_CX in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_CXV in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_D in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_DV in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_I in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_I1 in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_I1V in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_I2 in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_I2V in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_I8 in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_I8V in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_IV in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_L in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_LV in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_R in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_RV in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
OMPDATA
      Defined as:  No definitions.

      Used By:     GYRO_WRITE_INPUT

Name  Messages
----  --------
OPEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
OPNEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
REAL(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_WRITE_INPUT (Line 283, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 283, file gyro_write_input.f90)

Name  Messages
----  --------
REQUESTEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
REQUESTNEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
SEND_LINE
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_WRITE_INPUT (Line 110, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 112, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 114, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 117, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 119, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 122, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 124, file gyro_write_input.f90)

Name  Messages
----  --------
SQRT(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_WRITE_INPUT (Line 225, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 255, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 340, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 343, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 435, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 454, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 457, file gyro_write_input.f90)

Name  Messages
----  --------
SUM(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_WRITE_INPUT (Line 213, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 238, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 243, file gyro_write_input.f90)
                   GYRO_WRITE_INPUT (Line 254, file gyro_write_input.f90)

Name  Messages
----  --------
TRIM(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_WRITE_INPUT (Line 128, file gyro_write_input.f90)

Name  Messages
----  --------
WINEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
WINNEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
_F90_TRIM(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
__MAXVAL(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
__MINVAL(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
__SUM(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
