%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /global/u2/b/bassem/gyro-EP/src/gyro_build_sparse_poisson.f90
Compiled : 01/19/21  15:35:32
Compiler : Version 9.1.0
Ftnlx    : Version 9.1.0 
Target   : x86-64
Command  : ftn_driver.exe -hcpu=haswell -hdynamic -D__CRAYXC -D__CRAY_HASWELL
           -D__CRAYXT_COMPUTE_LINUX_TARGET -hnetwork=aries -hnoomp -em
           -J/global/homes/b/bassem/gyro-EP/modules -sreal64 -eD -Ktrap=fp -m1
           -Rbcdps -G0 -I/opt/cray/pe/fftw/3.3.8.4/haswell/include
           -c gyro_build_sparse_poisson.f90
           -I/opt/cray/pe/cce/9.1.0/cce-clang/x86_64/lib/clang/9.0.0/include
           -I/opt/cray/pe/cce/9.1.0/cce/x86_64/include/craylibs -I/usr/include
           -I/usr/include -I/opt/cray/pe/fftw/3.3.8.4/haswell/include
           -I/opt/cray/pe/libsci/19.06.1/CRAY/9.0/x86_64/include
           -I/opt/cray/pe/mpt/7.7.10/gni/mpich-cray/9.0/include
           -I/opt/cray/pe/hdf5/1.10.5.2/cray/9.0/include
           -I/opt/cray/pe/netcdf/4.6.3.2/cray/9.0/include
           -I/opt/cray/rca/2.2.20-7.0.1.1_4.53__g8e3fb5b.ari/include
           -I/opt/cray/alps/6.6.58-7.0.1.1_6.10__g437d88db.ari/include
           -I/opt/cray/xpmem/2.2.20-7.0.1.1_4.14__g0475745.ari/include
           -I/opt/cray/gni-headers/5.0.12.0-7.0.1.1_6.32__g3b1768f.ari/include
           -I/opt/cray/dmapp/7.1.1-7.0.1.1_4.54__g38cf134.ari/include
           -I/opt/cray/pe/pmi/5.0.14/include
           -I/opt/cray/ugni/6.0.14.0-7.0.1.1_7.40__ge78e5b0.ari/include
           -I/opt/cray/udreg/2.3.2-7.0.1.1_3.38__g8175d3d.ari/include
           -I/opt/cray/wlm_detect/1.3.3-7.0.1.1_4.16__g7109084.ari/include
           -I/opt/cray/krca/2.2.6-7.0.1.1_5.39__gb641b12.ari/include
           -I/opt/cray-hss-devel/9.0.0/include
Program
  Units  : GYRO_BUILD_SPARSE_POISSON

ftnlx report
------------
Source   : /global/u2/b/bassem/gyro-EP/src/gyro_build_sparse_poisson.f90
Date     : 01/19/2021  15:35:32


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    1.    !-------------------------------------------------------
    2.    ! gyro_build_sparse_poisson.f90 [caller: sparse_solve_*]
    3.    !
    4.    ! PURPOSE:
    5.    !  Fill elements of sparse Poisson submatrix.
    6.    !
    7.    ! NOTES:
    8.    !  See gyro_build_sparse_maxwell.f90 for maximal matrix
    9.    !  block structure.
   10.    !-------------------------------------------------------
   11.    
   12.    subroutine gyro_build_sparse_poisson
   13.    
   14.      use gyro_globals
   15.      use math_constants
   16.      use gyro_poisson_private
   17.    
   18.      !------------------------
   19.      implicit none
   20.      !------------------------
   21.    
   22.    
   23.      ! Zero only the in_1 components:
   24.      m_poisson(:)    = (0.0,0.0)
ftn-6263 ftn: VECTOR GYRO_BUILD_SPARSE_POISSON, File = gyro_build_sparse_poisson.f90, Line = 24 
  A loop starting at line 24 was not vectorized because it contains a reference to a non-vector intrinsic on line 24.

   25.      indx_poisson(:) = 0
ftn-6263 ftn: VECTOR GYRO_BUILD_SPARSE_POISSON, File = gyro_build_sparse_poisson.f90, Line = 25 
  A loop starting at line 25 was not vectorized because it contains a reference to a non-vector intrinsic on line 25.

   26.    
   27.      k_counter = 0
   28.    
   29.      !-----------------------------------------------------------
   30.      ! Compute block M(1,1) 
   31.      !
   32.      do i=1,n_x_max
   33.         do i_diff=-m_gyro,m_gyro-i_gyro
   34.    
   35.            ip = i_loop(i+i_diff)
   36.    
   37.            if (ip >= 1 .and. ip <= n_x) then
   38.    
   39.               do j=1,n_blend
   40.                  do jp=1,n_blend
   41.    
   42.                     val = ap_mm(i,i_diff,j,jp)
   43.    
   44.                     ij  = i + (j-1)*n_x
   45.                     ijp = ip + (jp-1)*n_x
   46.    
   47.                     k_counter = k_counter+1
   48.    
   49.                     ! ROW:
   50.                     indx_poisson(k_counter)           = ij
   51.                     ! COLUMN:
   52.                     indx_poisson(k_counter+n_poisson) = ijp
   53.    
   54.                     m_poisson(k_counter) = val
   55.    
   56.                  enddo ! jp
   57.               enddo ! j
   58.    
   59.            endif
   60.    
   61.         enddo ! ip
   62.      enddo ! i
   63.    
   64.      if (boundary_method == 1 .and. n_1(in_1) == 0) then
   65.    
   66.         !------------------------------------------------
   67.         ! Here, we need to write a line of 1's in last 
   68.         ! row (i=n_x) of blocks M(1,1) and M(2,2).  A 
   69.         ! line of zeros in the last rows of M(2,1) and 
   70.         ! M(1,2) will of course be automatic.
   71.         !     
   72.         ! We do this to ensure that all n=0 modes have 
   73.         ! no radial average.
   74.         !------------------------------------------------
   75.    
   76.         !------------------------------------------------
   77.         ! Line of 1's in M(1,1)
   78.         ! 
   79.         i = n_x
   80.         do j=1,n_blend
   81.            do ip=1,n_x
   82.    
   83.               ! Diagonal in (j,jp)
   84.               jp = j
   85.    
   86.               ij  = i + (j-1)*n_x
   87.               ijp = ip + (jp-1)*n_x
   88.    
   89.               k_counter = k_counter+1
   90.    
   91.               indx_poisson(k_counter)           = ij
   92.               indx_poisson(k_counter+n_poisson) = ijp
   93.    
   94.               m_poisson(k_counter) = (1.0,0.0)
   95.    
   96.            enddo ! ip
   97.         enddo ! j
   98.         !------------------------------------------------
   99.    
  100.      endif
  101.    
  102.      if (k_counter /= n_poisson) then
  103.         print *,k_counter,n_poisson
  104.         call catch_error("Element count mismatch in gyro_build_sparse_poisson")
  105.      endif
  106.    
  107.      if (debug_flag == 1 .and. i_proc == 0) then
  108.         print *,'[gyro_build_sparse_poisson done]'
  109.      endif
  110.    
  111.    end subroutine gyro_build_sparse_poisson
  112.    


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                         E x t e r n a l   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name  Messages
----  --------
CATCH_ERROR
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_BUILD_SPARSE_POISSON (Line 104, file gyro_build_sparse_poisson.f90)

Name  Messages
----  --------
CHAR(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
GYRO_BUILD_SPARSE_POISSON
      Defined as:  Subroutine (line 12, file gyro_build_sparse_poisson.f90)

      Interface:   None

      Calls:       CATCH_ERROR (Line 104, file gyro_build_sparse_poisson.f90)

        Uses:      GYRO_GLOBALS
                   MATH_CONSTANTS
                   GYRO_POISSON_PRIVATE

Name  Messages
----  --------
GYRO_GLOBALS
      Defined as:  No definitions.

      Used By:     GYRO_BUILD_SPARSE_POISSON

Name  Messages
----  --------
GYRO_POISSON_PRIVATE
      Defined as:  No definitions.

      Used By:     GYRO_BUILD_SPARSE_POISSON

Name  Messages
----  --------
MATH_CONSTANTS
      Defined as:  No definitions.

      Used By:     GYRO_BUILD_SPARSE_POISSON


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
