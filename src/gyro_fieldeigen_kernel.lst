%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /global/u2/b/bassem/gyro-EP/src/gyro_fieldeigen_kernel.f90
Compiled : 01/19/21  15:35:37
Compiler : Version 9.1.0
Ftnlx    : Version 9.1.0 
Target   : x86-64
Command  : ftn_driver.exe -hcpu=haswell -hdynamic -D__CRAYXC -D__CRAY_HASWELL
           -D__CRAYXT_COMPUTE_LINUX_TARGET -hnetwork=aries -hnoomp -em
           -J/global/homes/b/bassem/gyro-EP/modules -sreal64 -eD -Ktrap=fp -m1
           -Rbcdps -G0 -I/opt/cray/pe/fftw/3.3.8.4/haswell/include
           -c gyro_fieldeigen_kernel.f90
           -I/opt/cray/pe/cce/9.1.0/cce-clang/x86_64/lib/clang/9.0.0/include
           -I/opt/cray/pe/cce/9.1.0/cce/x86_64/include/craylibs -I/usr/include
           -I/usr/include -I/opt/cray/pe/fftw/3.3.8.4/haswell/include
           -I/opt/cray/pe/libsci/19.06.1/CRAY/9.0/x86_64/include
           -I/opt/cray/pe/mpt/7.7.10/gni/mpich-cray/9.0/include
           -I/opt/cray/pe/hdf5/1.10.5.2/cray/9.0/include
           -I/opt/cray/pe/netcdf/4.6.3.2/cray/9.0/include
           -I/opt/cray/rca/2.2.20-7.0.1.1_4.53__g8e3fb5b.ari/include
           -I/opt/cray/alps/6.6.58-7.0.1.1_6.10__g437d88db.ari/include
           -I/opt/cray/xpmem/2.2.20-7.0.1.1_4.14__g0475745.ari/include
           -I/opt/cray/gni-headers/5.0.12.0-7.0.1.1_6.32__g3b1768f.ari/include
           -I/opt/cray/dmapp/7.1.1-7.0.1.1_4.54__g38cf134.ari/include
           -I/opt/cray/pe/pmi/5.0.14/include
           -I/opt/cray/ugni/6.0.14.0-7.0.1.1_7.40__ge78e5b0.ari/include
           -I/opt/cray/udreg/2.3.2-7.0.1.1_3.38__g8175d3d.ari/include
           -I/opt/cray/wlm_detect/1.3.3-7.0.1.1_4.16__g7109084.ari/include
           -I/opt/cray/krca/2.2.6-7.0.1.1_5.39__gb641b12.ari/include
           -I/opt/cray-hss-devel/9.0.0/include
Program
  Units  : GYRO_FIELDEIGEN_KERNEL

ftnlx report
------------
Source   : /global/u2/b/bassem/gyro-EP/src/gyro_fieldeigen_kernel.f90
Date     : 01/19/2021  15:35:38


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    1.    !-----------------------------------------------------------------
    2.    ! gyro_fieldeigen_kernel.f90
    3.    !
    4.    ! PURPOSE:
    5.    !  Kernel of the Maxwell dispersion matrix eigenvalue problem.
    6.    !  Compute the determinant of the dispersion matrix.
    7.    !------------------------------------------------------------------
    8.    
    9.    subroutine gyro_fieldeigen_kernel
   10.    
   11.      use mpi
   12.      use gyro_globals
   13.      use gyro_pointers
   14.      use math_constants
   15.      use gyro_fieldeigen_private
   16.    
   17.      !---------------------------------------------------------------
   18.      implicit none
   19.      !---------------------------------------------------
   20.    
   21.      a_eigen_loc(:,:) = (0.0,0.0)
ftn-6263 ftn: VECTOR GYRO_FIELDEIGEN_KERNEL, File = gyro_fieldeigen_kernel.f90, Line = 21 
  A loop starting at line 21 was not vectorized because it contains a reference to a non-vector intrinsic on line 21.

   22.    
   23.      do is=1,n_kinetic
   24.         p_nek_loc = 0
   25.         do ie2=1,n_energy/n_proc
   26.    
   27.            ie = ie2+i_proc_1*n_energy/n_proc
   28.    
   29.            do k=1,n_lambda
   30.    
   31.               p_nek_loc = p_nek_loc+1
   32.    
   33.               ck = class(k)
   34.    
   35.               !-------------------------------------------------------------
   36.               ! v_omegastar = -omega_star
   37.               !
   38.               do i=1,n_x
   39.    
   40.                  do m=1,n_stack
   41.    
   42.                     mk = m + (k-1)*n_stack 
   43.    
   44.                     v_omegastar(i,mk) = -i_c*omega_star(m,i,p_nek_loc,is)
   45.    
   46.                  enddo ! m
   47.    
   48.               enddo ! i
   49.               !-------------------------------------------------------------
   50.    
   51.               !-------------------------------------------------------------
   52.               ! fg = conjg(F_blend) * Gyroavgop
   53.               !
   54.               do m=1,n_stack
   55.    
   56.                  m0 = m_phys(ck,m)
   57.                  mk = m+(k-1)*n_stack 
   58.    
   59.                  do i=1,n_x
   60.                     do i_diff=-m_gyro,m_gyro-i_gyro
   61.    
   62.                        fg(:,i_diff,i,mk,1) = w_gyro0(m0,i_diff,i,p_nek_loc,is) &
ftn-6262 ftn: VECTOR GYRO_FIELDEIGEN_KERNEL, File = gyro_fieldeigen_kernel.f90, Line = 62 
  A loop starting at line 62 was not vectorized because it contains a call to a subroutine or function on line 62.

   63.                             *conjg(c_blend(:,m0,i,p_nek_loc))
   64.    
   65.                        if (n_field > 1) then
   66.                           fg(:,i_diff,i,mk,2) = w_gyro0(m0,i_diff,i,p_nek_loc,is) &
ftn-6262 ftn: VECTOR GYRO_FIELDEIGEN_KERNEL, File = gyro_fieldeigen_kernel.f90, Line = 66 
  A loop starting at line 66 was not vectorized because it contains a call to a subroutine or function on line 66.

   67.                                *(-v_para(m,i,p_nek_loc,is))  &
   68.                                *conjg(c_blend(:,m0,i,p_nek_loc))
   69.                        endif
   70.    
   71.                        if (n_field > 2) then
   72.                           fg(:,i_diff,i,mk,3) = 2.0*energy(ie)*lambda(i,k) &
ftn-6262 ftn: VECTOR GYRO_FIELDEIGEN_KERNEL, File = gyro_fieldeigen_kernel.f90, Line = 72 
  A loop starting at line 72 was not vectorized because it contains a call to a subroutine or function on line 72.

   73.                                *tem_s(is,i)/z(is) &
   74.                                *w_gyro1(m0,i_diff,i,p_nek_loc,is) &
   75.                                *conjg(c_blend(:,m0,i,p_nek_loc))
   76.                        endif
   77.                     enddo
   78.                  enddo
   79.               enddo ! m
   80.               !-------------------------------------------------------------
   81.    
   82.            enddo ! k
   83.    
   84.            if (collision_flag == 1 .and. is == indx_e) then
   85.    
   86.               propinvk(:,:) = (0.0,0.0)
ftn-6263 ftn: VECTOR GYRO_FIELDEIGEN_KERNEL, File = gyro_fieldeigen_kernel.f90, Line = 86 
  A loop starting at line 86 was not vectorized because it contains a reference to a non-vector intrinsic on line 86.

   87.    
   88.               ! Dense-in-k (collisions)
   89.    
   90.               !------------------------------------------------------------
   91.               ! Set propagator elements
   92.               !
   93.               ! Diagonal in k
   94.               !
   95.               do i=1,n_x
   96.                  do m=1,n_stack
   97.                     do k=1,n_lambda
   98.                        im = i+(m-1)*n_x
   99.                        imk = i+(m-1)*n_x+(k-1)*n_x*n_stack
  100.                        do ip=1,n_x
  101.                           do mp=1,n_stack
  102.                              impr = ip+(mp-1)*n_x
  103.                              imkp = ip+(mp-1)*n_x+(k-1)*n_x*n_stack
  104.    
  105.                              propinvk(imk,imkp) = vdotgrad(im,impr,k,ie2,is)
  106.    
  107.                           enddo
  108.                        enddo
  109.                     enddo
  110.                  enddo
  111.               enddo
  112.               !------------------------------------------------------------
  113.    
  114.               !------------------------------------------------------------
  115.               ! Diagonal in i
  116.               !
  117.               do i=1,n_x
  118.                  do m=1,n_stack
  119.                     do k=1,n_lambda
  120.                        mk = m+(k-1)*n_stack
  121.                        imk = i+(m-1)*n_x+(k-1)*n_x*n_stack
  122.                        do mp=1,n_stack
  123.                           do kp=1,n_lambda
  124.                              mkp = mp+(kp-1)*n_stack
  125.                              imkp = i+(mp-1)*n_x+(kp-1)*n_x*n_stack
  126.    
  127.                              propinvk(imk,imkp) =  propinvk(imk,imkp) &
  128.                                   -nu_op(mkp,mk,i,ie2)
  129.    
  130.                           enddo
  131.                        enddo
  132.                     enddo
  133.                  enddo
  134.               enddo
  135.               !------------------------------------------------------------
  136.    
  137.               !------------------------------------------------------------
  138.               ! Diagonal in imk
  139.               !
  140.               do imk=1,n_imk
  141.                  propinvk(imk,imk) = propinvk(imk,imk)-i_c*omega_eigen
  142.               enddo
  143.               !-----------------------------------------------------------
  144.    
  145.               !-----------------------------------------------------------
  146.               ! Invert the propagator: final result is "propinv"
  147.               ! (these are by far the most expensive operations)
  148.               !
  149.               call ZGETRF(n_imk,n_imk,propinvk,n_imk,i_piv_imk,info_imk)
  150.               call ZGETRI(n_imk,propinvk,n_imk,i_piv_imk,work_imk,n_imk,info_imk)
  151.               !-----------------------------------------------------------
  152.    
  153.               gk_rightk(:,:) = 0.0
ftn-6263 ftn: VECTOR GYRO_FIELDEIGEN_KERNEL, File = gyro_fieldeigen_kernel.f90, Line = 153 
  A loop starting at line 153 was not vectorized because it contains a reference to a non-vector intrinsic on line 153.

  154.               do ixp = 1,n_field
  155.                  do ip=1,n_x
  156.                     do jp=1,n_blend
  157.                        ijp = ip + (jp-1)*n_x + (ixp-1)*n_x*n_blend
  158.                        do mp=1,n_stack
  159.                           do kp=1,n_lambda
  160.                              mkp = mp + (kp-1)*n_stack
  161.                              do idiff_ipp=-m_gyro,m_gyro-i_gyro
  162.    
  163.                                 ipp  = i_cyc(ip+idiff_ipp)
  164.                                 imkp = ipp+n_x*(mp-1)+n_x*n_stack*(kp-1)
  165.    
  166.                                 gk_rightk(imkp,ijp) = gk_rightk(imkp,ijp) &
  167.                                      +(-i_c*omega_eigen*z(is)*alpha_s(is,ipp) &
  168.                                      + v_omegastar(ipp,mkp)) &
  169.                                      * conjg(fg(jp,idiff_ipp,ip,mkp,ixp))
  170.    
  171.                              enddo
  172.                           enddo
  173.                        enddo
  174.                     enddo
  175.                  enddo
  176.               enddo ! ixp
  177.    
  178.    
  179.               gk_leftk(:,:) = 0.0
ftn-6263 ftn: VECTOR GYRO_FIELDEIGEN_KERNEL, File = gyro_fieldeigen_kernel.f90, Line = 179 
  A loop starting at line 179 was not vectorized because it contains a reference to a non-vector intrinsic on line 179.

  180.               do ix=1,n_field
  181.                  do i=1,n_x
  182.                     do j=1,n_blend
  183.                        ij = i + (j-1)*n_x + (ix-1)*n_x*n_blend
  184.                        do m=1,n_stack
  185.                           do k=1,n_lambda
  186.                              mk = m + (k-1)*n_stack
  187.                              do idiff_ippp=-m_gyro,m_gyro-i_gyro
  188.    
  189.                                 ippp = i_cyc(i+idiff_ippp)
  190.                                 imk  = ippp+n_x*(m-1)+n_x*n_stack*(k-1)
  191.    
  192.                                 gk_leftk(ij,imk) = gk_leftk(ij,imk) &
  193.                                      +z(is)*w_p(ie,i,k)  &
  194.                                      *fg(j,idiff_ippp,i,mk,ix) 
  195.    
  196.                              enddo
  197.                           enddo
  198.                        enddo
  199.                     enddo
  200.                  enddo
  201.               enddo ! ix
  202.    
  203.               !-----------------------------------------------------------
  204.               ! Matrix triple-product:  gk_leftk * propinvk * gk_rightk
  205.               !
  206.               call ZGEMM('N','N',n_eigen,n_imk,n_imk,cmplx_1,&
  207.                    gk_leftk,n_eigen,propinvk,n_imk,cmplx_0,prodk,n_eigen)
  208.               call ZGEMM('N','N',n_eigen,n_eigen,n_imk,cmplx_1,&
  209.                    prodk,n_eigen,gk_rightk,n_imk,cmplx_0,a_eigen,n_eigen)
  210.               !-----------------------------------------------------------
  211.    
  212.               a_eigen_loc(:,:) = a_eigen_loc(:,:)+a_eigen(:,:)
ftn-6262 ftn: VECTOR GYRO_FIELDEIGEN_KERNEL, File = gyro_fieldeigen_kernel.f90, Line = 212 
  A loop starting at line 212 was not vectorized because it contains a call to a subroutine or function on line 212.

  213.    
  214.            else
  215.    
  216.               ! Diagonal-in-k (no collisions)
  217.    
  218.               do k=1,n_lambda
  219.    
  220.                  !-----------------------------------------------------------
  221.                  ! Finalize definition of propagator
  222.                  !
  223.                  propinv(:,:) = vdotgrad(:,:,k,ie2,is)
ftn-6262 ftn: VECTOR GYRO_FIELDEIGEN_KERNEL, File = gyro_fieldeigen_kernel.f90, Line = 223 
  A loop starting at line 223 was not vectorized because it contains a call to a subroutine or function on line 223.

  224.    
  225.                  do im=1,n_im
  226.                     propinv(im,im) = propinv(im,im)-i_c*omega_eigen
  227.                  enddo
  228.                  !-----------------------------------------------------------
  229.    
  230.                  !-----------------------------------------------------------
  231.                  ! Invert the propagator: final result is "propinv"
  232.                  !
  233.                  call ZGETRF(n_im,n_im,propinv,n_im,i_piv_im,info_im)
  234.                  call ZGETRI(n_im,propinv,n_im,i_piv_im,work_im,n_im,info_im)
  235.                  !-----------------------------------------------------------
  236.    
  237.                  gk_right(:,:) = 0.0
ftn-6263 ftn: VECTOR GYRO_FIELDEIGEN_KERNEL, File = gyro_fieldeigen_kernel.f90, Line = 237 
  A loop starting at line 237 was not vectorized because it contains a reference to a non-vector intrinsic on line 237.

  238.                  do ixp = 1,n_field
  239.                     do ip=1,n_x
  240.                        do jp=1,n_blend
  241.                           ijp = ip + (jp-1)*n_x + (ixp-1)*n_x*n_blend
  242.                           do mp=1,n_stack
  243.                              mkp = mp + (k-1)*n_stack
  244.                              do idiff_ipp=-m_gyro,m_gyro-i_gyro
  245.    
  246.                                 ipp  = i_cyc(ip+idiff_ipp)
  247.                                 impr = ipp + n_x*(mp-1)
  248.    
  249.                                 gk_right(impr,ijp) = gk_right(impr,ijp) &
  250.                                      +(-i_c*omega_eigen*z(is)*alpha_s(is,ipp) &
  251.                                      + v_omegastar(ipp,mkp)) &
  252.                                      * conjg(fg(jp,idiff_ipp,ip,mkp,ixp))
  253.    
  254.                              enddo
  255.                           enddo
  256.                        enddo
  257.                     enddo
  258.                  enddo ! ixp
  259.    
  260.                  gk_left(:,:) = 0.0
ftn-6263 ftn: VECTOR GYRO_FIELDEIGEN_KERNEL, File = gyro_fieldeigen_kernel.f90, Line = 260 
  A loop starting at line 260 was not vectorized because it contains a reference to a non-vector intrinsic on line 260.

  261.                  do ix=1,n_field
  262.                     do i=1,n_x
  263.                        do j=1,n_blend
  264.                           ij = i + (j-1)*n_x + (ix-1)*n_x*n_blend
  265.                           do m=1,n_stack
  266.                              mk = m + (k-1)*n_stack
  267.                              do idiff_ippp=-m_gyro,m_gyro-i_gyro
  268.    
  269.                                 ippp = i_cyc(i+idiff_ippp)
  270.                                 im  = ippp + n_x*(m-1)
  271.    
  272.                                 gk_left(ij,im) = gk_left(ij,im) &
  273.                                      +z(is)*w_p(ie,i,k)  &
  274.                                      *fg(j,idiff_ippp,i,mk,ix) 
  275.    
  276.                              enddo
  277.                           enddo
  278.                        enddo
  279.                     enddo
  280.                  enddo ! ix
  281.    
  282.                  !-----------------------------------------------------------
  283.                  ! Matrix triple-product:  gk_left * propinv * gk_right
  284.                  !
  285.                  call ZGEMM('N','N',n_eigen,n_im,n_im,cmplx_1,&
  286.                       gk_left,n_eigen,propinv,n_im,cmplx_0,prod,n_eigen)
  287.                  call ZGEMM('N','N',n_eigen,n_eigen,n_im,cmplx_1,&
  288.                       prod,n_eigen,gk_right,n_im,cmplx_0,a_eigen,n_eigen)
  289.                  !-----------------------------------------------------------
  290.    
  291.                  a_eigen_loc(:,:) = a_eigen_loc(:,:)+a_eigen(:,:)
ftn-6262 ftn: VECTOR GYRO_FIELDEIGEN_KERNEL, File = gyro_fieldeigen_kernel.f90, Line = 291 
  A loop starting at line 291 was not vectorized because it contains a call to a subroutine or function on line 291.

  292.    
  293.               enddo ! k
  294.    
  295.            endif ! collision_flag test
  296.    
  297.         enddo  ! ie2
  298.    
  299.      enddo ! is
  300.    
  301.      ! Final velocity-space sum on subgroup
  302.      !
  303.      call MPI_ALLREDUCE(a_eigen_loc(:,:),&
  304.           a_eigen(:,:),&
  305.           size(a_eigen),&
  306.           MPI_DOUBLE_COMPLEX,&
  307.           MPI_SUM,&
  308.           NEW_COMM_1,&
  309.           i_err)
  310.    
  311.      ! Sign flip
  312.      a_eigen = -a_eigen
ftn-6332 ftn: VECTOR GYRO_FIELDEIGEN_KERNEL, File = gyro_fieldeigen_kernel.f90, Line = 312 
  A loop starting at line 312 was not vectorized because it does not map well onto the target architecture.

  313.    
  314.      do i=1,n_x
  315.         do j=1,n_blend
  316.            do jp=1,n_blend
  317.    
  318.               ! h-independent part of field equations
  319.    
  320.               ! Poisson eqn
  321.               ix = 1
  322.               ixp = 1
  323.               do i_diff=-m_gyro,m_gyro-i_gyro
  324.                  ip = i_cyc(i+i_diff)
  325.    
  326.                  ijp = ip + (jp-1)*n_x + (ixp-1)*n_x*n_blend 
  327.                  ij  = i + (j-1)*n_x + (ix-1)*n_x*n_blend 
  328.    
  329.                  a_eigen(ij,ijp) = a_eigen(ij,ijp) + ap_mm(i,i_diff,j,jp)
  330.    
  331.               enddo
  332.    
  333.               ! Ampere eqn
  334.               if (n_field > 1) then
  335.                  ix = 2
  336.                  ixp = 2
  337.                  do i_diff=-mg_dx,mg_dx-ig_dx
  338.                     ip = i_cyc(i+i_diff)
  339.    
  340.                     ij  = i + (j-1)*n_x + (ix-1)*n_x*n_blend 
  341.                     ijp = ip + (jp-1)*n_x + (ixp-1)*n_x*n_blend 
  342.    
  343.                     a_eigen(ij,ijp) = a_eigen(ij,ijp) - aa_mm(i,i_diff,j,jp)
  344.    
  345.                  enddo
  346.               endif
  347.    
  348.               ! Ampere Perp eqn
  349.               if (n_field > 2) then
  350.                  ix = 3
  351.                  ixp = 3
  352.                  do i_diff=-m_gyro,m_gyro-i_gyro
  353.                     ip = i_cyc(i+i_diff)
  354.    
  355.                     ij  = i + (j-1)*n_x + (ix-1)*n_x*n_blend 
  356.                     ijp = ip + (jp-1)*n_x + (ixp-1)*n_x*n_blend 
  357.    
  358.                     a_eigen(ij,ijp) = a_eigen(ij,ijp) - 2.0*ab_mm(i,i_diff,j,jp)
  359.    
  360.                  enddo
  361.               endif
  362.    
  363.            enddo
  364.         enddo
  365.      enddo
  366.    
  367.      !-------------------------------------------------------------
  368.      ! Determinant calculation
  369.      !
  370.      ! (1) LAPACK factorization
  371.      !
  372.      a_eigen_loc = a_eigen
ftn-6332 ftn: VECTOR GYRO_FIELDEIGEN_KERNEL, File = gyro_fieldeigen_kernel.f90, Line = 372 
  A loop starting at line 372 was not vectorized because it does not map well onto the target architecture.

  373.      call ZGETRF(n_eigen,n_eigen,a_eigen,n_eigen,i_piv_eigen,info_eigen)
  374.    
  375.      !
  376.      ! (2) Compute the determinant by diagonal product 
  377.      !
  378.      !          det(a_eigen) = det(L) * det(U) * det(P) 
  379.      !
  380.      ! where det(L) = 1 (L has 1's on its diagonal)
  381.      !       det(U) = product of elements on diagonal of LU factorized matrix
  382.      !       det(P) = {+1 if #row permutations even, 
  383.      !                 -1 if #row permutations odd}
  384.    
  385.      ! Diagonal scaling to normalize inital Det to unity.
  386.      if (diag_scale(1) < 0.0) then
  387.         do i=1,n_eigen
  388.            diag_scale(i) = abs(a_eigen(i,i))
  389.         enddo
  390.      endif
  391.    
  392.      det = (1.0,0.0)
  393.      do i=1,n_eigen
  394.         if (i_piv_eigen(i) /= i) then
  395.            sgn = -1.0
  396.         else
  397.            sgn = 1.0
  398.         endif
  399.         det = det*a_eigen(i,i)/diag_scale(i)*sgn
  400.      enddo
  401.    
  402.    end subroutine gyro_fieldeigen_kernel


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                     C o m m o n   B l o c k   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIFCMB5/                            Length: 4 bytes

     GYRO_FIELDEIGEN_KERNEL           Block is used from MPI_CONSTANTS

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIFCMB9/                            Length: 4 bytes

     GYRO_FIELDEIGEN_KERNEL           Block is used from MPI_CONSTANTS

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIPRIV1/                            Length: 28 bytes

     GYRO_FIELDEIGEN_KERNEL           Block is used from MPI_CONSTANTS

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIPRIV2/                            Length: 24 bytes

     GYRO_FIELDEIGEN_KERNEL           Block is used from MPI_CONSTANTS

Blk  Program Unit                     Messages
---  ------------                     --------
/MPIPRIVC/                            Length: 2 bytes

     GYRO_FIELDEIGEN_KERNEL           Block is used from MPI_CONSTANTS


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                         E x t e r n a l   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name  Messages
----  --------
ABS(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_FIELDEIGEN_KERNEL (Line 388, file gyro_fieldeigen_kernel.f90)

Name  Messages
----  --------
CHAR(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
COMMEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
COMMNEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
CONJG(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_FIELDEIGEN_KERNEL (Line 63, file gyro_fieldeigen_kernel.f90)
                   GYRO_FIELDEIGEN_KERNEL (Line 68, file gyro_fieldeigen_kernel.f90)
                   GYRO_FIELDEIGEN_KERNEL (Line 75, file gyro_fieldeigen_kernel.f90)
                   GYRO_FIELDEIGEN_KERNEL (Line 169, file gyro_fieldeigen_kernel.f90)
                   GYRO_FIELDEIGEN_KERNEL (Line 252, file gyro_fieldeigen_kernel.f90)

Name  Messages
----  --------
DATATYPEEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
DATATYPENEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
ERRHANDLEREQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
ERRHANDLERNEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
FILEEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
FILENEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
GROUPEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
GROUPNEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
GYRO_FIELDEIGEN_KERNEL
      Defined as:  Subroutine (line 9, file gyro_fieldeigen_kernel.f90)

      Interface:   None

      Calls:       CONJG(Intrinsic) (Line 63, file gyro_fieldeigen_kernel.f90)
                   CONJG(Intrinsic) (Line 68, file gyro_fieldeigen_kernel.f90)
                   CONJG(Intrinsic) (Line 75, file gyro_fieldeigen_kernel.f90)
                   CONJG(Intrinsic) (Line 169, file gyro_fieldeigen_kernel.f90)
                   CONJG(Intrinsic) (Line 252, file gyro_fieldeigen_kernel.f90)
                   ZGETRF (Line 373, file gyro_fieldeigen_kernel.f90)
                   ABS(Intrinsic) (Line 388, file gyro_fieldeigen_kernel.f90)

        Uses:      MPI
                   MPI_BASE  (indirectly)
                   MPI_SIZEOFS  (indirectly)
                   MPI_CONSTANTS  (indirectly)
                   GYRO_GLOBALS
                   GYRO_POINTERS
                   MATH_CONSTANTS
                   GYRO_FIELDEIGEN_PRIVATE

Name  Messages
----  --------
GYRO_FIELDEIGEN_PRIVATE
      Defined as:  No definitions.

      Used By:     GYRO_FIELDEIGEN_KERNEL

Name  Messages
----  --------
GYRO_GLOBALS
      Defined as:  No definitions.

      Used By:     GYRO_FIELDEIGEN_KERNEL

Name  Messages
----  --------
GYRO_POINTERS
      Defined as:  No definitions.

      Used By:     GYRO_FIELDEIGEN_KERNEL

Name  Messages
----  --------
INFOEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
INFONEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MATH_CONSTANTS
      Defined as:  No definitions.

      Used By:     GYRO_FIELDEIGEN_KERNEL

Name  Messages
----  --------
MESSAGEEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MESSAGENEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI
      Defined as:  No definitions.

      Used By:     GYRO_FIELDEIGEN_KERNEL

Name  Messages
----  --------
MPI_ALLREDUCE
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_BASE
      Defined as:  No definitions.

      Used By:     GYRO_FIELDEIGEN_KERNEL  (indirectly)

Name  Messages
----  --------
MPI_CONSTANTS
      Defined as:  No definitions.

      Used By:     GYRO_FIELDEIGEN_KERNEL  (indirectly)

Name  Messages
----  --------
MPI_SIZEOFS
      Defined as:  No definitions.

      Used By:     GYRO_FIELDEIGEN_KERNEL  (indirectly)

Name  Messages
----  --------
MPI_SIZEOF_CH in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_CHV in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_CX in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_CXV in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_D in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_DV in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_I in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_I1 in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_I1V in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_I2 in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_I2V in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_I8 in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_I8V in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_IV in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_L in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_LV in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_R in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
MPI_SIZEOF_RV in MPI_SIZEOFS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
OPEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
OPNEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
REQUESTEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
REQUESTNEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
SIZE(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
WINEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
WINNEQ in MPI_CONSTANTS
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
ZGEMM
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
ZGETRF
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_FIELDEIGEN_KERNEL (Line 373, file gyro_fieldeigen_kernel.f90)

Name  Messages
----  --------
ZGETRI
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
