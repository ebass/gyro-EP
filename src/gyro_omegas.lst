%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /global/u2/b/bassem/gyro-EP/src/gyro_omegas.f90
Compiled : 01/19/21  15:35:47
Compiler : Version 9.1.0
Ftnlx    : Version 9.1.0 
Target   : x86-64
Command  : ftn_driver.exe -hcpu=haswell -hdynamic -D__CRAYXC -D__CRAY_HASWELL
           -D__CRAYXT_COMPUTE_LINUX_TARGET -hnetwork=aries -hnoomp -em
           -J/global/homes/b/bassem/gyro-EP/modules -sreal64 -eD -Ktrap=fp -m1
           -Rbcdps -G0 -I/opt/cray/pe/fftw/3.3.8.4/haswell/include
           -c gyro_omegas.f90
           -I/opt/cray/pe/cce/9.1.0/cce-clang/x86_64/lib/clang/9.0.0/include
           -I/opt/cray/pe/cce/9.1.0/cce/x86_64/include/craylibs -I/usr/include
           -I/usr/include -I/opt/cray/pe/fftw/3.3.8.4/haswell/include
           -I/opt/cray/pe/libsci/19.06.1/CRAY/9.0/x86_64/include
           -I/opt/cray/pe/mpt/7.7.10/gni/mpich-cray/9.0/include
           -I/opt/cray/pe/hdf5/1.10.5.2/cray/9.0/include
           -I/opt/cray/pe/netcdf/4.6.3.2/cray/9.0/include
           -I/opt/cray/rca/2.2.20-7.0.1.1_4.53__g8e3fb5b.ari/include
           -I/opt/cray/alps/6.6.58-7.0.1.1_6.10__g437d88db.ari/include
           -I/opt/cray/xpmem/2.2.20-7.0.1.1_4.14__g0475745.ari/include
           -I/opt/cray/gni-headers/5.0.12.0-7.0.1.1_6.32__g3b1768f.ari/include
           -I/opt/cray/dmapp/7.1.1-7.0.1.1_4.54__g38cf134.ari/include
           -I/opt/cray/pe/pmi/5.0.14/include
           -I/opt/cray/ugni/6.0.14.0-7.0.1.1_7.40__ge78e5b0.ari/include
           -I/opt/cray/udreg/2.3.2-7.0.1.1_3.38__g8175d3d.ari/include
           -I/opt/cray/wlm_detect/1.3.3-7.0.1.1_4.16__g7109084.ari/include
           -I/opt/cray/krca/2.2.6-7.0.1.1_5.39__gb641b12.ari/include
           -I/opt/cray-hss-devel/9.0.0/include
Program
  Units  : GYRO_OMEGAS

ftnlx report
------------
Source   : /global/u2/b/bassem/gyro-EP/src/gyro_omegas.f90
Date     : 01/19/2021  15:35:47


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    1.    !---------------------------------------------------------
    2.    ! gyro_omegas.f90
    3.    !
    4.    ! PURPOSE:
    5.    !  Compute normalized drift coefficients, velocities, 
    6.    !  etc., of the gyrokinetic equation.  
    7.    !---------------------------------------------------------
    8.    
    9.    subroutine gyro_omegas
   10.    
   11.      use gyro_globals
   12.      use gyro_pointers
   13.      use math_constants
   14.    
   15.      !-------------------------------------
   16.      implicit none
   17.      !
   18.      integer :: p
   19.      !
   20.      real :: temp
   21.      real :: e_temp
   22.      real :: e_temp_mach
   23.      real :: e_temp_p
   24.      !
   25.      real, dimension(n_kinetic) :: dkill
   26.      !-------------------------------------
   27.    
   28.      do is=1,n_kinetic
   29.    
   30.         if (kill_i_drift_flag == 1 .and. is /= indx_e) then
   31.            dkill(is) = 0.0
   32.         else
   33.            dkill(is) = 1.0
   34.         endif
   35.    
   36.         if (kill_e_drift_flag == 1 .and. is == indx_e) then
   37.            dkill(is) = 0.0
   38.         else
   39.            dkill(is) = 1.0
   40.         endif
   41.    
   42.      enddo ! is
   43.    
   44.      ! v_theta: note that 1/g_theta factor inside omega(i,k)
   45.    
   46.      do i=1,n_x
   47.         do ie=1,n_energy
   48.            do k=1,n_lambda    
   49.               do is=1,n_kinetic
   50.                  v_theta(i,ie,k,is) = & 
   51.                       omega(i,k)*sqrt(2.0*energy(ie))/(q_s(i)*rmaj_s(i))
   52.               enddo ! is
   53.            enddo ! k
   54.         enddo ! ie
   55.      enddo ! i
   56.    
   57.      omega_d1 = 0.0
ftn-6209 ftn: VECTOR GYRO_OMEGAS, File = gyro_omegas.f90, Line = 57 
  A loop starting at line 57 was partially vectorized.

   58.      omega_dr = 0.0
ftn-6209 ftn: VECTOR GYRO_OMEGAS, File = gyro_omegas.f90, Line = 58 
  A loop starting at line 58 was partially vectorized.

   59.    
   60.      p_nek_loc = 0
   61.    
   62.      do p_nek=1+i_proc_1,n_nek_1,n_proc_1
   63.    
   64.         p_nek_loc = p_nek_loc+1
   65.    
   66.         ie = nek_e(p_nek)  
   67.         k  = nek_k(p_nek)   
   68.    
   69.         ck = class(k)
   70.    
   71.         do i=1,n_x
   72.    
   73.            do m=1,n_stack
   74.    
   75.               m0 = m_phys(ck,m)
   76.               p  = p_phys(ck,m) 
   77.    
   78.               !-----------------------------------------------------
   79.               ! STANDARD CURVATURE/GRAD-B DRIFTS
   80.               !-----------------------------------------------------
   81.    
   82.               do is=1,n_kinetic
   83.    
   84.                  e_temp = (1.0/z(is))*(2.0*tem_s(is,i)/rmaj_s(i))*&
   85.                       energy(ie)*(1.0-0.5*lambda(i,k)*b0_t(i,k,m0))/b0_t(i,k,m0)
   86.    
   87.                  e_temp_p = e_temp*(1.0-lambda(i,k)*b0_t(i,k,m0))/ &
   88.                       (1.0-0.5*lambda(i,k)*b0_t(i,k,m0))
   89.    
   90.                  ! krho_i = n*q_s(r)/r_s(i)*rhos_norm/b_unit_s(i)
   91.    
   92.                  omega_d1(m,i,p_nek_loc,is) = krho_i(in_1,i)*qrat_t(i,k,m0)* &
   93.                       ( e_temp*(cos_t(i,k,m0)+captheta_t(i,k,m0)*sin_t(i,k,m0)) + &
   94.                       e_temp_p*cos_p_t(i,k,m0) )*dkill(is)
   95.    
   96.                  ! omega_dr with nonuniform grid effect:
   97.    
   98.                  omega_dr(m,i,p_nek_loc,is) = rhos_norm/b_unit_s(i)*  &
   99.                       grad_r_t(i,k,m0)*e_temp*sin_t(i,k,m0)*dr_eodr(i)*dkill(is)
  100.    
  101.               enddo ! is
  102.    
  103.            enddo ! m0
  104.    
  105.            do m=1,n_stack
  106.    
  107.               m0 = m_phys(ck,m)
  108.               p  = p_phys(ck,m)
  109.    
  110.               temp = sigma(ck,p)* &
  111.                    sqrt(abs(energy(ie)*(1.0-lambda(i,k)*b0_t(i,k,m))))
  112.    
  113.               !-------------------------------------------------
  114.               ! Parallel and perp. velocity for each species:
  115.               !
  116.               do is=1,n_kinetic
  117.                  v_para(m,i,p_nek_loc,is) = &
  118.                       mu(is)*sqrt(2.0*tem_s(is,i))*temp
  119.                  v_perp(m,i,p_nek_loc,is) = &
  120.                       mu(is)*sqrt(2.0*tem_s(is,i)*&
  121.                       energy(ie)*lambda(i,k)*b0_t(i,k,m))
  122.               enddo
  123.               !-------------------------------------------------
  124.    
  125.               !-------------------------------------------------------- 
  126.               ! Standard part of omega_star
  127.               !
  128.               do is=1,n_kinetic
  129.                  omega_star(m,i,p_nek_loc,is) = krho_i(in_1,i)*&
  130.                       (dlnndr_s(is,i)+(energy(ie)-1.5)*dlntdr_s(is,i))*&
  131.                       den_s(is,i)
  132.               enddo
  133.               !--------------------------------------------------------
  134.    
  135.               !-----------------------------------------------------
  136.               ! ROTATION SHEAR (KELVIN-HELMHOLTZ) DRIVE 
  137.               !-----------------------------------------------------
  138.    
  139.               ! m_a  v_para_a      1     R Bt   a gamma_p
  140.               ! --- ----------  ------- ------ -----------
  141.               ! m_i  c_s_hat    T_a_hat  R0 B    c_s_hat
  142.    
  143.               do is=1,n_kinetic
  144.    
  145.                  omega_star(m,i,p_nek_loc,is) = omega_star(m,i,p_nek_loc,is)+&
  146.                       krho_i(in_1,i)*gamma_p_s(i)*bigr_t(i,k,m0)/rmaj_s(i)*&
  147.                       bt_t(i,k,m0)/b0_t(i,k,m0)*v_para(m,i,p_nek_loc,is)/ &
  148.                       (tem_s(is,i)*mu(is)**2)*&
  149.                       den_s(is,i)
  150.    
  151.               enddo ! is
  152.    
  153.    
  154.               !-----------------------------------------------------
  155.               ! CORIOLIS DRIFT 
  156.               !-----------------------------------------------------
  157.    
  158.               ! m_a  v_para_a                       2
  159.               ! --- ---------- M sqrt(Te_hat) -----------------  
  160.               ! m_i  c_s_hat                   z_a B_hat R0_hat
  161.    
  162.               do is=1,n_kinetic
  163.    
  164.                  e_temp_mach = 2.0/(z(is)*mu(is)**2*rmaj_s(i))*&
  165.                       v_para(m,i,p_nek_loc,is)*mach_s(i)*&
  166.                       sqrt(tem_s(indx_e,i))/b0_t(i,k,m0)
  167.    
  168.                  omega_d1(m,i,p_nek_loc,is) = omega_d1(m,i,p_nek_loc,is)+ &
  169.                       krho_i(in_1,i)*qrat_t(i,k,m0)*e_temp_mach* &
  170.                       (ucos_t(i,k,m0)+captheta_t(i,k,m0)*usin_t(i,k,m0))*dkill(is)
  171.    
  172.                  omega_dr(m,i,p_nek_loc,is) = omega_dr(m,i,p_nek_loc,is) + &
  173.                       rhos_norm/b_unit_s(i)*grad_r_t(i,k,m0)*&
  174.                       e_temp_mach*usin_t(i,k,m0)*dr_eodr(i)*dkill(is)
  175.    
  176.               enddo ! is
  177.    
  178.            enddo ! m
  179.    
  180.         enddo ! i
  181.    
  182.      enddo ! p_nek_loc
  183.    
  184.    
  185.      if (debug_flag == 1 .and. i_proc == 0) then
  186.         print *,'[gyro_omegas done]'
  187.      endif
  188.    
  189.    end subroutine gyro_omegas


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                         E x t e r n a l   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name  Messages
----  --------
ABS(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_OMEGAS (Line 111, file gyro_omegas.f90)

Name  Messages
----  --------
CHAR(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
GYRO_GLOBALS
      Defined as:  No definitions.

      Used By:     GYRO_OMEGAS

Name  Messages
----  --------
GYRO_OMEGAS
      Defined as:  Subroutine (line 9, file gyro_omegas.f90)

      Interface:   None

      Calls:       SQRT(Intrinsic) (Line 51, file gyro_omegas.f90)
                   SQRT(Intrinsic) (Line 111, file gyro_omegas.f90)
                   SQRT(Intrinsic) (Line 118, file gyro_omegas.f90)
                   SQRT(Intrinsic) (Line 120, file gyro_omegas.f90)
                   SQRT(Intrinsic) (Line 166, file gyro_omegas.f90)
                   ABS(Intrinsic) (Line 111, file gyro_omegas.f90)

        Uses:      GYRO_GLOBALS
                   GYRO_POINTERS
                   MATH_CONSTANTS

Name  Messages
----  --------
GYRO_POINTERS
      Defined as:  No definitions.

      Used By:     GYRO_OMEGAS

Name  Messages
----  --------
MATH_CONSTANTS
      Defined as:  No definitions.

      Used By:     GYRO_OMEGAS

Name  Messages
----  --------
SQRT(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_OMEGAS (Line 51, file gyro_omegas.f90)
                   GYRO_OMEGAS (Line 111, file gyro_omegas.f90)
                   GYRO_OMEGAS (Line 118, file gyro_omegas.f90)
                   GYRO_OMEGAS (Line 120, file gyro_omegas.f90)
                   GYRO_OMEGAS (Line 166, file gyro_omegas.f90)


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
