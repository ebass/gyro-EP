%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /global/u2/b/bassem/gyro-EP/src/gyro_ballooning_mode.f90
Compiled : 01/19/21  15:35:28
Compiler : Version 9.1.0
Ftnlx    : Version 9.1.0 
Target   : x86-64
Command  : ftn_driver.exe -hcpu=haswell -hdynamic -D__CRAYXC -D__CRAY_HASWELL
           -D__CRAYXT_COMPUTE_LINUX_TARGET -hnetwork=aries -hnoomp -em
           -J/global/homes/b/bassem/gyro-EP/modules -sreal64 -eD -Ktrap=fp -m1
           -Rbcdps -G0 -I/opt/cray/pe/fftw/3.3.8.4/haswell/include
           -c gyro_ballooning_mode.f90
           -I/opt/cray/pe/cce/9.1.0/cce-clang/x86_64/lib/clang/9.0.0/include
           -I/opt/cray/pe/cce/9.1.0/cce/x86_64/include/craylibs -I/usr/include
           -I/usr/include -I/opt/cray/pe/fftw/3.3.8.4/haswell/include
           -I/opt/cray/pe/libsci/19.06.1/CRAY/9.0/x86_64/include
           -I/opt/cray/pe/mpt/7.7.10/gni/mpich-cray/9.0/include
           -I/opt/cray/pe/hdf5/1.10.5.2/cray/9.0/include
           -I/opt/cray/pe/netcdf/4.6.3.2/cray/9.0/include
           -I/opt/cray/rca/2.2.20-7.0.1.1_4.53__g8e3fb5b.ari/include
           -I/opt/cray/alps/6.6.58-7.0.1.1_6.10__g437d88db.ari/include
           -I/opt/cray/xpmem/2.2.20-7.0.1.1_4.14__g0475745.ari/include
           -I/opt/cray/gni-headers/5.0.12.0-7.0.1.1_6.32__g3b1768f.ari/include
           -I/opt/cray/dmapp/7.1.1-7.0.1.1_4.54__g38cf134.ari/include
           -I/opt/cray/pe/pmi/5.0.14/include
           -I/opt/cray/ugni/6.0.14.0-7.0.1.1_7.40__ge78e5b0.ari/include
           -I/opt/cray/udreg/2.3.2-7.0.1.1_3.38__g8175d3d.ari/include
           -I/opt/cray/wlm_detect/1.3.3-7.0.1.1_4.16__g7109084.ari/include
           -I/opt/cray/krca/2.2.6-7.0.1.1_5.39__gb641b12.ari/include
           -I/opt/cray-hss-devel/9.0.0/include
Program
  Units  : GYRO_BALLOONING_MODE

ftnlx report
------------
Source   : /global/u2/b/bassem/gyro-EP/src/gyro_ballooning_mode.f90
Date     : 01/19/2021  15:35:28


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    1.    !------------------------------------------------------
    2.    ! gyro_ballooning_mode.f90 [caller gyro_write_master]
    3.    !
    4.    ! PURPOSE:
    5.    !  This routine decomposes real-space functions f(i,j) 
    6.    !  into ballooning mode p-harmonics, f_bar(p,j), patches 
    7.    !  together the full ballooning mode f_*(theta_*) from 
    8.    !  these p-harmonics, and then writes to disk.
    9.    !------------------------------------------------------
   10.    
   11.    subroutine gyro_ballooning_mode(datafile,io,index,is_in)
   12.    
   13.      use gyro_globals
   14.      use math_constants
   15.    
   16.      !--------------------------------------------------
   17.      implicit none
   18.      !
   19.      character (len=*), intent(in) :: datafile
   20.      !
   21.      integer, intent(in) :: io
   22.      integer, intent(in) :: index
   23.      integer, intent(in) :: is_in
   24.      !
   25.      integer :: p
   26.      integer :: pp
   27.      integer :: l0
   28.      integer :: np
   29.      integer :: j_renorm(1)
   30.      integer :: data_loop
   31.      integer :: ampCount
   32.      !
   33.      complex, dimension(-n_x/2:n_x/2-1,n_theta_plot) :: f_bar
   34.      complex, dimension(n_theta_plot,n_x) :: fplot
   35.      complex, allocatable                 :: amp(:)
   36.      complex :: dummy
   37.      !--------------------------------------------------
   38.    
   39.      !------------------------------------------------------
   40.      ! Need to define these parameters before case selection
   41.      !
   42.      m0 = int(box_multiplier)
   43.      np = n_x/m0
   44.      !------------------------------------------------------
   45.    
   46.      !----------------------------------------------------
   47.      ! Look for acceptable in_1-value only on processor 0:
   48.      ! 
   49.      if (i_proc > 0) then
   50.    
   51.         return
   52.    
   53.      else
   54.    
   55.         if (n_1(in_1) == 0) return
   56.    
   57.      endif
   58.      !
   59.      !----------------------------------------------------
   60.    
   61.      select case (io_control)
   62.    
   63.      case(0)
   64.    
   65.         return
   66.    
   67.      case(1)
   68.    
   69.         ! Open
   70.    
   71.         open(unit=io,file=datafile,status='replace')
   72.         close(io)
   73.    
   74.      case(2)
   75.    
   76.         ! Append
   77.    
   78.         open(unit=io,file=datafile,status='old',position='append')
   79.    
   80.         !----------------------------------------------------
   81.         ! Select function to map to ballooning space:
   82.         !
   83.         select case (index)
   84.    
   85.         case (1) 
   86.            fplot(:,:) = phi_plot(:,:,1)
ftn-6262 ftn: VECTOR GYRO_BALLOONING_MODE, File = gyro_ballooning_mode.f90, Line = 86 
  A loop starting at line 86 was not vectorized because it contains a call to a subroutine or function on line 86.

   87.         case (2) 
   88.            fplot(:,:) = phi_plot(:,:,2)
ftn-6262 ftn: VECTOR GYRO_BALLOONING_MODE, File = gyro_ballooning_mode.f90, Line = 88 
  A loop starting at line 88 was not vectorized because it contains a call to a subroutine or function on line 88.

   89.         case (3)
   90.            fplot(:,:) = phi_plot(:,:,3)
ftn-6262 ftn: VECTOR GYRO_BALLOONING_MODE, File = gyro_ballooning_mode.f90, Line = 90 
  A loop starting at line 90 was not vectorized because it contains a call to a subroutine or function on line 90.

   91.         case (4)
   92.            fplot(:,:) = phi_plot(:,:,4)
ftn-6262 ftn: VECTOR GYRO_BALLOONING_MODE, File = gyro_ballooning_mode.f90, Line = 92 
  A loop starting at line 92 was not vectorized because it contains a call to a subroutine or function on line 92.

   93.         case (5) 
   94.            fplot(:,:) = moments_plot(:,:,is_in,1)
ftn-6262 ftn: VECTOR GYRO_BALLOONING_MODE, File = gyro_ballooning_mode.f90, Line = 94 
  A loop starting at line 94 was not vectorized because it contains a call to a subroutine or function on line 94.

   95.         case (6) 
   96.            fplot(:,:) = moments_plot(:,:,is_in,2)
ftn-6262 ftn: VECTOR GYRO_BALLOONING_MODE, File = gyro_ballooning_mode.f90, Line = 96 
  A loop starting at line 96 was not vectorized because it contains a call to a subroutine or function on line 96.

   97.         case (7) 
   98.            fplot(:,:) = moments_plot(:,:,is_in,3)
ftn-6262 ftn: VECTOR GYRO_BALLOONING_MODE, File = gyro_ballooning_mode.f90, Line = 98 
  A loop starting at line 98 was not vectorized because it contains a call to a subroutine or function on line 98.

   99.    
  100.         end select
  101.         !-------------------------------------------------------
  102.    
  103.         !-------------------------------------------------------
  104.         ! Find Fourier transform of radial-grid wave function
  105.         !
  106.         f_bar = (0.0,0.0)
ftn-6332 ftn: VECTOR GYRO_BALLOONING_MODE, File = gyro_ballooning_mode.f90, Line = 106 
  A loop starting at line 106 was not vectorized because it does not map well onto the target architecture.

  107.         !
  108.         if (q_s(ir_norm)*shat_s(ir_norm)*n_1(1) > 0.0) then
  109.            ! n*q*s > 0
  110.            do i=1,n_x 
  111.               do ip=1,n_x  
  112.                  f_bar(i-1-n_x/2,:) = f_bar(i-1-n_x/2,:)+fplot(:,ip)*cri(i,ip)
ftn-6263 ftn: VECTOR GYRO_BALLOONING_MODE, File = gyro_ballooning_mode.f90, Line = 112 
  A loop starting at line 112 was not vectorized because it contains a reference to a non-vector intrinsic on line 112.

  113.               enddo
  114.            enddo
  115.         else
  116.            ! n*q*s < 0
  117.            do i=1,n_x 
  118.               do ip=1,n_x  
  119.                  f_bar(i-1-n_x/2,:) = f_bar(i-1-n_x/2,:)+fplot(:,ip)*conjg(cri(i,ip))
ftn-6263 ftn: VECTOR GYRO_BALLOONING_MODE, File = gyro_ballooning_mode.f90, Line = 119 
  A loop starting at line 119 was not vectorized because it contains a reference to a non-vector intrinsic on line 119.

  120.               enddo
  121.            enddo
  122.         endif
  123.         !-------------------------------------------------------
  124.    
  125.         !-------------------------------------------------------
  126.         ! Renormalize function:
  127.         !
  128.         !j_renorm = maxloc(abs(phi_plot(:,ir_norm,1)))
  129.         !balloon_renorm = 1.0/phi_plot(j_renorm(1),ir_norm,1)
  130.         if (index == 1) then
  131.            j_renorm = maxloc(abs(f_bar(0,:)))
ftn-6263 ftn: VECTOR GYRO_BALLOONING_MODE, File = gyro_ballooning_mode.f90, Line = 131 
  A loop starting at line 131 was not vectorized because it contains a reference to a non-vector intrinsic on line 131.

  132.            balloon_renorm = 1.0/f_bar(0,j_renorm(1))
  133.         endif
  134.         f_bar(:,:) = balloon_renorm*f_bar(:,:)
ftn-6263 ftn: VECTOR GYRO_BALLOONING_MODE, File = gyro_ballooning_mode.f90, Line = 134 
  A loop starting at line 134 was not vectorized because it contains a reference to a non-vector intrinsic on line 134.

  135.         !-------------------------------------------------------
  136.    
  137.         !-------------------------------------------------------
  138.         ! Sew together mode in extended angle and write to file.
  139.         ! 
  140.         allocate(amp(m0*np*n_theta_plot))
  141.         ampCount = 1
  142.         do l0=0,m0-1
  143.            do pp=-np/2,np/2-1
  144.               p = m0*pp+l0
  145.               do j_int=1,n_theta_plot
  146.    
  147.                  ! Data output is ordered properly in extended angle:
  148.                  !
  149.                  !   theta_extended = theta_plot(j_int)+2*pi*pp
  150.    
  151.                  amp(ampCount) = f_bar(p,j_int)*phase(in_1,ir_norm)**(real(p)/real(m0))
  152.                  write(io,fmtstr2) amp(ampCount)
  153.                  ampCount=ampCount+1
  154.               enddo
  155.            enddo
  156.         enddo
  157.         deallocate(amp)
  158.    
  159.         !-------------------------------------------------------
  160.    
  161.      case(3)
  162.    
  163.         ! Rewind
  164.    
  165.         open(unit=io,file=datafile,status='old')
  166.    
  167.         ! Mimic "reconstruct psi_star" loop
  168.    
  169.         do data_loop=0,data_step
  170.            do l0=0,m0-1
  171.               do pp=-np/2,np/2-1
  172.                  do j_int=1,n_theta_plot
  173.                     read(io,fmtstr2) dummy 
  174.                  enddo
  175.               enddo
  176.            enddo
  177.         enddo
  178.    
  179.         endfile(io)
  180.         close(io)
  181.    
  182.      end select
  183.    
  184.      if (i_proc == 0 .and. debug_flag == 1) then
  185.         print *,'[gyro_balloning_mode done]' 
  186.      endif
  187.    
  188.    end subroutine gyro_ballooning_mode


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                         E x t e r n a l   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name  Messages
----  --------
ABS(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_BALLOONING_MODE (Line 131, file gyro_ballooning_mode.f90)

Name  Messages
----  --------
CHAR(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
CONJG(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_BALLOONING_MODE (Line 119, file gyro_ballooning_mode.f90)

Name  Messages
----  --------
GYRO_BALLOONING_MODE
      Defined as:  Subroutine (line 11, file gyro_ballooning_mode.f90)

      Interface:   None

      Calls:       INT(Intrinsic) (Line 42, file gyro_ballooning_mode.f90)
                   CONJG(Intrinsic) (Line 119, file gyro_ballooning_mode.f90)
                   ABS(Intrinsic) (Line 131, file gyro_ballooning_mode.f90)
                   MAXLOC(Intrinsic) (Line 131, file gyro_ballooning_mode.f90)
                   REAL(Intrinsic) (Line 151, file gyro_ballooning_mode.f90)
                   REAL(Intrinsic) (Line 151, file gyro_ballooning_mode.f90)

        Uses:      GYRO_GLOBALS
                   MATH_CONSTANTS

Name  Messages
----  --------
GYRO_GLOBALS
      Defined as:  No definitions.

      Used By:     GYRO_BALLOONING_MODE

Name  Messages
----  --------
INT(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_BALLOONING_MODE (Line 42, file gyro_ballooning_mode.f90)

Name  Messages
----  --------
MATH_CONSTANTS
      Defined as:  No definitions.

      Used By:     GYRO_BALLOONING_MODE

Name  Messages
----  --------
MAXLOC(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_BALLOONING_MODE (Line 131, file gyro_ballooning_mode.f90)

Name  Messages
----  --------
REAL(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GYRO_BALLOONING_MODE (Line 151, file gyro_ballooning_mode.f90)
                   GYRO_BALLOONING_MODE (Line 151, file gyro_ballooning_mode.f90)

Name  Messages
----  --------
__MAXLOC_F08(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
