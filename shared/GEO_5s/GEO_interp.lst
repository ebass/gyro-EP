%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /global/u2/b/bassem/gacode_waltz_NBI_edison/shared/GEO/GEO_interp.f90
Compiled : 06/09/16  13:24:32
Compiler : Version 8.4.3
Ftnlx    : Version 8413 (libcif 84006)
Target   : x86-64
Command  : ftn_driver.exe -hcpu=ivybridge -hstatic -D__CRAYXC
           -D__CRAY_IVYBRIDGE -D__CRAYXT_COMPUTE_LINUX_TARGET -hnetwork=aries
           -em -J/global/homes/b/bassem/gacode_waltz_NBI_edison/modules
           -sreal64 -eD -Ktrap=fp -m1 -c
           -I/opt/cray/cce/8.4.3/craylibs/x86-64/include -I/usr/include -ef
           -I/opt/cray/fftw/3.3.4.6/sandybridge/include
           -I/opt/cray/libsci/13.3.0/CRAY/8.3/x86_64/include
           -I/opt/cray/mpt/7.3.1/gni/sma/include
           -I/opt/cray/mpt/7.3.1/gni/mpich-cray/8.3/include
           -I/opt/cray/netcdf/4.3.3.1/CRAY/8.3/include
           -I/opt/cray/hdf5/1.8.16/CRAY/8.3/include
           -I/opt/cray/rca/1.0.0-2.0502.57212.2.56.ari/include
           -I/opt/cray/alps/5.2.3-2.0502.9295.14.14.ari/include
           -I/opt/cray/xpmem/0.1-2.0502.57015.1.15.ari/include
           -I/opt/cray/gni-headers/4.0-1.0502.10317.9.2.ari/include
           -I/opt/cray/dmapp/7.0.1-1.0502.10246.8.47.ari/include
           -I/opt/cray/pmi/5.0.10-1.0000.11050.0.0.ari/include
           -I/opt/cray/ugni/6.0-1.0502.10245.9.9.ari/include
           -I/opt/cray/udreg/2.3.2-1.0502.9889.2.20.ari/include
           -I/opt/cray/cce/8.4.3/craylibs/x86-64/pkgconfig/../include
           -I/opt/cray/cce/8.4.3/craylibs/x86-64/pkgconfig/..//include
           -I/usr/local/include
           -I/opt/cray/wlm_detect/1.0-1.0502.57063.1.1.ari/include
           -I/opt/cray/krca/1.0.0-2.0502.57202.2.45.ari/include
           -I/opt/cray-hss-devel/7.2.0/include GEO_interp.f90
Program
  Units  : GEO_INTERP

ftnlx report
------------
Source   : /global/u2/b/bassem/gacode_waltz_NBI_edison/shared/GEO/GEO_interp.f90
Date     : 06/09/2016  13:24:32


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    1.    subroutine GEO_interp(theta_0)
    2.    
    3.      use GEO_interface
    4.    
    5.      !-------------------------------------
    6.      implicit none
    7.      !
    8.      real, intent(in) :: theta_0
    9.      !
   10.      integer :: n_theta
   11.      integer :: i1
   12.      integer :: i2
   13.      !
   14.      real :: x0
   15.      real :: x1
   16.      real :: dx
   17.      real :: z
   18.      real, parameter :: pi=3.141592653589793
   19.      real, parameter :: tol=1e-6
   20.      !-------------------------------------
   21.    
   22.      if (abs(theta_0) > pi+tol) then
   23.         print *,'ERROR in GEO: theta_0 out of bounds in GEO_interp.'
   24.      endif
   25.    
   26.      !----------------------------------------------------------
   27.      ! If we are only using s-alpha, set functions now and exit
   28.      !
   29.      if (GEO_model_in == -1) then
   30.    
   31.         ! Theta-independent functions
   32.    
   33.         GEO_fluxsurfave_grad_r  = 1.0
   34.         GEO_fluxsurfave_grad_r2 = 1.0
   35.         GEO_grad_r0 = 1.0
   36.    
   37.         GEO_ffprime   = 0.0
   38.         GEO_beta_star = GEO_beta_star_in
   39.         GEO_f         = GEO_rmaj_in
   40.    
   41.         GEO_volume       = 2*pi**2*GEO_rmin_in**2*GEO_rmaj_in
   42.         GEO_volume_prime = 4*pi**2*GEO_rmin_in*GEO_rmaj_in
   43.    
   44.         ! Theta-dependent functions (some are set to zero for now)
   45.    
   46.         GEO_b      = 1.0/(1.0+GEO_rmin_in/GEO_rmaj_in*cos(theta_0))
   47.         GEO_dbdt   = (GEO_rmin_in/GEO_rmaj_in)*sin(theta_0)
   48.         GEO_dbdt2  = 0.0 ! check with NEO usage
   49.         GEO_bp     = GEO_b*GEO_rmin_in/GEO_rmaj_in/GEO_q_in
   50.         GEO_bt     = GEO_b
   51.    
   52.         ! Added extra B here to make proper connection
   53.         ! to s-alpha without having to artificially remove 
   54.         ! the B in the denominator of the drift.
   55.    
   56.         GEO_gsin   = sin(theta_0)*GEO_b 
   57.         GEO_gcos1  = cos(theta_0)*GEO_b
   58.         GEO_gcos2  = 0.0
   59.         GEO_usin   = sin(theta_0)*GEO_b
   60.         GEO_ucos   = cos(theta_0)*GEO_b
   61.    
   62.         GEO_g_theta = 1.0
   63.         GEO_grad_r  = 1.0
   64.         GEO_gq      = 1.0
   65.         GEO_captheta  = GEO_s_in*theta_0-&
   66.              GEO_q_in**2*GEO_rmaj_in*GEO_beta_star_in*sin(theta_0) 
   67.         GEO_nu     = -GEO_q_in*theta_0
   68.         GEO_l_t    = 0.0 ! check with NEO usage
   69.         GEO_nsin   = 0.0 ! check with NEO usage
   70.         GEO_bigr   = GEO_rmaj_in/GEO_b
   71.         GEO_bigr_r = 0.0 ! check with NEO usage
   72.         GEO_bigr_t = 0.0 ! check with NEO usage
   73.         GEO_theta_nc = theta_0
   74.         return
   75.      endif
   76.      !----------------------------------------------------------
   77.    
   78.      !----------------------------------------------------------
   79.      ! General case:
   80.      !
   81.      ! To illustrate what's happening, let assume:
   82.      !  - n_theta = 3 
   83.      !  - theta_0 = pi+eps
   84.      !
   85.      !                *              
   86.      !  x------x------x
   87.      ! -pi     0      pi
   88.    
   89.      n_theta = size(GEOV_theta)
   90.    
   91.      ! n_theta = 3
   92.    
   93.      x0 = theta_0-GEOV_theta(1)
   94.    
   95.      ! x0 = 2*pi in this case
   96.    
   97.      dx = GEOV_theta(2)-GEOV_theta(1)
   98.    
   99.      ! dx = pi
  100.    
  101.      i1 = int(x0/dx)+1
  102.    
  103.      ! i1 = 3
  104.    
  105.      i2 = i1+1
  106.    
  107.      ! i2 = 4 (out of bounds)
  108.    
  109.      x1 = (i1-1)*dx 
  110.    
  111.      ! x1 = 2*pi
  112.    
  113.      z  = (x0-x1)/dx
  114.    
  115.      ! z = 0.0
  116.    
  117.      !---------------------------------------------
  118.      ! Catch the error associated with the special 
  119.      ! case documented above.
  120.      !
  121.      if (i2 > n_theta) then  
  122.         i2 = n_theta
  123.      endif
  124.      !---------------------------------------------
  125.    
  126.      GEO_b        = GEOV_b(i1)+(GEOV_b(i2)-GEOV_b(i1))*z
  127.      GEO_dbdt     = GEOV_dbdt(i1)+(GEOV_dbdt(i2)-GEOV_dbdt(i1))*z
  128.      GEO_dbdt2    = GEOV_dbdt2(i1)+(GEOV_dbdt2(i2)-GEOV_dbdt2(i1))*z
  129.      GEO_bp       = GEOV_bp(i1)+(GEOV_bp(i2)-GEOV_bp(i1))*z
  130.      GEO_bt       = GEOV_bt(i1)+(GEOV_bt(i2)-GEOV_bt(i1))*z
  131.      GEO_gsin     = GEOV_gsin(i1)+(GEOV_gsin(i2)-GEOV_gsin(i1))*z
  132.      GEO_gcos1    = GEOV_gcos1(i1)+(GEOV_gcos1(i2)-GEOV_gcos1(i1))*z
  133.      GEO_gcos2    = GEOV_gcos2(i1)+(GEOV_gcos2(i2)-GEOV_gcos2(i1))*z
  134.      GEO_g_theta  = GEOV_g_theta(i1)+(GEOV_g_theta(i2)-GEOV_g_theta(i1))*z
  135.      GEO_grad_r   = GEOV_grad_r(i1)+(GEOV_grad_r(i2)-GEOV_grad_r(i1))*z
  136.      GEO_gq       = GEOV_gq(i1)+(GEOV_gq(i2)-GEOV_gq(i1))*z
  137.      GEO_captheta = GEOV_captheta(i1)+(GEOV_captheta(i2)-GEOV_captheta(i1))*z
  138.      GEO_nu       = GEOV_nu(i1)+(GEOV_nu(i2)-GEOV_nu(i1))*z
  139.      GEO_bigr     = GEOV_bigr(i1)+(GEOV_bigr(i2)-GEOV_bigr(i1))*z
  140.      GEO_l_t      = GEOV_l_t(i1)+(GEOV_l_t(i2)-GEOV_l_t(i1))*z
  141.      GEO_nsin     = GEOV_nsin(i1)+(GEOV_nsin(i2)-GEOV_nsin(i1))*z
  142.      GEO_usin     = GEOV_usin(i1)+(GEOV_usin(i2)-GEOV_usin(i1))*z
  143.      GEO_ucos     = GEOV_ucos(i1)+(GEOV_ucos(i2)-GEOV_ucos(i1))*z
  144.      GEO_bigr_r   = GEOV_bigr_r(i1)+(GEOV_bigr_r(i2)-GEOV_bigr_r(i1))*z
  145.      GEO_bigr_t   = GEOV_bigr_t(i1)+(GEOV_bigr_t(i2)-GEOV_bigr_t(i1))*z
  146.      GEO_theta_nc = GEOV_theta_nc(i1)+(GEOV_theta_nc(i2)-GEOV_theta_nc(i1))*z
  147.    
  148.    end subroutine GEO_interp


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                         E x t e r n a l   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name  Messages
----  --------
ABS(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GEO_INTERP (Line 22, file GEO_interp.f90)

Name  Messages
----  --------
COS(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GEO_INTERP (Line 46, file GEO_interp.f90)
                   GEO_INTERP (Line 57, file GEO_interp.f90)
                   GEO_INTERP (Line 60, file GEO_interp.f90)

Name  Messages
----  --------
GEO_INTERFACE
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

Name  Messages
----  --------
GEO_INTERP
      Defined as:  Subroutine (line 1, file GEO_interp.f90)

      Interface:   None

      Calls:       ABS(Intrinsic) (Line 22, file GEO_interp.f90)
                   COS(Intrinsic) (Line 46, file GEO_interp.f90)
                   COS(Intrinsic) (Line 57, file GEO_interp.f90)
                   COS(Intrinsic) (Line 60, file GEO_interp.f90)
                   SIN(Intrinsic) (Line 47, file GEO_interp.f90)
                   SIN(Intrinsic) (Line 56, file GEO_interp.f90)
                   SIN(Intrinsic) (Line 59, file GEO_interp.f90)
                   SIN(Intrinsic) (Line 66, file GEO_interp.f90)
                   SIZE(Intrinsic) (Line 89, file GEO_interp.f90)
                   INT(Intrinsic) (Line 101, file GEO_interp.f90)

Name  Messages
----  --------
INT(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GEO_INTERP (Line 101, file GEO_interp.f90)

Name  Messages
----  --------
SIN(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GEO_INTERP (Line 47, file GEO_interp.f90)
                   GEO_INTERP (Line 56, file GEO_interp.f90)
                   GEO_INTERP (Line 59, file GEO_interp.f90)
                   GEO_INTERP (Line 66, file GEO_interp.f90)

Name  Messages
----  --------
SIZE(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   GEO_INTERP (Line 89, file GEO_interp.f90)

Name  Messages
----  --------
__SIZE(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
