%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /global/u2/b/bassem/gyro-EP/shared/EXPRO/EXPRO_write_original.f90
Compiled : 01/14/21  15:27:07
Compiler : Version 9.1.0
Ftnlx    : Version 9.1.0 
Target   : x86-64
Command  : ftn_driver.exe -hcpu=haswell -hdynamic -D__CRAYXC -D__CRAY_HASWELL
           -D__CRAYXT_COMPUTE_LINUX_TARGET -hnetwork=aries -hnoomp -em
           -J/global/homes/b/bassem/gyro-EP/modules -sreal64 -eD -Ktrap=fp -m1
           -c EXPRO_write_original.f90
           -I/opt/cray/pe/cce/9.1.0/cce-clang/x86_64/lib/clang/9.0.0/include
           -I/opt/cray/pe/cce/9.1.0/cce/x86_64/include/craylibs -I/usr/include
           -I/usr/include -I/opt/cray/pe/fftw/3.3.8.4/haswell/include
           -I/opt/cray/pe/libsci/19.06.1/CRAY/9.0/x86_64/include
           -I/opt/cray/pe/mpt/7.7.10/gni/mpich-cray/9.0/include
           -I/opt/cray/pe/hdf5/1.10.5.2/cray/9.0/include
           -I/opt/cray/pe/netcdf/4.6.3.2/cray/9.0/include
           -I/opt/cray/rca/2.2.20-7.0.1.1_4.53__g8e3fb5b.ari/include
           -I/opt/cray/alps/6.6.58-7.0.1.1_6.10__g437d88db.ari/include
           -I/opt/cray/xpmem/2.2.20-7.0.1.1_4.14__g0475745.ari/include
           -I/opt/cray/gni-headers/5.0.12.0-7.0.1.1_6.32__g3b1768f.ari/include
           -I/opt/cray/dmapp/7.1.1-7.0.1.1_4.54__g38cf134.ari/include
           -I/opt/cray/pe/pmi/5.0.14/include
           -I/opt/cray/ugni/6.0.14.0-7.0.1.1_7.40__ge78e5b0.ari/include
           -I/opt/cray/udreg/2.3.2-7.0.1.1_3.38__g8175d3d.ari/include
           -I/opt/cray/wlm_detect/1.3.3-7.0.1.1_4.16__g7109084.ari/include
           -I/opt/cray/krca/2.2.6-7.0.1.1_5.39__gb641b12.ari/include
           -I/opt/cray-hss-devel/9.0.0/include
Program
  Units  : EXPRO_WRITE_ORIGINAL

ftnlx report
------------
Source   : /global/u2/b/bassem/gyro-EP/shared/EXPRO/EXPRO_write_original.f90
Date     : 01/14/2021  15:27:07


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    1.    !--------------------------------------------------------
    2.    ! EXPRO_write_original.f90
    3.    !
    4.    ! PURPOSE:
    5.    !  Rewrite original quantities to input.profiles
    6.    !
    7.    !  NOTE:
    8.    !   q is kept positive definite.  All information
    9.    !   about sign of q is retained in IPCCW and BTCCW.  
   10.    !--------------------------------------------------------
   11.    
   12.    subroutine EXPRO_write_original(tag)
   13.    
   14.      use EXPRO_globals
   15.      use EXPRO_interface
   16.    
   17.      implicit none
   18.    
   19.      integer :: i
   20.      integer :: ierr
   21.    
   22.      character(len=*), intent(in) :: tag
   23.      character (len=80) :: line
   24.    
   25.      open(unit=1,file=trim(path)//'input.profiles',status='old')
   26.      open(unit=2,file=trim(path)//'input.profiles.new',status='replace')
   27.    
   28.      write(2,'(a)') '# '//tag
   29.      do 
   30.    
   31.         read(1,'(a)',iostat=ierr) line
   32.         if (ierr < 0) exit
   33.         write(2,'(a)') line
   34.    
   35.         if (line(2:4) == 'rho') then
   36.            do i=1,EXPRO_n_exp
   37.               read(1,'(a)',iostat=ierr) line
   38.               write(2,'(5(1pe14.7,2x))') &
   39.                    EXPRO_rho(i),&
   40.                    EXPRO_rmin(i),&
   41.                    EXPRO_rmaj(i),&
   42.                    abs(EXPRO_q(i)),&
   43.                    EXPRO_kappa(i)
   44.            enddo
   45.         endif
   46.    
   47.         if (line(2:6) == 'delta') then
   48.            do i=1,EXPRO_n_exp
   49.               read(1,'(a)',iostat=ierr) line
   50.               write(2,'(5(1pe14.7,2x))') &
   51.                    EXPRO_delta(i),&
   52.                    EXPRO_te(i),&
   53.                    EXPRO_ne(i),&
   54.                    EXPRO_z_eff(i),&
   55.                    EXPRO_w0(i)
   56.            enddo
   57.         endif
   58.    
   59.         if (line(2:9) == 'flow_mom') then
   60.            do i=1,EXPRO_n_exp
   61.               read(1,'(a)',iostat=ierr) line
   62.               write(2,'(5(1pe14.7,2x))') &
   63.                    EXPRO_flow_mom(i),&
   64.                    EXPRO_pow_e(i),&
   65.                    EXPRO_pow_i(i),&
   66.                    EXPRO_pow_ei(i),&
   67.                    EXPRO_zeta(i)
   68.            enddo
   69.         endif
   70.    
   71.         if (line(2:10) == 'flow_beam') then
   72.            do i=1,EXPRO_n_exp
   73.               read(1,'(a)',iostat=ierr) line
   74.               write(2,'(5(1pe14.7,2x))') &
   75.                    EXPRO_flow_beam(i),&
   76.                    EXPRO_flow_wall(i),&
   77.                    EXPRO_zmag(i),&
   78.                    EXPRO_ptot(i),&
   79.                    EXPRO_poloidalfluxover2pi(i)
   80.            enddo
   81.         endif
   82.    
   83.         if (line(2:3) == 'ni') then
   84.            do i=1,EXPRO_n_exp
   85.               read(1,'(a)',iostat=ierr) line
   86.               write(2,'(5(1pe14.7,2x))') EXPRO_ni(:,i)
   87.            enddo
   88.         endif
   89.    
   90.         if (line(2:3) == 'Ti') then
   91.            do i=1,EXPRO_n_exp
   92.               read(1,'(a)',iostat=ierr) line
   93.               write(2,'(5(1pe14.7,2x))') EXPRO_ti(:,i)
   94.            enddo
   95.         endif
   96.    
   97.        if (line(2:5) == 'vtor') then
   98.            do i=1,EXPRO_n_exp
   99.               read(1,'(a)',iostat=ierr) line
  100.               write(2,'(5(1pe14.7,2x))') EXPRO_vtor(:,i)
  101.            enddo
  102.         endif
  103.    
  104.        if (line(2:5) == 'vpol') then
  105.            do i=1,EXPRO_n_exp
  106.               read(1,'(a)',iostat=ierr) line
  107.               write(2,'(5(1pe14.7,2x))') EXPRO_vpol(:,i)
  108.            enddo
  109.         endif
  110.      enddo
  111.    
  112.      close(1)
  113.      close(2)
  114.    
  115.    end subroutine EXPRO_write_original


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                         E x t e r n a l   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name  Messages
----  --------
ABS(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   EXPRO_WRITE_ORIGINAL (Line 42, file EXPRO_write_original.f90)

Name  Messages
----  --------
EXPRO_GLOBALS
      Defined as:  No definitions.

      Used By:     EXPRO_WRITE_ORIGINAL

Name  Messages
----  --------
EXPRO_INTERFACE
      Defined as:  No definitions.

      Used By:     EXPRO_WRITE_ORIGINAL

Name  Messages
----  --------
EXPRO_WRITE_ORIGINAL
      Defined as:  Subroutine (line 12, file EXPRO_write_original.f90)

      Interface:   None

      Calls:       TRIM(Intrinsic) (Line 25, file EXPRO_write_original.f90)
                   TRIM(Intrinsic) (Line 26, file EXPRO_write_original.f90)
                   ABS(Intrinsic) (Line 42, file EXPRO_write_original.f90)

        Uses:      EXPRO_GLOBALS
                   EXPRO_INTERFACE

Name  Messages
----  --------
TRIM(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   EXPRO_WRITE_ORIGINAL (Line 25, file EXPRO_write_original.f90)
                   EXPRO_WRITE_ORIGINAL (Line 26, file EXPRO_write_original.f90)

Name  Messages
----  --------
_F90_TRIM(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
