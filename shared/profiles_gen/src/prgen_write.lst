%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /global/u2/b/bassem/gyro-EP/shared/profiles_gen/src/prgen_write.f90
Compiled : 01/19/21  15:35:04
Compiler : Version 9.1.0
Ftnlx    : Version 9.1.0 
Target   : x86-64
Command  : ftn_driver.exe -hcpu=haswell -hdynamic -D__CRAYXC -D__CRAY_HASWELL
           -D__CRAYXT_COMPUTE_LINUX_TARGET -hnetwork=aries -hnoomp -em
           -J/global/homes/b/bassem/gyro-EP/modules -sreal64 -eD -Ktrap=fp -m1
           -Rbcdps -G0 -I/opt/cray/pe/netcdf/4.6.3.2/CRAYCLANG/9.0/include
           -c prgen_write.f90
           -I/opt/cray/pe/cce/9.1.0/cce-clang/x86_64/lib/clang/9.0.0/include
           -I/opt/cray/pe/cce/9.1.0/cce/x86_64/include/craylibs -I/usr/include
           -I/usr/include -I/opt/cray/pe/fftw/3.3.8.4/haswell/include
           -I/opt/cray/pe/libsci/19.06.1/CRAY/9.0/x86_64/include
           -I/opt/cray/pe/mpt/7.7.10/gni/mpich-cray/9.0/include
           -I/opt/cray/pe/hdf5/1.10.5.2/cray/9.0/include
           -I/opt/cray/pe/netcdf/4.6.3.2/cray/9.0/include
           -I/opt/cray/rca/2.2.20-7.0.1.1_4.53__g8e3fb5b.ari/include
           -I/opt/cray/alps/6.6.58-7.0.1.1_6.10__g437d88db.ari/include
           -I/opt/cray/xpmem/2.2.20-7.0.1.1_4.14__g0475745.ari/include
           -I/opt/cray/gni-headers/5.0.12.0-7.0.1.1_6.32__g3b1768f.ari/include
           -I/opt/cray/dmapp/7.1.1-7.0.1.1_4.54__g38cf134.ari/include
           -I/opt/cray/pe/pmi/5.0.14/include
           -I/opt/cray/ugni/6.0.14.0-7.0.1.1_7.40__ge78e5b0.ari/include
           -I/opt/cray/udreg/2.3.2-7.0.1.1_3.38__g8175d3d.ari/include
           -I/opt/cray/wlm_detect/1.3.3-7.0.1.1_4.16__g7109084.ari/include
           -I/opt/cray/krca/2.2.6-7.0.1.1_5.39__gb641b12.ari/include
           -I/opt/cray-hss-devel/9.0.0/include
Program
  Units  : PRGEN_WRITE

ftnlx report
------------
Source   : /global/u2/b/bassem/gyro-EP/shared/profiles_gen/src/prgen_write.f90
Date     : 01/19/2021  15:35:04


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    1.    !---------------------------------------------------------
    2.    ! prgen_write.f90
    3.    !
    4.    ! PURPOSE:
    5.    !  Generate input.profiles and input.profiles.extra
    6.    !----------------------------------------------------------
    7.    
    8.    subroutine prgen_write
    9.    
   10.      use prgen_globals
   11.      use EXPRO_interface
   12.    
   13.      !---------------------------------------------------------------
   14.      implicit none
   15.      !
   16.      integer :: i,ip
   17.      character (len=6) :: iname ! 6 character ion string
   18.      character(len=46) :: header = '#                 IONS :  Name       Z    Mass'
   19.      !---------------------------------------------------------------
   20.    
   21.      open(unit=1,file='input.profiles',status='replace')
   22.    
   23.      !---------------------------------------------------------------
   24.      ! Basic information
   25.      !
   26.      write(1,'(a,a)') '# input.profiles - Generated by profiles_gen on ',trim(date)
   27.      write(1,'(a)')   '#'
   28.      write(1,'(a)')   '# See https://fusion.gat.com/theory/input.profiles for complete documentation.'
   29.      write(1,'(a)')   '#'
   30.      write(1,'(a)')   '# * Data description:'
   31.      write(1,'(a)')   '#'
   32.      write(1,'(a,a)') '#           INPUT FILE : ',trim(raw_data_file)
   33.      write(1,'(a,i3)')'#    RADIAL GRIDPOINTS : ',nx
   34.    
   35.      select case (format_type)
   36.    
   37.      case (1)
   38.    
   39.         if (cer_file /= "null") then
   40.            write(1,20) '#      MERGED CER FILE : ',trim(cer_file)
   41.         endif
   42.         write(1,40) '#          SHOT NUMBER : ',onetwo_ishot
   43.         write(1,'(a)') '#'
   44.         write(1,'(a)') header
   45.    
   46.         n_ion = min(onetwo_nion_tot,10)
   47.         do i=1,n_ion
   48.            write(1,'(a,t27,a,t36,i3,t42,f5.1,t48,a)') '#',&
   49.                 ion_name(i),&
   50.                 ion_z(i),&
   51.                 ion_mass(i),&
   52.                 ion_type(i)
   53.         enddo
   54.    
   55.      case (2)
   56.    
   57.         write(1,20) '#              TOKAMAK : ',trim(plst_tokamak_id)
   58.         write(1,40) '#          SHOT NUMBER : ',plst_shot_number
   59.         write(1,20) '#'
   60.         write(1,'(a)') header
   61.    
   62.         n_ion = min(plst_dp1_nspec_all-1,10)
   63.         do i=1,n_ion
   64.            write(1,'(a,t27,a,t36,i3,t42,f5.1,t48,a)') '#',&
   65.                 ion_name(i),&
   66.                 ion_z(i),&
   67.                 ion_mass(i),&
   68.                 ion_type(i)
   69.    
   70.         enddo
   71.         write(1,20) '#'
   72.         write(1,'(a,f7.2)') '#       Quasineutrality error (%) ',quasi_err*100.0
   73.         write(1,'(a,f7.2)') '#       e power balance error (%) ',pow_e_err*100.0
   74.         write(1,'(a,f7.2)') '#       i power balance error (%) ',pow_i_err*100.0
   75.    
   76.      case (3)
   77.    
   78.         peqdsk_nion = 1+peqdsk_nimp+peqdsk_nbeams
   79.    
   80.         write(1,'(a)') header
   81.    
   82.         n_ion = peqdsk_nion
   83.         do i=1,n_ion
   84.            ip = reorder_vec(i)
   85.            call prgen_ion_name(nint(peqdsk_m(ip)),nint(peqdsk_z(ip)),iname)
   86.            write(1,'(a,t27,a,t36,i3,t42,f5.1,t48,a)') '#',&
   87.                 iname,&
   88.                 nint(peqdsk_z(ip)),&
   89.                 peqdsk_m(ip),&
   90.                 peqdsk_type(ip)
   91.         enddo
   92.    
   93.      case (6)
   94.    
   95.         write(1,20) '#              TOKAMAK : ',ufile_tok
   96.         write(1,20) '#          SHOT NUMBER : ',ufile_shot
   97.         write(1,20) '#             TIME (s) : ',ufile_time
   98.    
   99.         write(1,'(a)') header
  100.    
  101.         n_ion = ufile_nion
  102.         do i=1,n_ion
  103.            ip = reorder_vec(i)
  104.            call prgen_ion_name(nint(ufile_m(ip)),nint(ufile_z(ip)),iname)
  105.            write(1,'(a,t27,a,t36,i3,t42,f5.1,t48,a)') '#',&
  106.                 iname,&
  107.                 nint(ufile_z(ip)),&
  108.                 ufile_m(ip),&
  109.                 ufile_type(ip)
  110.         enddo
  111.    
  112.         write(1,20) '#'
  113.         write(1,'(a,f6.2)') '#       Quasineutrality error (%) ',quasi_err*100.0
  114.    
  115.      case (7)
  116.    
  117.         if (gmerge_flag == 1) &
  118.              write(1,40) '#          SHOT NUMBER : [DATA MODIFIED WITH GMERGE]'
  119.         write(1,20) '#'
  120.         write(1,'(a)') '#'
  121.         write(1,'(a)') header
  122.    
  123.         do i=1,n_ion
  124.            ion_name(i) = ion_sanitize(i)
  125.            ion_type(i) = type_therm
  126.            call onetwo_ion_zmass(ion_name(i),ion_z(i),ion_mass(i))
  127.            call prgen_ion_name(nint(ion_mass(i)),ion_z(i),iname)
  128.            write(1,'(a,t27,a,t36,i3,t42,f5.1,t48,a)') '#',&
  129.                 iname,&
  130.                 ion_z(i),&
  131.                 ion_mass(i),&
  132.                 ion_type(i)
  133.         enddo
  134.    
  135.      end select
  136.      write(1,20) '# '
  137.      !---------------------------------------------------------------
  138.    
  139.      write(1,20) '# * An associated input.profiles.extra was generated'
  140.      write(1,20) '# '
  141.    
  142.      !---------------------------------------------------------------
  143.      ! High-resolution geometry
  144.      !
  145.      if (efit_method > 1) then
  146.         write(1,20) '# * An associated input.profiles.geo was generated'
  147.         write(1,20) '#'
  148.         if ((format_type == 1 .or. format_type == 2)) then
  149.            if (abs(dpsi_efit/dpsi_data-1) > 0.001) then
  150.               write(1,'(a,1pe9.2,a)') &
  151.                    '#    FLUX SHRINK FACTOR : ',dpsi_efit/dpsi_data-1.0,' [WARNING]'
  152.            else
  153.               write(1,'(a,1pe9.2,a)') '#   FLUX SHRINK FACTOR : ',dpsi_efit/dpsi_data-1.0,' [GOOD]'
  154.            endif
  155.         endif
  156.         write(1,40) '#             NFOURIER : ',nfourier
  157.         write(1,40) '#                NSURF : ',nsurf
  158.         write(1,40) '#                 NARC : ',narc
  159.         if (efit_method /= 4) then
  160.            write(1,20) '#            EFIT HEADER ... '
  161.            write(1,20) '#'
  162.            write(1,20) '#',efit_header
  163.         endif
  164.         write(1,20) '#'
  165.      endif
  166.      !---------------------------------------------------------------
  167.    
  168.      !---------------------------------------------------------------
  169.      ! Merged files and extra information
  170.      !
  171.      write(1,20) '# * Plasma dimensions:'
  172.      write(1,20) '#'
  173.      write(1,'(a,1pe8.2,a)') '#  PLASMA MAJOR RADIUS : ',rmaj(nx),' m'
  174.      write(1,'(a,1pe8.2,a)') '#  PLASMA MINOR RADIUS : ',rmin(nx),' m'
  175.      write(1,20) '#'
  176.      write(1,20)    '# * Field/current orientation:'
  177.      write(1,'(a)') '# '
  178.      write(1,'(a)') '#   NOTE: All variables carry correct and consistent signs'
  179.      write(1,'(a)') '#         in fixed gacode (r,theta,varphi) coordinates.'
  180.      write(1,20) '#'
  181.      write(1,'(a,i2)')       '#                IPCCW : ',ipccw
  182.      write(1,'(a,i2)')       '#                BTCCW : ',btccw
  183.      !---------------------------------------------------------------
  184.    
  185.      EXPRO_n_exp = nx
  186.    
  187.      ! COORDINATES: For all data sources, ensure correct sign of EXPRO_b_ref
  188.      !              (and thus toroidal flux)
  189.      !
  190.      select case (format_type)
  191.    
  192.      case (0)
  193.         ! (nothing but gfile)
  194.         EXPRO_b_ref = -btccw*abs(null_bref)
  195.         EXPRO_arho  = null_arho
  196.         EXPRO_rvbv  = 0.0
  197.         EXPRO_ip_exp = 0.0
  198.      case (1)
  199.         ! onetwo statefile
  200.         EXPRO_b_ref = -btccw*abs(onetwo_Btor)
  201.         EXPRO_arho  = onetwo_rho_grid(nx)
  202.         EXPRO_rvbv  = onetwo_R0*onetwo_Btor
  203.         EXPRO_ip_exp = ip_tot
  204.      case (2)
  205.         ! plasmastate 
  206.         EXPRO_b_ref = -btccw*abs(plst_b_axis_vac)
  207.         EXPRO_arho  = sqrt(plst_phit(nx)/plst_b_axis_vac/pi)
  208.         EXPRO_rvbv  = 0.0
  209.         EXPRO_ip_exp = 0.0
  210.      case (3)
  211.         ! pfile
  212.         EXPRO_b_ref = -btccw*abs(peqdsk_bref)
  213.         EXPRO_arho  = peqdsk_arho
  214.         EXPRO_rvbv  = 0.0
  215.         EXPRO_ip_exp = 0.0
  216.      case (5)
  217.         ! corsica
  218.         EXPRO_b_ref = -btccw*abs(corsica_bref)
  219.         EXPRO_arho  = corsica_arho
  220.         EXPRO_rvbv  = 0.0
  221.         EXPRO_ip_exp = 0.0
  222.      case (6)
  223.         ! ufile
  224.         EXPRO_b_ref = -btccw*abs(ufile_bref)
  225.         EXPRO_arho  = ufile_arho
  226.         EXPRO_rvbv  = 0.0
  227.         EXPRO_ip_exp = 0.0
  228.      end select
  229.    
  230.      write(1,20) '# '
  231.      if (n_ion < 10) then
  232.         write(1,24) 'N_ION=',n_ion
  233.      else
  234.         write(1,25) 'N_ION=',n_ion
  235.      endif
  236.    
  237.      if (EXPRO_n_exp > 99) then
  238.         write(1,30) 'N_EXP=',EXPRO_n_exp
  239.      else
  240.         write(1,25) 'N_EXP=',EXPRO_n_exp
  241.      endif
  242.      write(1,'(a,sp,1pe14.7)') 'BT_EXP=',EXPRO_b_ref
  243.      write(1,60) 'IP_EXP=',EXPRO_ip_exp
  244.      write(1,60) 'RVBV=',abs(EXPRO_rvbv)
  245.      write(1,60) 'ARHO_EXP=',EXPRO_arho
  246.    
  247.      !-------------------------------------------------------------------------------------
  248.      ! Now we need to write the profile data
  249.      !
  250.      call EXPRO_write(1)
  251.      close(1)
  252.      print '(a)','INFO: (prgen) Wrote input.profiles.'
  253.      !-------------------------------------------------------------------------------------
  254.    
  255.      !-----------------------------------------------------------
  256.      ! Set EXPRO ctrl parameters for derived parameter calc.
  257.      !
  258.      EXPRO_n_ion = n_ion ! Need to set this since we aren't EXPRO_pread-ing it
  259.      EXPRO_ctrl_n_ion = n_ion
  260.      EXPRO_ctrl_quasineutral_flag = 0
  261.      EXPRO_ctrl_z(1) = 1.0
  262.      if (efit_method > 1) then
  263.         EXPRO_ctrl_numeq_flag = 1
  264.         call EXPRO_read_geo
  265.      else
  266.         EXPRO_ctrl_numeq_flag = 0
  267.      endif
  268.      !
  269.      call EXPRO_compute_derived
  270.      call EXPRO_write_derived(1,'input.profiles.extra')
  271.      print '(a)','INFO: (prgen) Wrote input.profiles.extra.'
  272.      !-----------------------------------------------------------------------------------
  273.    
  274.    20 format(5(a))
  275.    24 format(a,i1)
  276.    25 format(a,i2)
  277.    30 format(a,i3)
  278.    40 format(a,i6)
  279.    60 format(a,1pe13.7)
  280.    
  281.    end subroutine prgen_write


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                         E x t e r n a l   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name  Messages
----  --------
ABS(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   PRGEN_WRITE (Line 149, file prgen_write.f90)
                   PRGEN_WRITE (Line 194, file prgen_write.f90)
                   PRGEN_WRITE (Line 200, file prgen_write.f90)
                   PRGEN_WRITE (Line 206, file prgen_write.f90)
                   PRGEN_WRITE (Line 212, file prgen_write.f90)
                   PRGEN_WRITE (Line 218, file prgen_write.f90)
                   PRGEN_WRITE (Line 224, file prgen_write.f90)
                   PRGEN_WRITE (Line 244, file prgen_write.f90)

Name  Messages
----  --------
EXPRO_COMPUTE_DERIVED
      Defined as:  No definitions.

      Interface:   None

      Called By:   PRGEN_WRITE (Line 269, file prgen_write.f90)

Name  Messages
----  --------
EXPRO_INTERFACE
      Defined as:  No definitions.

      Used By:     PRGEN_WRITE

Name  Messages
----  --------
EXPRO_READ_GEO
      Defined as:  No definitions.

      Interface:   None

      Called By:   PRGEN_WRITE (Line 264, file prgen_write.f90)

Name  Messages
----  --------
EXPRO_WRITE
      Defined as:  No definitions.

      Interface:   None

      Called By:   PRGEN_WRITE (Line 250, file prgen_write.f90)

Name  Messages
----  --------
EXPRO_WRITE_DERIVED
      Defined as:  No definitions.

      Interface:   None

      Called By:   PRGEN_WRITE (Line 270, file prgen_write.f90)

Name  Messages
----  --------
MIN(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   PRGEN_WRITE (Line 46, file prgen_write.f90)
                   PRGEN_WRITE (Line 62, file prgen_write.f90)

Name  Messages
----  --------
NINT(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   PRGEN_WRITE (Line 85, file prgen_write.f90)
                   PRGEN_WRITE (Line 85, file prgen_write.f90)
                   PRGEN_WRITE (Line 88, file prgen_write.f90)
                   PRGEN_WRITE (Line 104, file prgen_write.f90)
                   PRGEN_WRITE (Line 104, file prgen_write.f90)
                   PRGEN_WRITE (Line 107, file prgen_write.f90)
                   PRGEN_WRITE (Line 127, file prgen_write.f90)

Name  Messages
----  --------
ONETWO_ION_ZMASS
      Defined as:  No definitions.

      Interface:   None

      Called By:   PRGEN_WRITE (Line 126, file prgen_write.f90)

Name  Messages
----  --------
PRGEN_GLOBALS
      Defined as:  No definitions.

      Used By:     PRGEN_WRITE

Name  Messages
----  --------
PRGEN_ION_NAME
      Defined as:  No definitions.

      Interface:   None

      Called By:   PRGEN_WRITE (Line 85, file prgen_write.f90)
                   PRGEN_WRITE (Line 104, file prgen_write.f90)
                   PRGEN_WRITE (Line 127, file prgen_write.f90)

Name  Messages
----  --------
PRGEN_WRITE
      Defined as:  Subroutine (line 8, file prgen_write.f90)

      Interface:   None

      Calls:       TRIM(Intrinsic) (Line 26, file prgen_write.f90)
                   TRIM(Intrinsic) (Line 32, file prgen_write.f90)
                   TRIM(Intrinsic) (Line 40, file prgen_write.f90)
                   TRIM(Intrinsic) (Line 57, file prgen_write.f90)
                   MIN(Intrinsic) (Line 46, file prgen_write.f90)
                   MIN(Intrinsic) (Line 62, file prgen_write.f90)
                   NINT(Intrinsic) (Line 85, file prgen_write.f90)
                   NINT(Intrinsic) (Line 85, file prgen_write.f90)
                   NINT(Intrinsic) (Line 88, file prgen_write.f90)
                   NINT(Intrinsic) (Line 104, file prgen_write.f90)
                   NINT(Intrinsic) (Line 104, file prgen_write.f90)
                   NINT(Intrinsic) (Line 107, file prgen_write.f90)
                   NINT(Intrinsic) (Line 127, file prgen_write.f90)
                   PRGEN_ION_NAME (Line 85, file prgen_write.f90)
                   PRGEN_ION_NAME (Line 104, file prgen_write.f90)
                   PRGEN_ION_NAME (Line 127, file prgen_write.f90)
                   ONETWO_ION_ZMASS (Line 126, file prgen_write.f90)
                   ABS(Intrinsic) (Line 149, file prgen_write.f90)
                   ABS(Intrinsic) (Line 194, file prgen_write.f90)
                   ABS(Intrinsic) (Line 200, file prgen_write.f90)
                   ABS(Intrinsic) (Line 206, file prgen_write.f90)
                   ABS(Intrinsic) (Line 212, file prgen_write.f90)
                   ABS(Intrinsic) (Line 218, file prgen_write.f90)
                   ABS(Intrinsic) (Line 224, file prgen_write.f90)
                   ABS(Intrinsic) (Line 244, file prgen_write.f90)
                   SQRT(Intrinsic) (Line 207, file prgen_write.f90)
                   EXPRO_WRITE (Line 250, file prgen_write.f90)
                   EXPRO_READ_GEO (Line 264, file prgen_write.f90)
                   EXPRO_COMPUTE_DERIVED (Line 269, file prgen_write.f90)
                   EXPRO_WRITE_DERIVED (Line 270, file prgen_write.f90)

        Uses:      PRGEN_GLOBALS
                   EXPRO_INTERFACE

Name  Messages
----  --------
SQRT(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   PRGEN_WRITE (Line 207, file prgen_write.f90)

Name  Messages
----  --------
TRIM(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   PRGEN_WRITE (Line 26, file prgen_write.f90)
                   PRGEN_WRITE (Line 32, file prgen_write.f90)
                   PRGEN_WRITE (Line 40, file prgen_write.f90)
                   PRGEN_WRITE (Line 57, file prgen_write.f90)

Name  Messages
----  --------
_F90_TRIM(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
