%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /global/u2/b/bassem/gyro-EP/shared/profiles_gen/src/prgen_read_ufile.f90
Compiled : 01/19/21  15:35:03
Compiler : Version 9.1.0
Ftnlx    : Version 9.1.0 
Target   : x86-64
Command  : ftn_driver.exe -hcpu=haswell -hdynamic -D__CRAYXC -D__CRAY_HASWELL
           -D__CRAYXT_COMPUTE_LINUX_TARGET -hnetwork=aries -hnoomp -em
           -J/global/homes/b/bassem/gyro-EP/modules -sreal64 -eD -Ktrap=fp -m1
           -Rbcdps -G0 -I/opt/cray/pe/netcdf/4.6.3.2/CRAYCLANG/9.0/include
           -c prgen_read_ufile.f90
           -I/opt/cray/pe/cce/9.1.0/cce-clang/x86_64/lib/clang/9.0.0/include
           -I/opt/cray/pe/cce/9.1.0/cce/x86_64/include/craylibs -I/usr/include
           -I/usr/include -I/opt/cray/pe/fftw/3.3.8.4/haswell/include
           -I/opt/cray/pe/libsci/19.06.1/CRAY/9.0/x86_64/include
           -I/opt/cray/pe/mpt/7.7.10/gni/mpich-cray/9.0/include
           -I/opt/cray/pe/hdf5/1.10.5.2/cray/9.0/include
           -I/opt/cray/pe/netcdf/4.6.3.2/cray/9.0/include
           -I/opt/cray/rca/2.2.20-7.0.1.1_4.53__g8e3fb5b.ari/include
           -I/opt/cray/alps/6.6.58-7.0.1.1_6.10__g437d88db.ari/include
           -I/opt/cray/xpmem/2.2.20-7.0.1.1_4.14__g0475745.ari/include
           -I/opt/cray/gni-headers/5.0.12.0-7.0.1.1_6.32__g3b1768f.ari/include
           -I/opt/cray/dmapp/7.1.1-7.0.1.1_4.54__g38cf134.ari/include
           -I/opt/cray/pe/pmi/5.0.14/include
           -I/opt/cray/ugni/6.0.14.0-7.0.1.1_7.40__ge78e5b0.ari/include
           -I/opt/cray/udreg/2.3.2-7.0.1.1_3.38__g8175d3d.ari/include
           -I/opt/cray/wlm_detect/1.3.3-7.0.1.1_4.16__g7109084.ari/include
           -I/opt/cray/krca/2.2.6-7.0.1.1_5.39__gb641b12.ari/include
           -I/opt/cray-hss-devel/9.0.0/include
Program
  Units  : PRGEN_READ_UFILE
          UFILE_MAPPER
          BOUND_EXP

ftnlx report
------------
Source   : /global/u2/b/bassem/gyro-EP/shared/profiles_gen/src/prgen_read_ufile.f90
Date     : 01/19/2021  15:35:04


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    1.    !--------------------------------------------------------------
    2.    ! prgen_read_ufile.f90
    3.    !
    4.    ! PURPOSE:
    5.    !  Read profiles from post-processed (by gacode_ufile_tool) 
    6.    !  UFILEs. 
    7.    !--------------------------------------------------------------
    8.    
    9.    subroutine prgen_read_ufile
   10.    
   11.      use prgen_globals
   12.    
   13.      implicit none
   14.    
   15.      integer :: i,ix,j
   16.      real :: chi_ta
   17.      real, dimension(:), allocatable :: chi_t
   18.      character(len=16) :: a
   19.    
   20.      open(unit=1,file='out.BT.ave',status='old') 
   21.      read(1,*) ufile_bref
   22.      close(1)
   23.    
   24.      ! Chi_t(a), where Chi_t is the total toroidal flux
   25.      open(unit=1,file='out.PHIA.ave',status='old') 
   26.      read(1,*) chi_ta
   27.      chi_ta = chi_ta/(2*pi)
   28.      close(1)
   29.    
   30.      open(unit=1,file='out.com',status='old') 
   31.      read(1,*) raw_data_file
   32.      read(1,*) ufile_tok
   33.      read(1,*) a
   34.      read(1,*) a
   35.      read(1,*) ufile_shot
   36.      read(1,*) ufile_time
   37.      read(1,*) a
   38.      do i=1,8
   39.         read(1,*) ufile_z(i)
   40.         read(1,*) ufile_m(i)
   41.      enddo
   42.      close(1)
   43.     
   44.      ! NOTE: this is a hardwired dimension
   45.      nx = 51
   46.    
   47.      call allocate_internals
   48.      call allocate_ufile_vars
   49.    
   50.      allocate(chi_t(nx))
   51.    
   52.      ! Classic normalized rho
   53.      do i=1,nx
   54.         rho(i) = (i-1)/(nx-1.0)
   55.      enddo
   56.    
   57.      call ufile_mapper('out.NE.ave',rho,ufile_ne,nx,1)
   58.      call ufile_mapper('out.TE.ave',rho,ufile_te,nx,1)
   59.      call ufile_mapper('out.TI.ave',rho,ufile_ti(:,1),nx,1)
   60.      call ufile_mapper('out.ZEFFR.ave',rho,ufile_zeff,nx,0)
   61.      call ufile_mapper('out.RMAJOR.ave',rho,rmaj,nx,0)
   62.      call ufile_mapper('out.RMINOR.ave',rho,rmin,nx,0)
   63.      ! Correct rmin on magnetic axis
   64.      rmin(1) = 0.0
   65.      call ufile_mapper('out.Q.ave',rho,q,nx,0)
   66.      call ufile_mapper('out.KAPPAR.ave',rho,kappa,nx,0)
   67.      call ufile_mapper('out.DELTAR.ave',rho,delta,nx,0)
   68.      call ufile_mapper('out.PRES.ave',rho,ufile_pres,nx,1)
   69.      call ufile_mapper('out.VROT.ave',rho,ufile_vrot,nx,0)
   70.      call ufile_mapper('out.VROTM.ave',rho,ufile_vrotm,nx,0)
   71.      call ufile_mapper('out.VOLUME.ave',rho,ufile_volume,nx,1)
   72.      call ufile_mapper('out.QFUSI.ave',rho,ufile_qfusi,nx,0)
   73.      call ufile_mapper('out.QFUSE.ave',rho,ufile_qfuse,nx,0)
   74.      call ufile_mapper('out.QNBII.ave',rho,ufile_qnbii,nx,0)
   75.      call ufile_mapper('out.QNBIE.ave',rho,ufile_qnbie,nx,0)
   76.      call ufile_mapper('out.QICRHI.ave',rho,ufile_qicrhi,nx,0)
   77.      call ufile_mapper('out.QICRHE.ave',rho,ufile_qicrhe,nx,0)
   78.      call ufile_mapper('out.QEI.ave',rho,ufile_qei,nx,0)
   79.      call ufile_mapper('out.QRAD.ave',rho,ufile_qrad,nx,0)
   80.      call ufile_mapper('out.QECHE.ave',rho,ufile_qeche,nx,0)
   81.      call ufile_mapper('out.QECHI.ave',rho,ufile_qechi,nx,0)
   82.      call ufile_mapper('out.QLHE.ave',rho,ufile_qlhe,nx,0)
   83.      call ufile_mapper('out.QLHI.ave',rho,ufile_qlhi,nx,0)
   84.      call ufile_mapper('out.QOHM.ave',rho,ufile_qohm,nx,0)
   85.      call ufile_mapper('out.QWALLI.ave',rho,ufile_qwalli,nx,0)
   86.      call ufile_mapper('out.QWALLE.ave',rho,ufile_qwalle,nx,0)
   87.      call ufile_mapper('out.TORQ.ave',rho,ufile_torq,nx,0)
   88.      call ufile_mapper('out.SWALL.ave',rho,ufile_swall,nx,0)
   89.      call ufile_mapper('out.SNBII.ave',rho,ufile_snbii,nx,0)
   90.      call ufile_mapper('out.SNBIE.ave',rho,ufile_snbie,nx,0)
   91.    
   92.      i=0
   93.    
   94.      if (ufile_m(1) > 0.0) then
   95.         i = i+1
   96.         call ufile_mapper('out.NM1.ave',rho,ufile_ni(:,i),nx,1)
   97.         ufile_type(i)='therm'
   98.      endif
   99.      if (ufile_m(2) > 0.0) then
  100.         i = i+1
  101.         call ufile_mapper('out.NM2.ave',rho,ufile_ni(:,i),nx,1)
  102.         ufile_type(i)='therm'
  103.      endif
  104.      if (ufile_m(3) > 0.0) then
  105.         i = i+1
  106.         call ufile_mapper('out.NM3.ave',rho,ufile_ni(:,i),nx,1)
  107.         ufile_type(i)='therm'
  108.      endif
  109.      if (ufile_m(4) > 0.0) then
  110.         i = i+1
  111.         call ufile_mapper('out.NM4.ave',rho,ufile_ni(:,i),nx,1)
  112.         ufile_type(i)='therm'
  113.      endif
  114.      if (ufile_m(5) > 0.0) then
  115.         i = i+1
  116.         call ufile_mapper('out.NM5.ave',rho,ufile_ni(:,i),nx,1)
  117.         ufile_type(i)='therm'
  118.      endif
  119.      if (ufile_m(6) > 0.0) then
  120.         i = i+1
  121.         call ufile_mapper('out.NFAST1.ave',rho,ufile_ni(:,i),nx,1)
  122.         ufile_type(i)='fast'
  123.      endif
  124.      if (ufile_m(7) > 0.0) then
  125.         i = i+1
  126.         call ufile_mapper('out.NFAST2.ave',rho,ufile_ni(:,i),nx,1)
  127.         ufile_type(i)='fast'
  128.      endif
  129.      if (ufile_m(8) > 0.0) then
  130.         i = i+1
  131.         call ufile_mapper('out.NFAST3.ave',rho,ufile_ni(:,i),nx,1)
  132.         ufile_type(i)='fast'
  133.      endif
  134.    
  135.      ufile_nion=i
  136.    
  137.      ! Now compress m/z
  138.      i=1
  139.      do ix=1,8
  140.         if (int(ufile_m(i)) == 0) then
  141.            do j=i+1,8
  142.               ufile_m(j-1) = ufile_m(j)
  143.               ufile_z(j-1) = ufile_z(j)
  144.            enddo
  145.         else
  146.            i = i+1
  147.         endif
  148.      enddo
  149.    
  150.      ! Set ion temperatures
  151.      do i=2,ufile_nion
  152.         if (ufile_type(i) == 'therm') then
  153.            ufile_ti(:,i) = ufile_ti(:,1) 
ftn-6263 ftn: VECTOR PRGEN_READ_UFILE, File = prgen_read_ufile.f90, Line = 153 
  A loop starting at line 153 was not vectorized because it contains a reference to a non-vector intrinsic on line 153.

  154.         else
  155.            ufile_ti(:,i) = 5*ufile_ti(:,1)
ftn-6263 ftn: VECTOR PRGEN_READ_UFILE, File = prgen_read_ufile.f90, Line = 155 
  A loop starting at line 155 was not vectorized because it contains a reference to a non-vector intrinsic on line 155.

  156.            print '(a)','WARNING: (prgen_read_ufile) Setting bogus fast-ion temperature.'
  157.         endif
  158.      enddo
  159.    
  160.      ! Compute the quasineutrality error with all ions:
  161.    
  162.      quasi_err = 0.0
  163.      ix = min(ufile_nion,n_ion_max)
  164.      do i=1,nx
  165.         quasi_err = quasi_err+sum(ufile_ni(i,1:ix)*ufile_z(1:ix))
ftn-6263 ftn: VECTOR PRGEN_READ_UFILE, File = prgen_read_ufile.f90, Line = 165 
  A loop starting at line 165 was not vectorized because it contains a reference to a non-vector intrinsic on line 165.

  166.      enddo
  167.      quasi_err = abs(quasi_err/sum(ufile_ne(:))-1.0)
ftn-6263 ftn: VECTOR PRGEN_READ_UFILE, File = prgen_read_ufile.f90, Line = 167 
  A loop starting at line 167 was not vectorized because it contains a reference to a non-vector intrinsic on line 167.

  168.    
  169.      !------------------------------------------------------------------------
  170.      ! Use classic parameterization chi_t = B_ref/2 rho^2
  171.      ! where chi_t is toroidal flux over 2pi.
  172.      !
  173.      ufile_arho = sqrt(2*chi_ta/abs(ufile_bref))
  174.      chi_t(:)   = chi_ta*rho**2
ftn-6262 ftn: VECTOR PRGEN_READ_UFILE, File = prgen_read_ufile.f90, Line = 174 
  A loop starting at line 174 was not vectorized because it contains a call to a subroutine or function on line 174.

  175.      !
  176.      ! Compute psi_p by integrating d(chi_t)/q = d(psi_p)
  177.      ! using the trapezoidal rule
  178.      !
  179.      dpsi(1) = 0.0
  180.      do i=2,nx
  181.         dpsi(i) = dpsi(i-1) + 0.5*(1.0/q(i-1)+1.0/q(i))*(chi_t(i)-chi_t(i-1))
  182.      enddo
  183.      !------------------------------------------------------------------------
  184.    
  185.    end subroutine prgen_read_ufile


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  186.    
  187.    
  188.    !---------------------------------------------------------------------
  189.    ! Routine to read split 2D UFILE data.
  190.    !---------------------------------------------------------------------
  191.    
  192.    subroutine ufile_mapper(file,x,y,nx,neg_protect)
  193.    
  194.      character(len=*), intent(in) :: file
  195.      integer, intent(in) :: nx
  196.      integer, intent(in) :: neg_protect
  197.      real, intent(in) :: x(nx)
  198.      real, intent(inout) :: y(nx)
  199.    
  200.      real, dimension(:), allocatable :: x0
  201.      real, dimension(:), allocatable :: y0
  202.      real :: ya,yb
  203.      integer :: ierr
  204.    
  205.      open(unit=1,file='out.dim',status='old')
  206.      read(1,*) nx0
  207.      close(1)
  208.    
  209.      allocate(x0(0:nx0+1))
  210.      allocate(y0(0:nx0+1))
  211.    
  212.      open(unit=1,file=trim(file),status='old',iostat=ierr)
  213.      if (ierr == 0) then
  214.         ! File exists
  215.         do i=1,nx0
  216.            read(1,*) x0(i),y0(i)
  217.         enddo
  218.      else
  219.         ! File does NOT exist: pad output with zeros
  220.         y(:) = 0.0
ftn-6263 ftn: VECTOR UFILE_MAPPER, File = prgen_read_ufile.f90, Line = 220 
  A loop starting at line 220 was not vectorized because it contains a reference to a non-vector intrinsic on line 220.

  221.         return
  222.      endif
  223.    
  224.      ! Check for zero profile (1.0 is effectively zero).
  225.      if (sum(y0(1:nx0)) < 1.0) then 
ftn-6263 ftn: VECTOR UFILE_MAPPER, File = prgen_read_ufile.f90, Line = 225 
  A loop starting at line 225 was not vectorized because it contains a reference to a non-vector intrinsic on line 225.

  226.         y(:) = 0.0
ftn-6263 ftn: VECTOR UFILE_MAPPER, File = prgen_read_ufile.f90, Line = 226 
  A loop starting at line 226 was not vectorized because it contains a reference to a non-vector intrinsic on line 226.

  227.         return
  228.      endif
  229.      
  230.      if (x0(1) > 0.0 .and. x0(nx0) < 1.0) then
  231.         ! Extrapolate to 0 and 1
  232.         x0(0)     = 0.0
  233.         x0(nx0+1) = 1.0
  234.         if (neg_protect==0) then
  235.            call bound_extrap(ya,yb,y0,x0,nx0+2)
  236.         else
  237.            call bound_exp(ya,yb,y0,x0,nx0+2)
  238.         endif
  239.         y0(0) = ya
  240.         y0(nx0+1) = yb
  241.         call cub_spline(x0,y0,nx0+2,x,y,nx)
  242.      else if (x0(1) > 0.0 .and. abs(x0(nx0)-1.0) <= epsilon(0.0)) then
  243.         ! Extrapolate to 0 only
  244.         x0(0) = 0.0
  245.         call bound_extrap(ya,yb,y0(0:nx0),x0(0:nx0),nx0+1)
  246.         y0(0) = ya
  247.         call cub_spline(x0(0:nx0),y0(0:nx0),nx0+1,x,y,nx)
  248.      else
  249.         print '(a)','WARNING: (prgen) Bad data in prgen_read_ufile: '//file
  250.         y(:) = 0.0
ftn-6263 ftn: VECTOR UFILE_MAPPER, File = prgen_read_ufile.f90, Line = 250 
  A loop starting at line 250 was not vectorized because it contains a reference to a non-vector intrinsic on line 250.

  251.         return
  252.      endif
  253.    
  254.      deallocate(x0)
  255.      deallocate(y0)
  256.    
  257.    end subroutine ufile_mapper


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  258.    
  259.    
  260.    !---------------------------------------------------------------------
  261.    ! Routine, based on math/bound_extrap.f90, to use extrapolation based
  262.    ! on an inferred scale length at the right end of the data.  This is 
  263.    ! appropriate for profiles (n,T for example) that must remain positive.
  264.    !---------------------------------------------------------------------
  265.    
  266.    subroutine bound_exp(fa,fb,f,r,n)
  267.    
  268.      implicit none
  269.    
  270.      integer, intent(in) :: n
  271.    
  272.      real, intent(inout) :: fa
  273.      real, intent(inout) :: fb
  274.      real, intent(in), dimension(n) :: f
  275.      real, intent(in), dimension(n) :: r
  276.    
  277.      real :: r1,r2,r3
  278.      real :: ra,rb
  279.      real :: f1,f2,f3
  280.      real :: l,c
  281.    
  282.      ! Left boundary
  283.    
  284.      ra = r(1)
  285.    
  286.      r2 = r(2)
  287.      r3 = r(3)
  288.      
  289.      f2 = f(2)
  290.      f3 = f(3)
  291.    
  292.      fa = (ra-r2)/(r3-r2)*f3+(r3-ra)/(r3-r2)*f2
  293.    
  294.      ! Right boundary (fit to exp(-r/l) with scale length l)
  295.    
  296.      rb = r(n)
  297.    
  298.      r1 = r(n-2)
  299.      r2 = r(n-1)
  300.      
  301.      f1 = f(n-2)
  302.      f2 = f(n-1)
  303.    
  304.      l = (r2-r1)/log(f1/f2)
  305.      c = f2*exp(r2/l)
  306.    
  307.      fb = c*exp(-rb/l)
  308.    
  309.    end subroutine bound_exp


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                         E x t e r n a l   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Name  Messages
----  --------
ABS(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   EPSILON(Intrinsic) (Line 167, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 173, file prgen_read_ufile.f90)
                   LOG(Intrinsic) (Line 242, file prgen_read_ufile.f90)

Name  Messages
----  --------
ALLOCATE_INTERNALS
      Defined as:  No definitions.

      Interface:   None

      Called By:   EPSILON(Intrinsic) (Line 47, file prgen_read_ufile.f90)

Name  Messages
----  --------
ALLOCATE_UFILE_VARS
      Defined as:  No definitions.

      Interface:   None

      Called By:   EPSILON(Intrinsic) (Line 48, file prgen_read_ufile.f90)

Name  Messages
----  --------
BOUND_EXP
      Defined as:  Subroutine (line 266, file prgen_read_ufile.f90)

      Interface:   None

      Called By:   LOG(Intrinsic) (Line 237, file prgen_read_ufile.f90)

      Calls:       LOG(Intrinsic) (Line 304, file prgen_read_ufile.f90)
                   EXP(Intrinsic) (Line 305, file prgen_read_ufile.f90)
                   EXP(Intrinsic) (Line 307, file prgen_read_ufile.f90)

Name  Messages
----  --------
BOUND_EXTRAP
      Defined as:  No definitions.

      Interface:   None

      Called By:   LOG(Intrinsic) (Line 235, file prgen_read_ufile.f90)
                   LOG(Intrinsic) (Line 245, file prgen_read_ufile.f90)

Name  Messages
----  --------
CUB_SPLINE
      Defined as:  No definitions.

      Interface:   None

      Called By:   LOG(Intrinsic) (Line 241, file prgen_read_ufile.f90)
                   LOG(Intrinsic) (Line 247, file prgen_read_ufile.f90)

Name  Messages
----  --------
EPSILON(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   LOG(Intrinsic) (Line 242, file prgen_read_ufile.f90)

Name  Messages
----  --------
EXP(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   PRGEN_GLOBALS (Line 305, file prgen_read_ufile.f90)
                   PRGEN_GLOBALS (Line 307, file prgen_read_ufile.f90)

Name  Messages
----  --------
INT(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   EPSILON(Intrinsic) (Line 140, file prgen_read_ufile.f90)

Name  Messages
----  --------
LOG(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   PRGEN_GLOBALS (Line 304, file prgen_read_ufile.f90)

Name  Messages
----  --------
MIN(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   EPSILON(Intrinsic) (Line 163, file prgen_read_ufile.f90)

Name  Messages
----  --------
PRGEN_GLOBALS
      Defined as:  No definitions.

      Used By:     PRGEN_READ_UFILE

Name  Messages
----  --------
PRGEN_READ_UFILE
      Defined as:  Subroutine (line 9, file prgen_read_ufile.f90)

      Interface:   None

      Calls:       ALLOCATE_INTERNALS (Line 47, file prgen_read_ufile.f90)
                   ALLOCATE_UFILE_VARS (Line 48, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 65, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 66, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 67, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 68, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 69, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 70, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 71, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 72, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 73, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 74, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 75, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 76, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 77, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 78, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 79, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 80, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 81, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 82, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 83, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 84, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 85, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 86, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 87, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 88, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 89, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 90, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 96, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 101, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 106, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 111, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 116, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 121, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 126, file prgen_read_ufile.f90)
                   UFILE_MAPPER (Line 131, file prgen_read_ufile.f90)
                   INT(Intrinsic) (Line 140, file prgen_read_ufile.f90)
                   MIN(Intrinsic) (Line 163, file prgen_read_ufile.f90)
                   SUM(Intrinsic) (Line 165, file prgen_read_ufile.f90)
                   SUM(Intrinsic) (Line 167, file prgen_read_ufile.f90)
                   ABS(Intrinsic) (Line 167, file prgen_read_ufile.f90)
                   ABS(Intrinsic) (Line 173, file prgen_read_ufile.f90)
                   SQRT(Intrinsic) (Line 173, file prgen_read_ufile.f90)

        Uses:      PRGEN_GLOBALS

Name  Messages
----  --------
SQRT(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   EPSILON(Intrinsic) (Line 173, file prgen_read_ufile.f90)

Name  Messages
----  --------
SUM(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   EPSILON(Intrinsic) (Line 165, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 167, file prgen_read_ufile.f90)
                   LOG(Intrinsic) (Line 225, file prgen_read_ufile.f90)

Name  Messages
----  --------
TRIM(Intrinsic)
      Defined as:  No definitions.

      Interface:   None

      Called By:   LOG(Intrinsic) (Line 212, file prgen_read_ufile.f90)

Name  Messages
----  --------
UFILE_MAPPER
      Defined as:  Subroutine (line 192, file prgen_read_ufile.f90)

      Interface:   None

      Called By:   EPSILON(Intrinsic) (Line 65, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 66, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 67, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 68, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 69, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 70, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 71, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 72, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 73, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 74, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 75, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 76, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 77, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 78, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 79, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 80, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 81, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 82, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 83, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 84, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 85, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 86, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 87, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 88, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 89, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 90, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 96, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 101, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 106, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 111, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 116, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 121, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 126, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 131, file prgen_read_ufile.f90)

      Calls:       TRIM(Intrinsic) (Line 212, file prgen_read_ufile.f90)
                   SUM(Intrinsic) (Line 225, file prgen_read_ufile.f90)
                   BOUND_EXTRAP (Line 235, file prgen_read_ufile.f90)
                   BOUND_EXTRAP (Line 245, file prgen_read_ufile.f90)
                   BOUND_EXP (Line 237, file prgen_read_ufile.f90)
                   CUB_SPLINE (Line 241, file prgen_read_ufile.f90)
                   CUB_SPLINE (Line 247, file prgen_read_ufile.f90)
                   ABS(Intrinsic) (Line 242, file prgen_read_ufile.f90)
                   EPSILON(Intrinsic) (Line 242, file prgen_read_ufile.f90)

Name  Messages
----  --------
_F90_TRIM(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None

Name  Messages
----  --------
__SUM(Intrinsic)
      Defined as:  No definitions.

                   No calls.  It is not called and does not use any procedure.

      Interface:   None


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
